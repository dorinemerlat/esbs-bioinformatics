[
  {
    "objectID": "practicals-2A/practical2.html",
    "href": "practicals-2A/practical2.html",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "The objective of this practicle is to explore variability within Saccharomyces cerevisiae by comparing the CBS2165a strain (used in Ale brewing) to the reference genome (S. cerevisiae S288C strain).\n\n\nSearch for the reference genome of S. cerevisiae S288C in the Genome database (NCBI).\n\nExercise 1 How many chromosomes in the yeast genome?\n\n\nExercise 2 For practical reasons, we will focus only on chromosome 3 for the mapping part. What is the size of chromosome?\n\n\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdMapping\ncd tdMapping\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nCreate an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/yeast/reads/chrIII/AAC_1.fq.gz and /data/yeast/reads/chrIII/AAC_2.fq.gz) inside a new directory called reads.\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reads\nln -s /data/yeast/reads/chrIII/AAC_*.fq.gz reads\nCreates symbolic links for all files starting with AAC_ and ending with .fq.gz in the reads directory.\n\n\n\nCreate a directory for the reference genome of the yeast (original path: /data/yeast/reference/sace_ref.fasta) and create an alias for the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reference\nln -s data/yeast/reference/sace_ref.fasta reference\n\n\n\n\n\n\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore reference/sace_ref.fasta\n\n\n\n\n\n\nFASTQ files are often compressed for storage efficiency and faster processing. Since you cannot read them directly with commands like more, you need to use the zcat command.\nzcat\nThe zcat command is used to display the contents of compressed files, specifically those with .gz extensions, without needing to decompress them first. It reads the contents of the compressed file and outputs them to the terminal.\nzcat &lt;file.gz&gt;\nzcatdisplay in one time all the contents of the file. You can also combine zcat with other commands like more to make the output easier to scroll through:\nzcat &lt;file.gz&gt; | more\n\n\n\n\n\n\nThe pipe (|)\n\n\n\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\nCombine the zcat and head commands to display the first 12 lines of each reads file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat reads/AAC_1.fq.gz | head -n 12\nzcat reads/AAC_2.fq.gz | head -n 12\n\n\n\n\n\n\n\nThe FastQC program returns a report on the quality of readings.\nfastqc -o &lt;output_directory_path&gt; &lt;reads_path&gt;\n\n-o &lt;output_directory_path&gt;: Specifies the directory where the FastQC reports will be saved.\n&lt;reads_path&gt;: Indicates the path to the input FASTQ files you want to analyze.\n\nCreate a directory to store FastQC outputs and run fastqc.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir fastQCReport\nfastqc -o fastQCReport reads/AAC*.fq.gz\n\n\n\nAn HTML file is generated by FastQC, which contains lines of code for displaying web pages. While you can attempt to view it using the more command, it’s not well-suited for direct reading. To properly inspect the quality metrics and identify potential issues with the sequencing data, it’s best to open the HTML reports in a web browser. Before doing so, you will need to transfer the file from the server to your local computer.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/TdExome/FastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 3 What do you think of the quality of the reads? Do we need to process the reads?\n\n\nExercise 4 What is the range of sequence length? What is the size of most reads?\n\n\nExercise 5 How many reads are available? Knowing that reads come from chromosome 3 (~316 Kb), provide an estimate of the average sequencing depth.\n\n\n\n\nBefore we can align sequencing reads to a reference genome, we must prepare the reference file using two key tools: bwa index and samtools faidx.\nbwa index: The bwa index command is used to create an index of the reference genome (in this case, human_genome.fasta). This index allows the BWA algorithm to efficiently search and align sequencing reads to the reference. Without the index, BWA would not be able to quickly identify where in the genome each read belongs, making the alignment process slow or impossible. The index is essential for speeding up the read mapping process.\nbwa index &lt;reference_file&gt;\nsamtools faidx: Similarly, samtools faidx generates an index for the reference FASTA file. This index allows samtools and other bioinformatics tools to quickly retrieve specific sequences or regions from the reference genome. This is useful when working with large genomes where extracting specific chromosomes or regions manually would be inefficient. The .fai file generated by this command is used by downstream tools for fast reference lookups.\nsamtools faidx &lt;reference_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd reference\nbwa index sace_ref.fasta\nsamtools faidx sace_ref.fasta\ncd ..\n\n\n\nYou get a lots of new files, forming a small database that you will use to align reads.\n\n\n\n\n\n\nKnow where you are\n\n\n\nTo find out your current location within the directory structure, use the command pwd (stands for “print working directory”). It outputs the full path of the directory you are currently in, helping you confirm your current location in the file system.\npwd\n\n\n\n\nbwa\nCreate a mapping directory (at the same level as reference and fastQCReport directories), move there and run BWA with the maximum exact matches (MEM) algorithm. This algorithm is faster and more accurate than previous BWA algorithms for aligning high-throughput sequencing data.\nThe command bwa mem uses BWA use the MEM algorithm:\nbwa mem -o &lt;path_of_output&gt; &lt;path_of_reference&gt; &lt;path_of_reads&gt;\nParameters:\n\n-o: This option specifies the output file. In this case, the aligned reads will be saved in the mapping directory as chrom22.sam.\n&lt;path_of_reference&gt;: This is the reference genome file against which the reads will be aligned.\n&lt;path_of_reads&gt;: This is the input file containing the sequencing reads that you want to align to the reference genome.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir mapping\nbwa mem -o mapping/AAC.sam reference/sace_ref.fasta reads/AAC_*.fq.gz\n\n\n\nView the file built by BWA.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore mapping/AAC.sam\n\n\n\n\nExercise 6 What is the format of this file? What information can be found in it?\n\n\nExercise 7 In what order are the sequences presented?\n\nTo manipulate the mapping file, we’ll use SAMtools.\nsamtools view This command is specifically used to convert between these formats and to filter, extract, or manipulate alignments.\nTo transform SAM file into BAM use the command like this:\nsamtools view -S -b -o &lt;name_of_BAM_output&gt; &lt;name_of_SAM_input&gt;\nWith:\n\n-S: indicate that the input file is in SAM format.\n-b: tell samtools to output the result in BAM format.\n-o: specify the name of the output file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd mapping \nsamtools view -S -b -o AAC.bam AAC.sam \n\n\n\n\nExercise 8 What does the BAM file represent in relation to the SAM file?\n\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls [-l] &lt;directory&gt;\nOptions:\n\n-l: This option provides a detailed listing. In this format, additional information about each file or directory is displayed, including:\n\nFile permissions\nNumber of links\nOwner name\nOwner group\nFile size (in bytes)\nLast modified date and time\nFile or directory name\n\n\n\nExercise 9 Compare the size of the SAM and BAM files.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls -l \n\n\n\nThe file now needs to be sorted and indexed with samtools sort and samtools index.\nsamtools sort\nThe samtools sort command is used to sort a BAM file. Sorting is essential for many downstream analyses, such as variant calling, as it organizes the reads in a way that allows for efficient processing. The command takes the following parameters:\nsamtools sort &lt;name_of_BAM_file&gt; -o &lt;name_of_sorted_BAM_file&gt;\nsamtools index\nThe samtools index command is used to create an index file for a sorted BAM file. Indexing allows for fast random access to data in the BAM file, making it easier and quicker to retrieve specific regions of interest during analysis. The command takes the following parameter:\nsamtools index &lt;name_of_sorted_BAM_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools sort AAC.bam -o AAC.sorted.bam\nsamtools index AAC.sorted.bam\n\n\n\n\nExercise 10 How is the file sorted now? To view its contents, use the command samtools view.\n\nsamtools view &lt;file_name&gt; | more\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view AAC.sorted.bam | more\n\n\n\nTo view few statistics about the mapping, use idxStats:\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools idxstats AAC.sorted.bam\n\n\n\n\nExercise 11 On which chromosome are the readings mainly mapped? Why are there so few on chromosome 17?\n\nSelect the part of the alignment corresponding to chromosome 3. To filter the file, use again the command samtools view but add the region.\nsamtools view -b -o &lt;name_of_BAM_output&gt; &lt;name_of_BAM_input&gt; &lt;region&gt;\n\n-b: This option indicates that the output should be in BAM format.\n-o &lt;name_of_BAM_output&gt;: This specifies the name of the output BAM file.\n&lt;name_of_BAM_input&gt;: This is the name of the input BAM file you want to filter.\n&lt;region&gt;: Specify the region you want to extract, such as chrIV or chrIV:1-1000000 to limit the output to a specific range on chromosome 3.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view -b -o AAC.sorted.filter.bam AAC.sorted.bam chrIII\n\n\n\nThen index this file with samtools index as previously.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools index AAC.sorted.filter.bam\n\n\n\nDownload the two 2 bam files of the alignment of chromosome 22 (the .bam and the .bam.bai).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;login&gt;@tp.lbgi.fr:~/tdMapping/mapping/AAC.sorted.filter.bam* .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\n\n\n\n\nUse the IGV-web application to visualize the mapping into details.\n\nSelect the genome of S. cerevisiae in the genome panel (in the top black bar), then select the chrIII in the the gray bar.\nLoad the bam file AAC.sorted.filter.bam and AAC.sorted.filter.bam with Tracks &gt; Local.\n\nYou should obtain the mapping on the annotated genome, which includes genes. To effectively visualize the reads, you’ll need to zoom in significantly, as the reads are much shorter compared to the entire chromosome size. This will allow you to see the reads clearly.\n\n\n\nExercise 12 What is the approximate depth of coverage in this region?\n\n\nExercise 13 How can you discriminate sequencing errors and real variations between strains?\n\n\nExercise 14 Give an example of an homozygous Single Nucleotide Variant (SNV) and of an heterozygous SNV in the ATG2 gene.\n\n\nExercise 15 What can you say about the region chrIII:55,696-55,701 in the ATG2 gene?\n\n\nExercise 16 What can we see at the location 54924? Is it a homozygous or heterozygous variant?\n\n\n\n\n\nExercise 17 What is the approximate depth of coverage in this region? Do you find heterozygous variants? How do you interpret it?\n\n\n\n\n\nExercise 18 What is the approximate depth of coverage in this region? How do you interpret it?\n\n\n\n\n\nExercise 19 What is the maximum depth of coverage in this region? What can be said about the YCR102C gene? Check the function of the gene in the Saccharomyces genome database."
  },
  {
    "objectID": "practicals-2A/practical2.html#reference-genome-and-reads",
    "href": "practicals-2A/practical2.html#reference-genome-and-reads",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "Search for the reference genome of S. cerevisiae S288C in the Genome database (NCBI).\n\nExercise 1 How many chromosomes in the yeast genome?\n\n\nExercise 2 For practical reasons, we will focus only on chromosome 3 for the mapping part. What is the size of chromosome?"
  },
  {
    "objectID": "practicals-2A/practical2.html#connection-to-the-server",
    "href": "practicals-2A/practical2.html#connection-to-the-server",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdMapping\ncd tdMapping\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command."
  },
  {
    "objectID": "practicals-2A/practical2.html#copying-and-displaying-files",
    "href": "practicals-2A/practical2.html#copying-and-displaying-files",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "Create an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/yeast/reads/chrIII/AAC_1.fq.gz and /data/yeast/reads/chrIII/AAC_2.fq.gz) inside a new directory called reads.\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reads\nln -s /data/yeast/reads/chrIII/AAC_*.fq.gz reads\nCreates symbolic links for all files starting with AAC_ and ending with .fq.gz in the reads directory.\n\n\n\nCreate a directory for the reference genome of the yeast (original path: /data/yeast/reference/sace_ref.fasta) and create an alias for the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reference\nln -s data/yeast/reference/sace_ref.fasta reference\n\n\n\n\n\n\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore reference/sace_ref.fasta\n\n\n\n\n\n\nFASTQ files are often compressed for storage efficiency and faster processing. Since you cannot read them directly with commands like more, you need to use the zcat command.\nzcat\nThe zcat command is used to display the contents of compressed files, specifically those with .gz extensions, without needing to decompress them first. It reads the contents of the compressed file and outputs them to the terminal.\nzcat &lt;file.gz&gt;\nzcatdisplay in one time all the contents of the file. You can also combine zcat with other commands like more to make the output easier to scroll through:\nzcat &lt;file.gz&gt; | more\n\n\n\n\n\n\nThe pipe (|)\n\n\n\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\nCombine the zcat and head commands to display the first 12 lines of each reads file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat reads/AAC_1.fq.gz | head -n 12\nzcat reads/AAC_2.fq.gz | head -n 12"
  },
  {
    "objectID": "practicals-2A/practical2.html#fastqc",
    "href": "practicals-2A/practical2.html#fastqc",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "The FastQC program returns a report on the quality of readings.\nfastqc -o &lt;output_directory_path&gt; &lt;reads_path&gt;\n\n-o &lt;output_directory_path&gt;: Specifies the directory where the FastQC reports will be saved.\n&lt;reads_path&gt;: Indicates the path to the input FASTQ files you want to analyze.\n\nCreate a directory to store FastQC outputs and run fastqc.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir fastQCReport\nfastqc -o fastQCReport reads/AAC*.fq.gz\n\n\n\nAn HTML file is generated by FastQC, which contains lines of code for displaying web pages. While you can attempt to view it using the more command, it’s not well-suited for direct reading. To properly inspect the quality metrics and identify potential issues with the sequencing data, it’s best to open the HTML reports in a web browser. Before doing so, you will need to transfer the file from the server to your local computer.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/TdExome/FastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 3 What do you think of the quality of the reads? Do we need to process the reads?\n\n\nExercise 4 What is the range of sequence length? What is the size of most reads?\n\n\nExercise 5 How many reads are available? Knowing that reads come from chromosome 3 (~316 Kb), provide an estimate of the average sequencing depth."
  },
  {
    "objectID": "practicals-2A/practical2.html#read-mapping-using-bwa",
    "href": "practicals-2A/practical2.html#read-mapping-using-bwa",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "Before we can align sequencing reads to a reference genome, we must prepare the reference file using two key tools: bwa index and samtools faidx.\nbwa index: The bwa index command is used to create an index of the reference genome (in this case, human_genome.fasta). This index allows the BWA algorithm to efficiently search and align sequencing reads to the reference. Without the index, BWA would not be able to quickly identify where in the genome each read belongs, making the alignment process slow or impossible. The index is essential for speeding up the read mapping process.\nbwa index &lt;reference_file&gt;\nsamtools faidx: Similarly, samtools faidx generates an index for the reference FASTA file. This index allows samtools and other bioinformatics tools to quickly retrieve specific sequences or regions from the reference genome. This is useful when working with large genomes where extracting specific chromosomes or regions manually would be inefficient. The .fai file generated by this command is used by downstream tools for fast reference lookups.\nsamtools faidx &lt;reference_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd reference\nbwa index sace_ref.fasta\nsamtools faidx sace_ref.fasta\ncd ..\n\n\n\nYou get a lots of new files, forming a small database that you will use to align reads.\n\n\n\n\n\n\nKnow where you are\n\n\n\nTo find out your current location within the directory structure, use the command pwd (stands for “print working directory”). It outputs the full path of the directory you are currently in, helping you confirm your current location in the file system.\npwd\n\n\n\n\nbwa\nCreate a mapping directory (at the same level as reference and fastQCReport directories), move there and run BWA with the maximum exact matches (MEM) algorithm. This algorithm is faster and more accurate than previous BWA algorithms for aligning high-throughput sequencing data.\nThe command bwa mem uses BWA use the MEM algorithm:\nbwa mem -o &lt;path_of_output&gt; &lt;path_of_reference&gt; &lt;path_of_reads&gt;\nParameters:\n\n-o: This option specifies the output file. In this case, the aligned reads will be saved in the mapping directory as chrom22.sam.\n&lt;path_of_reference&gt;: This is the reference genome file against which the reads will be aligned.\n&lt;path_of_reads&gt;: This is the input file containing the sequencing reads that you want to align to the reference genome.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir mapping\nbwa mem -o mapping/AAC.sam reference/sace_ref.fasta reads/AAC_*.fq.gz\n\n\n\nView the file built by BWA.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore mapping/AAC.sam\n\n\n\n\nExercise 6 What is the format of this file? What information can be found in it?\n\n\nExercise 7 In what order are the sequences presented?\n\nTo manipulate the mapping file, we’ll use SAMtools.\nsamtools view This command is specifically used to convert between these formats and to filter, extract, or manipulate alignments.\nTo transform SAM file into BAM use the command like this:\nsamtools view -S -b -o &lt;name_of_BAM_output&gt; &lt;name_of_SAM_input&gt;\nWith:\n\n-S: indicate that the input file is in SAM format.\n-b: tell samtools to output the result in BAM format.\n-o: specify the name of the output file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd mapping \nsamtools view -S -b -o AAC.bam AAC.sam \n\n\n\n\nExercise 8 What does the BAM file represent in relation to the SAM file?\n\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls [-l] &lt;directory&gt;\nOptions:\n\n-l: This option provides a detailed listing. In this format, additional information about each file or directory is displayed, including:\n\nFile permissions\nNumber of links\nOwner name\nOwner group\nFile size (in bytes)\nLast modified date and time\nFile or directory name\n\n\n\nExercise 9 Compare the size of the SAM and BAM files.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls -l \n\n\n\nThe file now needs to be sorted and indexed with samtools sort and samtools index.\nsamtools sort\nThe samtools sort command is used to sort a BAM file. Sorting is essential for many downstream analyses, such as variant calling, as it organizes the reads in a way that allows for efficient processing. The command takes the following parameters:\nsamtools sort &lt;name_of_BAM_file&gt; -o &lt;name_of_sorted_BAM_file&gt;\nsamtools index\nThe samtools index command is used to create an index file for a sorted BAM file. Indexing allows for fast random access to data in the BAM file, making it easier and quicker to retrieve specific regions of interest during analysis. The command takes the following parameter:\nsamtools index &lt;name_of_sorted_BAM_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools sort AAC.bam -o AAC.sorted.bam\nsamtools index AAC.sorted.bam\n\n\n\n\nExercise 10 How is the file sorted now? To view its contents, use the command samtools view.\n\nsamtools view &lt;file_name&gt; | more\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view AAC.sorted.bam | more\n\n\n\nTo view few statistics about the mapping, use idxStats:\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools idxstats AAC.sorted.bam\n\n\n\n\nExercise 11 On which chromosome are the readings mainly mapped? Why are there so few on chromosome 17?\n\nSelect the part of the alignment corresponding to chromosome 3. To filter the file, use again the command samtools view but add the region.\nsamtools view -b -o &lt;name_of_BAM_output&gt; &lt;name_of_BAM_input&gt; &lt;region&gt;\n\n-b: This option indicates that the output should be in BAM format.\n-o &lt;name_of_BAM_output&gt;: This specifies the name of the output BAM file.\n&lt;name_of_BAM_input&gt;: This is the name of the input BAM file you want to filter.\n&lt;region&gt;: Specify the region you want to extract, such as chrIV or chrIV:1-1000000 to limit the output to a specific range on chromosome 3.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view -b -o AAC.sorted.filter.bam AAC.sorted.bam chrIII\n\n\n\nThen index this file with samtools index as previously.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools index AAC.sorted.filter.bam\n\n\n\nDownload the two 2 bam files of the alignment of chromosome 22 (the .bam and the .bam.bai).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;login&gt;@tp.lbgi.fr:~/tdMapping/mapping/AAC.sorted.filter.bam* .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;."
  },
  {
    "objectID": "practicals-2A/practical2.html#visualization-of-the-mapping-with-igv",
    "href": "practicals-2A/practical2.html#visualization-of-the-mapping-with-igv",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "Use the IGV-web application to visualize the mapping into details.\n\nSelect the genome of S. cerevisiae in the genome panel (in the top black bar), then select the chrIII in the the gray bar.\nLoad the bam file AAC.sorted.filter.bam and AAC.sorted.filter.bam with Tracks &gt; Local.\n\nYou should obtain the mapping on the annotated genome, which includes genes. To effectively visualize the reads, you’ll need to zoom in significantly, as the reads are much shorter compared to the entire chromosome size. This will allow you to see the reads clearly.\n\n\n\nExercise 12 What is the approximate depth of coverage in this region?\n\n\nExercise 13 How can you discriminate sequencing errors and real variations between strains?\n\n\nExercise 14 Give an example of an homozygous Single Nucleotide Variant (SNV) and of an heterozygous SNV in the ATG2 gene.\n\n\nExercise 15 What can you say about the region chrIII:55,696-55,701 in the ATG2 gene?\n\n\nExercise 16 What can we see at the location 54924? Is it a homozygous or heterozygous variant?\n\n\n\n\n\nExercise 17 What is the approximate depth of coverage in this region? Do you find heterozygous variants? How do you interpret it?\n\n\n\n\n\nExercise 18 What is the approximate depth of coverage in this region? How do you interpret it?\n\n\n\n\n\nExercise 19 What is the maximum depth of coverage in this region? What can be said about the YCR102C gene? Check the function of the gene in the Saccharomyces genome database."
  },
  {
    "objectID": "practicals-3A/practical2.html",
    "href": "practicals-3A/practical2.html",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdExome\ncd TdExome\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using:\n\n&lt;command-h or &lt;command--help for short help messages.\nman &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\nReads have been obtained using Illumina sequencing (Single-end library) from the exome of chromosome 22 of a single human individual, a Caucasian female from US. Her family was one of the original trios in Hapmap project and she was part of the 1000 Genomes project.\nCreate an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original path:/data/human/reads/chrom22.fastq) inside your directory.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nln -s /data/human/reads/chrom22.fastq .\nThe dot (.) refers to the current working directory. When you execute the command, this tells the system to create the symbolic link (alias) for chrom22.fastq in the current directory where you are running the command.\n\n\n\nCreate a directory for the genome reference of the human (original path: /data/human/reference/human_genome.fasta) and create an alias for the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reference\nln -s /data/human/reference/human_genome.fasta reference\n\n\n\nDisplay data with the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore chrom22.fastq \n\n\n\n\nExercise 1 How many lines are used to represent each read?\n\n\nExercise 2 How many sequences are present in human_genome.fasta? What do they correspond to? Use the command grep to display only the identifier lines.\n\ngrep\nGrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Display the identifier lines\ngrep \"&gt;\" reference/human_genome.fasta \n\n# Count the identifier lines\ngrep -c \"&gt;\" reference/human_genome.fasta \n\n\n\n\n\n\nUse the fastqc tool to assess the quality of the reads. Before running fastqc, create a directory to store the output reports (with mkdircommand).\nFastQC\nFastQC is a quality control tool for high-throughput sequence data that provides an overview of various quality metrics, helping to identify potential issues with sequencing data.\nfastqc -o &lt;output_directory&gt; &lt;fastq_file&gt;\nThe option -o &lt;output_directory&gt; specifies the directory where the FastQC output files will be saved.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir FastQCReport\nfastqc -o FastQCReport chrom22.fastq\nfastcq analyzes the file chrom22.fastq and saves the results in the FastQCReport directory.\n\n\n\nMove the HTML output files to your local computer to view the results in a browser. Use the scp command for this (in a local terminal).\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/TdExome/FastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 3 How many sequences are available?\n\n\nExercise 4 What is the sequence length?\n\n\nExercise 5 Do you find poor quality sequences?\n\n\nExercise 6 What do you think of the overall data quality?\n\n\nExercise 7 Which part of the reads exhibit a lower quality?\n\n\n\n\n\n\nBefore we can align sequencing reads to a reference genome, we must prepare the reference file using two key tools: bwa index and samtools faidx.\nbwa index: The bwa index command is used to create an index of the reference genome (in this case, human_genome.fasta). This index allows the BWA algorithm to efficiently search and align sequencing reads to the reference. Without the index, BWA would not be able to quickly identify where in the genome each read belongs, making the alignment process slow or impossible. The index is essential for speeding up the read mapping process.\nbwa index &lt;reference_file&gt;\nsamtools faidx: Similarly, samtools faidx generates an index for the reference FASTA file. This index allows samtools and other bioinformatics tools to quickly retrieve specific sequences or regions from the reference genome. This is useful when working with large genomes where extracting specific chromosomes or regions manually would be inefficient. The .fai file generated by this command is used by downstream tools for fast reference lookups.\nsamtools faidx &lt;reference_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd reference\nbwa index human_genome.fasta\nsamtools faidx human_genome.fasta\ncd ..\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThese commands may take some time to complete (one hour). To save time, you can use the ln command to create links to already generated files. If you’ve already started the genome indexing process but interrupted it (with ctrl + C), make sure to remove any partially generated files before creating the links:\nrm reference/human_genome.fasta.*\nln -s /data/human/reference/human_genome.fasta.* reference/\n\n\nYou get a lots of new files, forming a small database that you will use to align reads.\n\n\n\n\n\n\nKnow where you are\n\n\n\nTo find out your current location within the directory structure, use the command pwd (stands for “print working directory”). It outputs the full path of the directory you are currently in, helping you confirm your current location in the file system.\npwd\n\n\n\n\n\nbwa\nCreate a mapping directory (at the same level as reference and FastQCReport directories), move there and run BWA with the maximum exact matches (MEM) algorithm. This algorithm is faster and more accurate than previous BWA algorithms for aligning high-throughput sequencing data.\nThe command bwa mem uses BWA use the MEM algorithm:\nbwa mem -o &lt;path_of_output&gt; &lt;path_of_reference&gt; &lt;path_of_reads&gt;\nParameters:\n\n-o: This option specifies the output file. In this case, the aligned reads will be saved in the mapping directory as chrom22.sam.\n&lt;path_of_reference&gt;: This is the reference genome file against which the reads will be aligned.\n&lt;path_of_reads&gt;: This is the input file containing the sequencing reads that you want to align to the reference genome.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir mapping\nbwa mem -o mapping/chrom22.sam reference/human_genome.fasta chrom22.fastq\n\n\n\n\nExercise 8 View the file built by BWA.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore mapping/chrom22.sam\n\n\n\n\nExercise 9 What is the format of this file? What information can be found in it?\n\n\nExercise 10 In what order are the sequences presented?\n\nTo manipulate the mapping file, we’ll use SAMtools.\nsamtools view This command is specifically used to convert between these formats and to filter, extract, or manipulate alignments.\nTo transform SAM file into BAM use the command like this:\nsamtools view -S -b -o &lt;name_of_BAM_output&gt; &lt;name_of_SAM_input&gt;\nWith:\n\n-S: indicate that the input file is in SAM format.\n-b: tell samtools to output the result in BAM format.\n-o: specify the name of the output file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd mapping \nsamtools view -S -b -o chrom22.bam chrom22.sam \n\n\n\n\nExercise 11 What does the BAM file represent in relation to the SAM file?\n\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls [-l] &lt;directory&gt;\nOptions:\n\n-l: This option provides a detailed listing. In this format, additional information about each file or directory is displayed, including:\n\nFile permissions\nNumber of links\nOwner name\nOwner group\nFile size (in bytes)\nLast modified date and time\nFile or directory name\n\n\n\nExercise 12 Compare the size of the SAM and BAM files.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls -l \n\n\n\nThe file now needs to be sorted and indexed with samtools sort and samtools index.\nsamtools sort\nThe samtools sort command is used to sort a BAM file. Sorting is essential for many downstream analyses, such as variant calling, as it organizes the reads in a way that allows for efficient processing. The command takes the following parameters:\nsamtools sort &lt;name_of_BAM_file&gt; -o &lt;name_of_sorted_BAM_file&gt;\nsamtools index\nThe samtools index command is used to create an index file for a sorted BAM file. Indexing allows for fast random access to data in the BAM file, making it easier and quicker to retrieve specific regions of interest during analysis. The command takes the following parameter:\nsamtools index &lt;name_of_sorted_BAM_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools sort chrom22.bam -o chrom22.sorted.bam\nsamtools index chrom22.sorted.bam\n\n\n\n\nExercise 13 How is the file sorted now? To view its contents, use the command samtools view.\n\nsamtools view &lt;file_name&gt; | more\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\n\n\n\n\nPipe Shortcut\n\n\n\n\nWindows and Linux: Alt Gr + 6\nMac keyboard: Option + Maj + L\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view chrom22.sorted.bam | more\n\n\n\nTo view few statistics about the mapping, use idxStats:\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools idxstats chrom22.sorted.bam\n\n\n\n\nExercise 14 How do you explain these results?\n\nSelect the part of the alignment corresponding to chromosome 3. To filter the file, use again the command samtools view but add the region.\nsamtools view -b -o &lt;name_of_BAM_output&gt; &lt;name_of_BAM_input&gt; &lt;region&gt;\n\n-b: This option indicates that the output should be in BAM format.\n-o &lt;name_of_BAM_output&gt;: This specifies the name of the output BAM file.\n&lt;name_of_BAM_input&gt;: This is the name of the input BAM file you want to filter.\n&lt;region&gt;: Specify the region you want to extract, such as chr3 or chr3:1-1000000 to limit the output to a specific range on chromosome 3.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view -b -o chrom22.sorted.filter.bam chrom22.sorted.bam chr22\n\n\n\nThen index this file with samtools index as previously.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools index chrom22.sorted.filter.bam\n\n\n\nDownload the two 2 bam files of the alignment of chromosome 22 (the .bam and the .bam.bai).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;login&gt;@tp.lbgi.fr:~/TdExome/mapping/chrom22.sorted.filter.bam* .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\n\n\n\nBAM files can be visualized using a browser. Display the filtered BAM data using IGV with Human hg38.\nYou can use your own files or used files available online.\n\nLoad the bam file chrom22.sorted.filter.bam and chrom22.sorted.filter.bam.bai with Local (Tracks &gt; Local).\nLoad the bam file https://lbgi.fr/~merlat/TD3/chr22_filter.bam & the index file https://lbgi.fr/~merlat/TD3/chr22_filter.bai with URL (Tracks &gt; URL).\n\nZoom in to display a small region of chromosome 22 (or a gene such as APOL5). Configure the display to highlight mismatches.\n\nExercise 15 Are reads exclusively mapped on exonic regions? Why?\n\n\nExercise 16 Do you think that all observed mismatches correspond to variants?\n\n\nExercise 17 What criteria have to be fulfilled to infer variants?\n\n\n\n\n\n\n\nAt the same level as reference, FastQCReport and mapping directories, create a directory variantCalling.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ..\nmkdir variantCalling\n\n\n\nA pileup is a column wise representation of the aligned read - at the base level - to the reference. The pileup file summarizes all data from the reads at each genomic region that is covered by at least one read.\nTo generate a pileup file using SAMtools, use samtools mpileup command with the specified options.\nsamtools mpileup\nsamtools mpileup -f &lt;reference_file&gt; &lt;bam_file&gt; &gt; &lt;pileup_output&gt;\nParameters:\n\n-f &lt;reference_file&gt;: Specifies the reference genome file to which the reads are aligned.\n&lt;bam_file&gt;: The input BAM file that contains the aligned reads. It must be sorted and indexed for efficient querying.\n&gt;: Redirects the standard output (stdout) to a file, saving the results of the command into the specified file rather than displaying them in the terminal.\n&lt;pileup_output&gt;: This writes the output to the specified pileup file.\n\nGenerate the pileup file and adjust the mapping quality to 50.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools mpileup -f reference/human_genome.fasta -C 50 aligned_reads.bam &gt; variantCalling/chrom22.pileup\n\n\n\nSearch online for the significance of each column.\n\n\n\nThe pileup described all aligned positions. To call SNVs, we have to filter:\n\nAligned positions that differ from the reference base\nPositions covered by minimum amount of reads (e.g. at least 10 reads)\nSites with variants with sufficient quality base scores\n\n\n\nThis command generates an interval format file.\nperl /bin/pileup_parser.pl &lt;input_pileup&gt; &lt;ref_base_column&gt; &lt;read_bases_column&gt; &lt;base_quality_column&gt; &lt;coverage column&gt; &lt;qv cutoff&gt; &lt;coverage cutoff&gt; &lt;SNPs only?&gt; &lt;output bed?&gt; &lt;coord_column&gt; &lt;out_file&gt; &lt;total_diff&gt; &lt;print_qual_bases&gt;\nArguments:\n\n&lt;input_pileup&gt;: Path to your input pileup file.\n&lt;ref_base_column&gt;: The column index (starting from 1) of the reference nucleotide.\n&lt;read_bases_column&gt;: The column index of the bases at that position from aligned reads.\n&lt;base_quality_column&gt;: The column index of the Phred quality.\n&lt;coverage_column&gt;: The column index of the depth of coverage.\n&lt;qv_cutoff&gt;: Quality value cutoff.\n&lt;coverage_cutoff&gt;: Coverage cutoff.\n&lt;SNPs_only&gt;: If you only want SNPs (yes/no).\n&lt;output_bed&gt;: If you want to output in BED format (yes/no).\n&lt;coord_column&gt;: The coordinate system.\n&lt;out_file&gt;: Path where you want to save the output (e.g., output.txt).\n&lt;total_diff&gt;: If you want to print the total number of differences (yes/no).\n&lt;print_qual_bases&gt;: If you want to print the quality bases (yes/no).\n\nUse this command to parse the pileup file by filling with the correct columns and the folowing options:\n\nDo not consider read bases with quality lower than = 20.\nDo not report positions with coverage lower than = 10.\nOnly SNPs.\nDo not produce a output in BED format.\nUse the coordinate system 2.\nDo not print the total number of difference.\nPrint the quality bases.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd variantCalling/\n/bin/pileup_parser.pl chrom22.pileup 3 5 6 4 20 10 Yes No 2 chrom22.pileup.parsed No Yes\n\n\n\n\nExercise 18 How many regions do you obtain? Use the command wc -l to count the number of lines.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l chrom22.pileup.parsed \n\n\n\n\n\n\nIn the interval file, SNV quality is indicated in column 7. Use awk to keep only lines where column 7 &gt; 50, combine with wc -l to count the number of keeped lines.\n\nExercise 19 How many reliable SNVs have been called? Use awk to keep only lines where column 7 &gt; 50, combine with wc -l to count the number of keeped lines.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nawk '$7 &gt; 50'  chrom22.pileup.parsed2 |wc -l\n\n\n\n\n\n\n\n\nGo to Variant Effect Predictor : http://grch37.ensembl.org/Homo_sapiens/Tools/VEP\nClick on Ensembl default below the white frame for input data\nPaste the URL : http://lbgi.fr/~weber/GC/TD3/2_VCF/chr22_filter.vcf.gz corresponding to the chr22 VCF file in the URL field.\nSelect the following options :\n\nTranscript database to use\nRefSeq transcripts\nAdditional configuration\nVariants and frequency data\nFrequency data for co-located variants:\nDISABLE 1000 Genomes global minor allele frequency\nENABLE gnomAD (exomes) allele frequencies\nPredictions\nPathogenicity predictions\nENABLE CADD\nFiltering options\nFilters\nRestrict results: Show one selected consequence per gene\n\nThen RUN !\n\nExercise 20 How many missense variants are there in this file ? (approximately)\n\nCreate a filter to select only missense_variant (Consequence is missense_variant)\nFocus on 22:23482483-23482483.\n\nExercise 21 On which gene is the variant ? Which exon ?\n\n\nExercise 22 Why is this variant difficult to interpret ? (MAF, scores)\n\n\nExercise 23 Bonus : is the variant referenced in ClinVar ?"
  },
  {
    "objectID": "practicals-3A/practical2.html#connection-to-the-server",
    "href": "practicals-3A/practical2.html#connection-to-the-server",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdExome\ncd TdExome\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using:\n\n&lt;command-h or &lt;command--help for short help messages.\nman &lt;command&gt; to display the full manual of a command."
  },
  {
    "objectID": "practicals-3A/practical2.html#raw-sequence-data-exome-of-chromosome-22",
    "href": "practicals-3A/practical2.html#raw-sequence-data-exome-of-chromosome-22",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "Reads have been obtained using Illumina sequencing (Single-end library) from the exome of chromosome 22 of a single human individual, a Caucasian female from US. Her family was one of the original trios in Hapmap project and she was part of the 1000 Genomes project.\nCreate an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original path:/data/human/reads/chrom22.fastq) inside your directory.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nln -s /data/human/reads/chrom22.fastq .\nThe dot (.) refers to the current working directory. When you execute the command, this tells the system to create the symbolic link (alias) for chrom22.fastq in the current directory where you are running the command.\n\n\n\nCreate a directory for the genome reference of the human (original path: /data/human/reference/human_genome.fasta) and create an alias for the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reference\nln -s /data/human/reference/human_genome.fasta reference\n\n\n\nDisplay data with the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore chrom22.fastq \n\n\n\n\nExercise 1 How many lines are used to represent each read?\n\n\nExercise 2 How many sequences are present in human_genome.fasta? What do they correspond to? Use the command grep to display only the identifier lines.\n\ngrep\nGrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Display the identifier lines\ngrep \"&gt;\" reference/human_genome.fasta \n\n# Count the identifier lines\ngrep -c \"&gt;\" reference/human_genome.fasta"
  },
  {
    "objectID": "practicals-3A/practical2.html#fastq---quality-control",
    "href": "practicals-3A/practical2.html#fastq---quality-control",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "Use the fastqc tool to assess the quality of the reads. Before running fastqc, create a directory to store the output reports (with mkdircommand).\nFastQC\nFastQC is a quality control tool for high-throughput sequence data that provides an overview of various quality metrics, helping to identify potential issues with sequencing data.\nfastqc -o &lt;output_directory&gt; &lt;fastq_file&gt;\nThe option -o &lt;output_directory&gt; specifies the directory where the FastQC output files will be saved.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir FastQCReport\nfastqc -o FastQCReport chrom22.fastq\nfastcq analyzes the file chrom22.fastq and saves the results in the FastQCReport directory.\n\n\n\nMove the HTML output files to your local computer to view the results in a browser. Use the scp command for this (in a local terminal).\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/TdExome/FastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 3 How many sequences are available?\n\n\nExercise 4 What is the sequence length?\n\n\nExercise 5 Do you find poor quality sequences?\n\n\nExercise 6 What do you think of the overall data quality?\n\n\nExercise 7 Which part of the reads exhibit a lower quality?"
  },
  {
    "objectID": "practicals-3A/practical2.html#alignement---mapping-to-the-reference-genome-fastq-to-bam",
    "href": "practicals-3A/practical2.html#alignement---mapping-to-the-reference-genome-fastq-to-bam",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "Before we can align sequencing reads to a reference genome, we must prepare the reference file using two key tools: bwa index and samtools faidx.\nbwa index: The bwa index command is used to create an index of the reference genome (in this case, human_genome.fasta). This index allows the BWA algorithm to efficiently search and align sequencing reads to the reference. Without the index, BWA would not be able to quickly identify where in the genome each read belongs, making the alignment process slow or impossible. The index is essential for speeding up the read mapping process.\nbwa index &lt;reference_file&gt;\nsamtools faidx: Similarly, samtools faidx generates an index for the reference FASTA file. This index allows samtools and other bioinformatics tools to quickly retrieve specific sequences or regions from the reference genome. This is useful when working with large genomes where extracting specific chromosomes or regions manually would be inefficient. The .fai file generated by this command is used by downstream tools for fast reference lookups.\nsamtools faidx &lt;reference_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd reference\nbwa index human_genome.fasta\nsamtools faidx human_genome.fasta\ncd ..\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThese commands may take some time to complete (one hour). To save time, you can use the ln command to create links to already generated files. If you’ve already started the genome indexing process but interrupted it (with ctrl + C), make sure to remove any partially generated files before creating the links:\nrm reference/human_genome.fasta.*\nln -s /data/human/reference/human_genome.fasta.* reference/\n\n\nYou get a lots of new files, forming a small database that you will use to align reads.\n\n\n\n\n\n\nKnow where you are\n\n\n\nTo find out your current location within the directory structure, use the command pwd (stands for “print working directory”). It outputs the full path of the directory you are currently in, helping you confirm your current location in the file system.\npwd\n\n\n\n\n\nbwa\nCreate a mapping directory (at the same level as reference and FastQCReport directories), move there and run BWA with the maximum exact matches (MEM) algorithm. This algorithm is faster and more accurate than previous BWA algorithms for aligning high-throughput sequencing data.\nThe command bwa mem uses BWA use the MEM algorithm:\nbwa mem -o &lt;path_of_output&gt; &lt;path_of_reference&gt; &lt;path_of_reads&gt;\nParameters:\n\n-o: This option specifies the output file. In this case, the aligned reads will be saved in the mapping directory as chrom22.sam.\n&lt;path_of_reference&gt;: This is the reference genome file against which the reads will be aligned.\n&lt;path_of_reads&gt;: This is the input file containing the sequencing reads that you want to align to the reference genome.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir mapping\nbwa mem -o mapping/chrom22.sam reference/human_genome.fasta chrom22.fastq\n\n\n\n\nExercise 8 View the file built by BWA.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore mapping/chrom22.sam\n\n\n\n\nExercise 9 What is the format of this file? What information can be found in it?\n\n\nExercise 10 In what order are the sequences presented?\n\nTo manipulate the mapping file, we’ll use SAMtools.\nsamtools view This command is specifically used to convert between these formats and to filter, extract, or manipulate alignments.\nTo transform SAM file into BAM use the command like this:\nsamtools view -S -b -o &lt;name_of_BAM_output&gt; &lt;name_of_SAM_input&gt;\nWith:\n\n-S: indicate that the input file is in SAM format.\n-b: tell samtools to output the result in BAM format.\n-o: specify the name of the output file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd mapping \nsamtools view -S -b -o chrom22.bam chrom22.sam \n\n\n\n\nExercise 11 What does the BAM file represent in relation to the SAM file?\n\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls [-l] &lt;directory&gt;\nOptions:\n\n-l: This option provides a detailed listing. In this format, additional information about each file or directory is displayed, including:\n\nFile permissions\nNumber of links\nOwner name\nOwner group\nFile size (in bytes)\nLast modified date and time\nFile or directory name\n\n\n\nExercise 12 Compare the size of the SAM and BAM files.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls -l \n\n\n\nThe file now needs to be sorted and indexed with samtools sort and samtools index.\nsamtools sort\nThe samtools sort command is used to sort a BAM file. Sorting is essential for many downstream analyses, such as variant calling, as it organizes the reads in a way that allows for efficient processing. The command takes the following parameters:\nsamtools sort &lt;name_of_BAM_file&gt; -o &lt;name_of_sorted_BAM_file&gt;\nsamtools index\nThe samtools index command is used to create an index file for a sorted BAM file. Indexing allows for fast random access to data in the BAM file, making it easier and quicker to retrieve specific regions of interest during analysis. The command takes the following parameter:\nsamtools index &lt;name_of_sorted_BAM_file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools sort chrom22.bam -o chrom22.sorted.bam\nsamtools index chrom22.sorted.bam\n\n\n\n\nExercise 13 How is the file sorted now? To view its contents, use the command samtools view.\n\nsamtools view &lt;file_name&gt; | more\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\n\n\n\n\nPipe Shortcut\n\n\n\n\nWindows and Linux: Alt Gr + 6\nMac keyboard: Option + Maj + L\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view chrom22.sorted.bam | more\n\n\n\nTo view few statistics about the mapping, use idxStats:\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools idxstats chrom22.sorted.bam\n\n\n\n\nExercise 14 How do you explain these results?\n\nSelect the part of the alignment corresponding to chromosome 3. To filter the file, use again the command samtools view but add the region.\nsamtools view -b -o &lt;name_of_BAM_output&gt; &lt;name_of_BAM_input&gt; &lt;region&gt;\n\n-b: This option indicates that the output should be in BAM format.\n-o &lt;name_of_BAM_output&gt;: This specifies the name of the output BAM file.\n&lt;name_of_BAM_input&gt;: This is the name of the input BAM file you want to filter.\n&lt;region&gt;: Specify the region you want to extract, such as chr3 or chr3:1-1000000 to limit the output to a specific range on chromosome 3.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools view -b -o chrom22.sorted.filter.bam chrom22.sorted.bam chr22\n\n\n\nThen index this file with samtools index as previously.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools index chrom22.sorted.filter.bam\n\n\n\nDownload the two 2 bam files of the alignment of chromosome 22 (the .bam and the .bam.bai).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;login&gt;@tp.lbgi.fr:~/TdExome/mapping/chrom22.sorted.filter.bam* .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\n\n\n\nBAM files can be visualized using a browser. Display the filtered BAM data using IGV with Human hg38.\nYou can use your own files or used files available online.\n\nLoad the bam file chrom22.sorted.filter.bam and chrom22.sorted.filter.bam.bai with Local (Tracks &gt; Local).\nLoad the bam file https://lbgi.fr/~merlat/TD3/chr22_filter.bam & the index file https://lbgi.fr/~merlat/TD3/chr22_filter.bai with URL (Tracks &gt; URL).\n\nZoom in to display a small region of chromosome 22 (or a gene such as APOL5). Configure the display to highlight mismatches.\n\nExercise 15 Are reads exclusively mapped on exonic regions? Why?\n\n\nExercise 16 Do you think that all observed mismatches correspond to variants?\n\n\nExercise 17 What criteria have to be fulfilled to infer variants?"
  },
  {
    "objectID": "practicals-3A/practical2.html#calling-single-nucleotide-variations-snvs-pileup-interval-and-bed-files",
    "href": "practicals-3A/practical2.html#calling-single-nucleotide-variations-snvs-pileup-interval-and-bed-files",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "At the same level as reference, FastQCReport and mapping directories, create a directory variantCalling.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ..\nmkdir variantCalling\n\n\n\nA pileup is a column wise representation of the aligned read - at the base level - to the reference. The pileup file summarizes all data from the reads at each genomic region that is covered by at least one read.\nTo generate a pileup file using SAMtools, use samtools mpileup command with the specified options.\nsamtools mpileup\nsamtools mpileup -f &lt;reference_file&gt; &lt;bam_file&gt; &gt; &lt;pileup_output&gt;\nParameters:\n\n-f &lt;reference_file&gt;: Specifies the reference genome file to which the reads are aligned.\n&lt;bam_file&gt;: The input BAM file that contains the aligned reads. It must be sorted and indexed for efficient querying.\n&gt;: Redirects the standard output (stdout) to a file, saving the results of the command into the specified file rather than displaying them in the terminal.\n&lt;pileup_output&gt;: This writes the output to the specified pileup file.\n\nGenerate the pileup file and adjust the mapping quality to 50.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nsamtools mpileup -f reference/human_genome.fasta -C 50 aligned_reads.bam &gt; variantCalling/chrom22.pileup\n\n\n\nSearch online for the significance of each column.\n\n\n\nThe pileup described all aligned positions. To call SNVs, we have to filter:\n\nAligned positions that differ from the reference base\nPositions covered by minimum amount of reads (e.g. at least 10 reads)\nSites with variants with sufficient quality base scores\n\n\n\nThis command generates an interval format file.\nperl /bin/pileup_parser.pl &lt;input_pileup&gt; &lt;ref_base_column&gt; &lt;read_bases_column&gt; &lt;base_quality_column&gt; &lt;coverage column&gt; &lt;qv cutoff&gt; &lt;coverage cutoff&gt; &lt;SNPs only?&gt; &lt;output bed?&gt; &lt;coord_column&gt; &lt;out_file&gt; &lt;total_diff&gt; &lt;print_qual_bases&gt;\nArguments:\n\n&lt;input_pileup&gt;: Path to your input pileup file.\n&lt;ref_base_column&gt;: The column index (starting from 1) of the reference nucleotide.\n&lt;read_bases_column&gt;: The column index of the bases at that position from aligned reads.\n&lt;base_quality_column&gt;: The column index of the Phred quality.\n&lt;coverage_column&gt;: The column index of the depth of coverage.\n&lt;qv_cutoff&gt;: Quality value cutoff.\n&lt;coverage_cutoff&gt;: Coverage cutoff.\n&lt;SNPs_only&gt;: If you only want SNPs (yes/no).\n&lt;output_bed&gt;: If you want to output in BED format (yes/no).\n&lt;coord_column&gt;: The coordinate system.\n&lt;out_file&gt;: Path where you want to save the output (e.g., output.txt).\n&lt;total_diff&gt;: If you want to print the total number of differences (yes/no).\n&lt;print_qual_bases&gt;: If you want to print the quality bases (yes/no).\n\nUse this command to parse the pileup file by filling with the correct columns and the folowing options:\n\nDo not consider read bases with quality lower than = 20.\nDo not report positions with coverage lower than = 10.\nOnly SNPs.\nDo not produce a output in BED format.\nUse the coordinate system 2.\nDo not print the total number of difference.\nPrint the quality bases.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd variantCalling/\n/bin/pileup_parser.pl chrom22.pileup 3 5 6 4 20 10 Yes No 2 chrom22.pileup.parsed No Yes\n\n\n\n\nExercise 18 How many regions do you obtain? Use the command wc -l to count the number of lines.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l chrom22.pileup.parsed \n\n\n\n\n\n\nIn the interval file, SNV quality is indicated in column 7. Use awk to keep only lines where column 7 &gt; 50, combine with wc -l to count the number of keeped lines.\n\nExercise 19 How many reliable SNVs have been called? Use awk to keep only lines where column 7 &gt; 50, combine with wc -l to count the number of keeped lines.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nawk '$7 &gt; 50'  chrom22.pileup.parsed2 |wc -l"
  },
  {
    "objectID": "practicals-3A/practical2.html#annotation-of-variants",
    "href": "practicals-3A/practical2.html#annotation-of-variants",
    "title": "Practical - Exome analysis (SNV calling)",
    "section": "",
    "text": "Go to Variant Effect Predictor : http://grch37.ensembl.org/Homo_sapiens/Tools/VEP\nClick on Ensembl default below the white frame for input data\nPaste the URL : http://lbgi.fr/~weber/GC/TD3/2_VCF/chr22_filter.vcf.gz corresponding to the chr22 VCF file in the URL field.\nSelect the following options :\n\nTranscript database to use\nRefSeq transcripts\nAdditional configuration\nVariants and frequency data\nFrequency data for co-located variants:\nDISABLE 1000 Genomes global minor allele frequency\nENABLE gnomAD (exomes) allele frequencies\nPredictions\nPathogenicity predictions\nENABLE CADD\nFiltering options\nFilters\nRestrict results: Show one selected consequence per gene\n\nThen RUN !\n\nExercise 20 How many missense variants are there in this file ? (approximately)\n\nCreate a filter to select only missense_variant (Consequence is missense_variant)\nFocus on 22:23482483-23482483.\n\nExercise 21 On which gene is the variant ? Which exon ?\n\n\nExercise 22 Why is this variant difficult to interpret ? (MAF, scores)\n\n\nExercise 23 Bonus : is the variant referenced in ClinVar ?"
  },
  {
    "objectID": "practicals-2A/practical4.html",
    "href": "practicals-2A/practical4.html",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "Sulcia muelleri is an intracellular endosymbiotic bacterium. It lives inside an insect with another symbiotic bacterium. S. muelleri genome is extremely reduced with a size of 245,530 bp.\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdAnnotation\ncd tdAnnotation\n\n\n\n\n\n\n\n\nCreate an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/bacteria/genome/sulcia.tfa) inside a new directory called sulcia.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir sulcia\nln -s /data/bacteria/genome/sulcia.tfa sulcia\nCreates symbolic links for the file sulcia.tfa in the sulcia directory.\n\n\n\n\n\n\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore sulcia/sulcia.tfa\n\n\n\n\n\n\n\n\n\nYou will use the tRNAscan-SE program. It is a tool used to detect and annotate tRNA genes in genomic sequences and can distinguish them from pseudogenes.\nTo see options:\ntRNAscan-SE -help\nCreate a directory called tRNA to save the output files, then use the command with the necessary options to identify tRNA sequences and their secondary structures in the genome of S. muelleri.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tRNA\ncd tRNA\ntRNAscan-SE -B -o sulcia.trnascan -f sulcia_structure.trnascan ../sulcia/sulcia.tfa\n\n../sulcia/sulcia.tfa: This is the path to the input file, indicating that it is located in the sulcia directory, which is one level up from the current directory.\n\n\n\n\n\nExercise 1 How many genes are found? Are all amino acid represented? Is there redundancy (several tRNA genes with the same anti-codon)?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# View the contents of the output file\nmore sulcia.trnascan\n\n# Count the number of lines in the output file (then subtract 3 for the header)\nwc -l sulcia.trnascan\n\n\n\nReformat the file containing the secondary structure using the house tool format_trnascan.sh (refer to the help for usage instructions). Then, select some sequences and visualize their structures using the online tool FORNA.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nformat_trnascan.sh -i sulcia_structure.trnascan -o sulcia_structure.trnascan.reformated\n\n\n\n\nExercise 2 Are their structures consistent with the known tRNA structures?\n\n\n\n\nWe want to find the approximate positions of rRNA genes on the S. muelleri genome by similarity using BLASTN and rRNA sequences from Sulcia or closely related species. Thus, we have to construct a BLAST database from the Sulcia genomic sequence.\n\n\nBefore conducting a similarity search with BLAST, it is essential to create a BLAST database from your sequence data. This database serves as the reference against which your queries will be compared.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nGo to sulcia directory and create blast database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ../sulcia\nmakeblastdb -in sulcia.tfa -dbtype nucl -out sulcia\n\n\n\n\n\n\nThe sequences of rRNA genes are available in FASTA format in the directory /data/bacteria/rRNA.\n\n5S of Sulcia muelleri\n23S of Myroides odoratus (m62807)\n16S of Coleomegilla maculata endosymbiont (y13889)\n\nIn a new directory called rRNA (at the same level as sulcia and tRNA directories), create symbolic links to acces easely to the files.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ../\nmkdir rRNA\ncd rRNA\nln -s /data/bacteria/rRNA/5S_Sulcia.tfa .\nln -s /data/bacteria/rRNA/23S_Myroides.tfa .\nln -s /data/bacteria/rRNA/16S_Coleo.tfa .\n\nThe dot (`.`) refers to the current working directory. When you execute the command, this tells the system to create the symbolic link (alias) for chrom22.fastq in the current directory where you are running the command.\n\n\n\nFor each rRNA, you will perform a BLASTN search in the sulcia using the blastn command. To see the list of parameters of this command use:\nblastn -help\nConstruct the BLASTN command and execute it for each of the rRNA sequences.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -db ../sulcia/sulcia -query 5S_Sulcia.tfa -out 5S.blastn\nblastn -db ../sulcia/sulcia -query 16S_Coleo.tfa -out 16S.blastn\nblastn -db ../sulcia/sulcia -query 23S_Myroides.tfa -out 23S.blastn\n\n\n\n\nExercise 3 How many copies of each rRNA gene do you find? Comment on gene organization (do not forget to consider positions of tRNA genes).\n\nUse more to display them.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore 5S.blastn\nmore 16S.blastn\nmore 23S.blastn\n\n\n\n\n\n\n\n\n\n\nGlimmer is a gene-finding program designed for the identification of protein-coding genes in prokaryotic genomes by utilizing a combination of statistical models and machine learning techniques.\nCreate a directory called protein (at the same level as sulcia, tRNA and rRNA directories).\nRefer to the help documentation of run-glimmer2 to understand its usage, and then execute Glimmer on the genome of Sulcia muelleri.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir ../protein\ncd ../protein\nrun-glimmer2 ../sulcia/sulcia.tfa\n\n\n\n4 files will be created by glimmer:\n\ntmp.coord and tmp.train contain coordinates and sequences of reference genes from the training set\ntmp.model contains the model built by glimmer (binary format, do not open it!)\nthe last file g2.coord contains genes predicted by glimmer.\n\nYou can display tmp.coord and tmp.train.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore tmp.coord\nmore tmp.train\n\n\n\n\nExercise 4 How many genes have been used to build the model (file tmp.coord)? Use the command wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore tmp.train |wc -l\n\n\n\n\nExercise 5 What do you think about the number of predicted genes? The coding density?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore g2.coord |wc -l\n\n\n\n\nExercise 6 How the percentage of GC content may influence the quality of glimmer predictions? Use seqkit fx2tab to calculate it.\n\nseqkit\nSeqKit is a toolkit for manipulating biological sequence data in various formats, including FASTA and FASTQ. It offers a wide range of functionalities such as filtering, converting, and summarizing sequences.\nOne of the useful commands in SeqKit is seqkit fx2tab, which converts FASTA or FASTQ files into a tabular format, and provide various information.\nConsult the help documentation to understand how to use the tool effectively. To streamline the output, exclude the sequence from the results.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nseqkit fx2tab -n -g ../sulcia/sulcia.tfa\n\n\n\n\n\n\n\n\nSome genes predicted by glimmer exhibit important overlaps. Some examples of these genes have been translated (protein_sequences.txt available on moodle).\n\nExercise 7 Consider genomic context and similarity searches (NCBI BLAST, refseq_protein database, excluding Candidatus Sulcia) to validate or invalidate the existence or propose a correction for the following overlapping genes: SMU001/SMU002 and SMU023/SMU024.\n\n\n\n\n\nExercise 8 Check if the following long intergenic regions (available on Moodle) contain a protein coding gene (using NCBI BLAST pages, refseq_protein database and excluding Candidatus Sulcia): SMU043/SMU044, SMU204/SMU206 and SMU183/SMU184.\n\n\n\n\n\n\n\nExercise 9 Assign a function of the following protein (available on Moodle) sequences using NCBI BLAST (refseq_protein database and excluding Candidatus Sulcia): SMU138 et SMU140.\n\n\nExercise 10 What additional research would be needed in this case?"
  },
  {
    "objectID": "practicals-2A/practical1.html",
    "href": "practicals-2A/practical1.html",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "To practise quality control and pre-processing of raw NGS data, we will use small datasets. The tools are available in Galaxy, a platform for omics data analysis.\nFirst step: log on to https://usegalaxy.fr\nthen, to ensure you have sufficient resources, go to the url:\nhttps://usegalaxy.fr/join-training/td1genomics/\nYou can then return to galaxy.\n\n\nYou can rename your history (right panel).\nThe 1st data set concerns a metagenomic study of the microbiome of the oral cavity of a snake. After extraction and fragmentation of the sample DNA, part of the 16S rRNA gene was amplified and sequenced (Illumina Single End) in order to identify the bacteria present. Due to time constraints, only part of the data will be analysed.\n\n\n\nImport the FASTQ file from the zenodo server:\n\nCopy the address of the link: https://zenodo.org/record/3977236/files/female_oral2.fastq-4143.gz\nIn Galaxy, use the Upload Data button (top left) then Paste/Fetch data, copy the link and launch (start).\n\nLook at the file (eye icon).\n\n\nExercise 1 What are the characteristics of the FASTQ format?\n\n\nExercise 2 Given that the scores are encoded using the SANGER/Illumina 1.8+ system, what is the score value for most of the bases at the start of the 1st read? Is this satisfactory?\n\n\n\n\nOpen the FASTQ Quality Control toolbox (left panel) and choose FastQC.\nFastQC\nExplore the quality of reads with FastQC (default settings). See the FastQC website for help and examples of analysis.\n\nExercise 3 Per Base Sequence Quality: How long are the reads? How does the quality evolve along the reads?\n\n\nExercise 4 Per sequence quality scores: What can be deduced from this graph?\n\n\nExercise 5 Per base sequence content: In the case of genome sequencing (without specific amplification), what should this graph look like? Is the result obtained normal in our case?\n\n\nExercise 6 Adapter content: Which adapter is detected?\n\n\n\n\n\nUse Trimmomatic (FASTQ Quality control section) to improve the quality of reads:\n\n\nPerform initial IllUMINACLIP step? Yes, select Nextera\nSliding window trimming (proposed by default)\nDrop reads below a specific length (MINLEN): 20\n\n\nExercise 7 Perform FastQC analysis again on the processed reads and compare the results to the raw data. Is the result acceptable?\n\n\nExercise 8 What would be the next step to identify the microbial species present in the snake’s oral cavity from these reads?\n\n\n\n\n\nThis dataset contains 50,000 PacBio HiFi reads from the sequencing of a human genome (PacBio - GIAB sample HG002).\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/m64011_190830_220126.Q20.subsample.fastq.gz\n\nPerform quality control with Nanoplot (available in Nanopore). This tool can only be used for long reads (PacBio or Nanopore):\n\n\nOptions for customizing the plot created:\nSpecify the bivariate format of the plots: dot\nShow the N50 mark in the read length histogram: Yes\n\n\n\n\n\nExercise 9 What is the average length of reads? Significant variations in read size are observed in the PacBio data, unlike the Illumina data. Why?\n\n\nExercise 10 What does N5O represent in this case?\n\n\nExercise 11 How useful can the Yield by length chart be?\n\n\nExercise 12 Read length vs Average read qualiy plot using dots: No read is observed with Q&lt;20. Why? Is there a link between read size and quality?\n\n\n\n\n\nThe last set corresponds to nanopore reads obtained from a plant genome. We will use PycoQC for quality control. This only works with Nanopores readings; it requires specific information provided by nanopore basecallers such as Guppy.\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/nanopore_basecalled-guppy.fastq.gz https://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/sequencing_summary.txt\n\n\n\n\nExercise 13 How many reads are available? How many bases does this represent?\n\n\nExercise 14 How do you explain the discrepancy between median reading size and N50?\n\n\nExercise 15 Basecalled reads length: what can you say about the distribution of lengths?\n\n\nExercise 16 Basecalled reads quality: What range do most quality scores fall into?"
  },
  {
    "objectID": "practicals-2A/practical1.html#illumina-se",
    "href": "practicals-2A/practical1.html#illumina-se",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "You can rename your history (right panel).\nThe 1st data set concerns a metagenomic study of the microbiome of the oral cavity of a snake. After extraction and fragmentation of the sample DNA, part of the 16S rRNA gene was amplified and sequenced (Illumina Single End) in order to identify the bacteria present. Due to time constraints, only part of the data will be analysed.\n\n\n\nImport the FASTQ file from the zenodo server:\n\nCopy the address of the link: https://zenodo.org/record/3977236/files/female_oral2.fastq-4143.gz\nIn Galaxy, use the Upload Data button (top left) then Paste/Fetch data, copy the link and launch (start).\n\nLook at the file (eye icon).\n\n\nExercise 1 What are the characteristics of the FASTQ format?\n\n\nExercise 2 Given that the scores are encoded using the SANGER/Illumina 1.8+ system, what is the score value for most of the bases at the start of the 1st read? Is this satisfactory?\n\n\n\n\nOpen the FASTQ Quality Control toolbox (left panel) and choose FastQC.\nFastQC\nExplore the quality of reads with FastQC (default settings). See the FastQC website for help and examples of analysis.\n\nExercise 3 Per Base Sequence Quality: How long are the reads? How does the quality evolve along the reads?\n\n\nExercise 4 Per sequence quality scores: What can be deduced from this graph?\n\n\nExercise 5 Per base sequence content: In the case of genome sequencing (without specific amplification), what should this graph look like? Is the result obtained normal in our case?\n\n\nExercise 6 Adapter content: Which adapter is detected?\n\n\n\n\n\nUse Trimmomatic (FASTQ Quality control section) to improve the quality of reads:\n\n\nPerform initial IllUMINACLIP step? Yes, select Nextera\nSliding window trimming (proposed by default)\nDrop reads below a specific length (MINLEN): 20\n\n\nExercise 7 Perform FastQC analysis again on the processed reads and compare the results to the raw data. Is the result acceptable?\n\n\nExercise 8 What would be the next step to identify the microbial species present in the snake’s oral cavity from these reads?"
  },
  {
    "objectID": "practicals-2A/practical1.html#pacbio-hifi",
    "href": "practicals-2A/practical1.html#pacbio-hifi",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "This dataset contains 50,000 PacBio HiFi reads from the sequencing of a human genome (PacBio - GIAB sample HG002).\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/m64011_190830_220126.Q20.subsample.fastq.gz\n\nPerform quality control with Nanoplot (available in Nanopore). This tool can only be used for long reads (PacBio or Nanopore):\n\n\nOptions for customizing the plot created:\nSpecify the bivariate format of the plots: dot\nShow the N50 mark in the read length histogram: Yes\n\n\n\n\n\nExercise 9 What is the average length of reads? Significant variations in read size are observed in the PacBio data, unlike the Illumina data. Why?\n\n\nExercise 10 What does N5O represent in this case?\n\n\nExercise 11 How useful can the Yield by length chart be?\n\n\nExercise 12 Read length vs Average read qualiy plot using dots: No read is observed with Q&lt;20. Why? Is there a link between read size and quality?"
  },
  {
    "objectID": "practicals-2A/practical1.html#nanopore",
    "href": "practicals-2A/practical1.html#nanopore",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "The last set corresponds to nanopore reads obtained from a plant genome. We will use PycoQC for quality control. This only works with Nanopores readings; it requires specific information provided by nanopore basecallers such as Guppy.\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/nanopore_basecalled-guppy.fastq.gz https://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/sequencing_summary.txt\n\n\n\n\nExercise 13 How many reads are available? How many bases does this represent?\n\n\nExercise 14 How do you explain the discrepancy between median reading size and N50?\n\n\nExercise 15 Basecalled reads length: what can you say about the distribution of lengths?\n\n\nExercise 16 Basecalled reads quality: What range do most quality scores fall into?"
  },
  {
    "objectID": "help/server_connection_guide.html",
    "href": "help/server_connection_guide.html",
    "title": "Server Connection Guide",
    "section": "",
    "text": "In some of our practical sessions, we will be using the Linux server hosted by the iCube CSTB team (formerly known as LBGI). You can access this server from any operating system—whether you’re using Windows, macOS, or Linux.\n\n\n\nWindows users: Open the Command Prompt (called Invite de commande in French). You can do this by typing “cmd” in the search bar and pressing Enter.\nMacOS or Linux users: Open the Terminal application. On macOS, you can find it using Spotlight (press Cmd + Space and type “Terminal”). On Linux, it’s usually located in your applications under “Utilities” or you can use a keyboard shortcut (like Ctrl + Alt + T).\n\n\n\n\nTo connect to the server, we’ll use the ssh command, which allows you to establish a secure connection to a remote machine (in this case, the LBGI server). You have each been assigned an account on the server. Your username (login) is typically your last name (in lowercase), or your first last name if you have multiple.\nIn the terminal, type the following command (replacing yourlastname with your actual login name):\nssh yourlastname@tp.lbgi.fr\nAfter typing the command, press Enter.\n\n\n\nYou will be prompted to enter a password. The password for everyone is:\nTPgenomics2025\n\n\n\n\n\n\nImportant\n\n\n\nThe password will not be visible as you type. This is a security feature. You won’t see any characters appear on the screen, but don’t worry—just type it and press Enter when done.\n\n\nIf this is your first time connecting to the server, you may see a message like the following:\nAre you sure you want to continue connecting (yes/no)?\nSimply type yes and press Enter.\n\n\n\nOnce you’ve successfully logged in, a welcome message will appear. This confirms that you’re now connected to the server and ready to proceed with your practical work.\nTo disconnect from the server when you’re done (at the end of the practical), simply type:\nexit\nYou can now return to the practical instructions and continue with the exercises."
  },
  {
    "objectID": "help/server_connection_guide.html#step-1-open-a-terminal",
    "href": "help/server_connection_guide.html#step-1-open-a-terminal",
    "title": "Server Connection Guide",
    "section": "",
    "text": "Windows users: Open the Command Prompt (called Invite de commande in French). You can do this by typing “cmd” in the search bar and pressing Enter.\nMacOS or Linux users: Open the Terminal application. On macOS, you can find it using Spotlight (press Cmd + Space and type “Terminal”). On Linux, it’s usually located in your applications under “Utilities” or you can use a keyboard shortcut (like Ctrl + Alt + T)."
  },
  {
    "objectID": "help/server_connection_guide.html#use-the-ssh-command",
    "href": "help/server_connection_guide.html#use-the-ssh-command",
    "title": "Server Connection Guide",
    "section": "",
    "text": "To connect to the server, we’ll use the ssh command, which allows you to establish a secure connection to a remote machine (in this case, the LBGI server). You have each been assigned an account on the server. Your username (login) is typically your last name (in lowercase), or your first last name if you have multiple.\nIn the terminal, type the following command (replacing yourlastname with your actual login name):\nssh yourlastname@tp.lbgi.fr\nAfter typing the command, press Enter."
  },
  {
    "objectID": "help/server_connection_guide.html#step-3-enter-the-password",
    "href": "help/server_connection_guide.html#step-3-enter-the-password",
    "title": "Server Connection Guide",
    "section": "",
    "text": "You will be prompted to enter a password. The password for everyone is:\nTPgenomics2025\n\n\n\n\n\n\nImportant\n\n\n\nThe password will not be visible as you type. This is a security feature. You won’t see any characters appear on the screen, but don’t worry—just type it and press Enter when done.\n\n\nIf this is your first time connecting to the server, you may see a message like the following:\nAre you sure you want to continue connecting (yes/no)?\nSimply type yes and press Enter."
  },
  {
    "objectID": "help/server_connection_guide.html#step-4-success",
    "href": "help/server_connection_guide.html#step-4-success",
    "title": "Server Connection Guide",
    "section": "",
    "text": "Once you’ve successfully logged in, a welcome message will appear. This confirms that you’re now connected to the server and ready to proceed with your practical work.\nTo disconnect from the server when you’re done (at the end of the practical), simply type:\nexit\nYou can now return to the practical instructions and continue with the exercises."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "help/galaxy.html",
    "href": "help/galaxy.html",
    "title": "Galaxy Help",
    "section": "",
    "text": "Galaxy is a popular platform used in bioinformatics for running various data analyses, including genome assembly, mapping, and more. This guide will help you get started with Galaxy and provide an overview of its key features and functions."
  },
  {
    "objectID": "help/galaxy.html#accessing-galaxy",
    "href": "help/galaxy.html#accessing-galaxy",
    "title": "Galaxy Help",
    "section": "1 Accessing Galaxy",
    "text": "1 Accessing Galaxy\nTo start using Galaxy, visit the following URL:\n\nGalaxy French Server"
  },
  {
    "objectID": "help/galaxy.html#creating-an-account",
    "href": "help/galaxy.html#creating-an-account",
    "title": "Galaxy Help",
    "section": "2 Creating an Account",
    "text": "2 Creating an Account\nIf you don’t already have an account, you’ll need to create one:\n\nClick on the Authentification et Enregistrement (Login/Register**) button in the upper bar.\nSelect Don’t have an account? Register here and fill out the form with your details.\n\nOnce your account is created, you can log in and save your workflows and analyses.\n(Insert a screenshot showing the login/registration buttons here)"
  },
  {
    "objectID": "help/galaxy.html#getting-more-resources-only-available-during-practical-sessions",
    "href": "help/galaxy.html#getting-more-resources-only-available-during-practical-sessions",
    "title": "Galaxy Help",
    "section": "3 Getting More Resources (Only Available During Practical Sessions)",
    "text": "3 Getting More Resources (Only Available During Practical Sessions)\nTo ensure you have sufficient resources for your practical sessions, follow these steps:\n\nMake sure to use the French version of Galaxy.\nDuring the practical sessions, additional resources will be reserved for you. Go to the following URL to join the training session:\n\nJoin Practical Session Resources\n\nAfter joining, you can return to Galaxy and continue working with the reserved resources.\n\n(Insert a screenshot showing the process of joining the training session here)\nYou can then return to galaxy."
  },
  {
    "objectID": "help/galaxy.html#uploading-data",
    "href": "help/galaxy.html#uploading-data",
    "title": "Galaxy Help",
    "section": "4 Uploading Data",
    "text": "4 Uploading Data\nTo upload your sequencing data or other files:\n\nClick on the Upload Data button located on the top left of the page under the Tools section.\nA panel will appear where you can drag-and-drop files or choose them from your computer.\n\nMake sure that your data is correctly formatted and meets the requirements for the specific tools you’ll be using.\n(Insert a screenshot of the data upload panel here)"
  },
  {
    "objectID": "help/galaxy.html#running-tools-and-workflows",
    "href": "help/galaxy.html#running-tools-and-workflows",
    "title": "Galaxy Help",
    "section": "5 Running Tools and Workflows",
    "text": "5 Running Tools and Workflows\nGalaxy offers many bioinformatics tools, each designed to perform specific tasks like quality control, mapping, assembly, and annotation. To use these tools effectively:\n\nExplore the Tools section on the left panel.\nWhen you select a tool, Galaxy will display options for configuring it. Follow the tool documentation to understand which parameters need adjustment based on your data.\nMany tools allow for custom inputs, but default settings often work well for general cases.\n\nMake sure to familiarize yourself with the help sections of each tool, as they provide detailed descriptions and usage tips.\nYour job will be queued, and you can monitor its progress in the History panel on the right-hand side of the screen.\n(Insert a screenshot of running a tool, showing input fields and execution button here)"
  },
  {
    "objectID": "help/galaxy.html#understanding-job-status-in-the-history-panel",
    "href": "help/galaxy.html#understanding-job-status-in-the-history-panel",
    "title": "Galaxy Help",
    "section": "6 Understanding Job Status in the History Panel",
    "text": "6 Understanding Job Status in the History Panel\n\nGreen: The job has successfully completed.\nRed: The job failed. You can click on the red dataset to see the error log.\nYellow: The job is still running.\nGray: The job is queued and waiting to be processed.\n\n(Insert a screenshot showing the different job statuses in the History panel here)"
  },
  {
    "objectID": "help/galaxy.html#viewing-and-downloading-results",
    "href": "help/galaxy.html#viewing-and-downloading-results",
    "title": "Galaxy Help",
    "section": "7 Viewing and Downloading Results",
    "text": "7 Viewing and Downloading Results\nOnce your job is completed, ithe results appear in the History panel. You can:\n\nClick on the dataset to view the output directly in Galaxy.\nDownload the results by clicking on the download icon next to the dataset in the History panel.\n\n(Insert a screenshot of the History panel with completed jobs and download options here)"
  },
  {
    "objectID": "help/galaxy.html#help-and-troubleshooting",
    "href": "help/galaxy.html#help-and-troubleshooting",
    "title": "Galaxy Help",
    "section": "8 Help and Troubleshooting",
    "text": "8 Help and Troubleshooting\nIf you encounter any issues, Galaxy has extensive documentation and community support:\n\nGalaxy Tutorials\nGalaxy Help Forum\n\nThese resources provide guides for using Galaxy, troubleshooting tips, and examples of common workflows.\n(Optional: Insert a screenshot of the Galaxy help page or tutorials page here)\n\nBy following these steps, you should be able to navigate Galaxy efficiently and complete your analyses. As you progress, feel free to add your own notes, screenshots, and comments to enhance your understanding of the platform."
  },
  {
    "objectID": "practicals-2A/practical3.html",
    "href": "practicals-2A/practical3.html",
    "title": "Practical - De novo assembly",
    "section": "",
    "text": "In this practical, you will work with data from different strains of Saccharomyces cerevisiae, including strain SJ1L04, sequenced as part of the 1011 yeast genomes project. This strain was sequenced using Illumina HiSeq2500 technology with paired-end reads and 250X coverage.\n\nExercise 1 What is the 1011 yeast genomes project ?\n\nThe mitochondrial genome of S. cerevisiae shows greater variability than the nuclear genome due to differences in intergenic regions and the presence/absence of introns.\n\nExercise 2 What strategy would be most appropriate for comparing a strain’s nuclear genome to the reference genome? What about for the mitochondrial genome?\n\nUse the NCBI Genome database to find the reference genome of S. cerevisiae and the corresponding mitochondrial genome annotation (NC_001224).\n\nExercise 3 What is the size of the mitochondrial genome?\n\n\nExercise 4 Given that the nuclear genome size is 12 Mb and the sequencing depth is 250X, how many paired reads were generated? How can we reduce the number of reads to process for assembling the mitochondrial genome? (Assume the average read length is 100 bp, so 200 bp for paired-end reads).\n\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdDenovo\ncd tdDenovo\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nCreate an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/yeast/reads/chrM/readsSJ1L04_1.fq.gz and /data/yeast/reads/chrM/readsSJ1L04_2.fq.gz) inside a new directory called reads.\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reads\nln -s /data/yeast/reads/chrM/readsSJ1L04_*.fq.gz reads\nCreates symbolic links for all files starting with readsSJ1L04_ and ending with .fq.gz in the reads directory.\n\n\n\n\n\n\nFASTQ files are often compressed for storage efficiency and faster processing. Since you cannot read them directly with commands like more, you need to use the zcat command.\nzcat\nThe zcat command is used to display the contents of compressed files, specifically those with .gz extensions, without needing to decompress them first. It reads the contents of the compressed file and outputs them to the terminal.\nzcat &lt;file.gz&gt;\nzcatdisplay in one time all the contents of the file. You can also combine zcat with other commands like more to make the output easier to scroll through:\nzcat &lt;file.gz&gt; | more\nmore\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nThe pipe (|)\n\n\n\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\nCombine the zcat and head commands to display the first 12 lines of each reads file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat reads/readsSJ1L04_1.fq.gz | head -n 12\nzcat reads/readsSJ1L04_2.fq.gz | head -n 12\n\n\n\n\nExercise 5 What is the format of these files?\n\n\nExercise 6 Is the length of the reads uniform? What can we assume?\n\n\nExercise 7 How many reads are available? You can use the command wc and python.\n\n\n\n\n\n\n\nUsing Python from the CLI\n\n\n\nYou can run Python from the command line by executing python. This will start the Python interpreter, where you can use Python as usual. To exit the interpreter, type exit() and press Enter.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat readsSJ1L04_1.fq.gz |wc -l\nzcat readsSJ1L04_2.fq.gz |wc -l\nLaunch python:\npython\n4764652/4\n\n\n\n\n\n\n\nUse the FastQC program to get a report on the quality of readings.\nfastqc -o &lt;output_directory_path&gt; &lt;reads_path&gt;\n\n-o &lt;output_directory_path&gt;: Specifies the directory where the FastQC reports will be saved.\n&lt;reads_path&gt;: Indicates the path to the input FASTQ files you want to analyze.\n\nCreate a directory to store FastQC outputs and run fastqc.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir fastQCReport\nfastqc -o fastQCReport reads/readsSJ1L04_*.fq.gz\n\n\n\nAn HTML file is generated by FastQC, which contains lines of code for displaying web pages. While you can attempt to view it using the more command, it’s not well-suited for direct reading. To properly inspect the quality metrics and identify potential issues with the sequencing data, it’s best to open the HTML reports in a web browser. Before doing so, you will need to transfer the file from the server to your local computer.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/tdDenovo/fastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 8 Comment the results.\n\n\n\n\nFor de novo assembly, we will use the Abyss program: Abyss Bioinformatics Software. Create a directory named assembly within your working directory and move inside.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir assembly\ncd assembly\n\n\n\n\n\nThe general syntax for the abyss-pe command is:\nabyss-pe k=&lt;km&gt; name=&lt;output_name&gt; lib='pe1' pe1=\"&lt;absolute_path_of_reads&gt;\" -C &lt;output_directory&gt;\nYou can store the value of km in a variable for easy reuse:\nkm=\"40\"\nabyss-pe k=$km name=\"readsSJ1L04_$km\" lib='pe1' pe1=\"&lt;absolute_path_of_reads&gt;\" -C &lt;output_directory&gt;\nAfter you have just to change the value of $km and relaunch the same command.\nRun Abyss with different k-mer values (e.g., 40, 60, or 80).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nSolution for km=40:\nkm=40\nabyss-pe k=$km name=\"readsSJ1L04_$km\" lib='pe1' pe1=\"/home/merlat/tdDenovo/readsSJ1L04_*.fq.gz\" -C \"/home/merlat/tdDenovo/Assembly\"\n\n\n\n\n\n\nA statistics file is associated with each assembly (-stats files). Display the files.\n\nExercise 10 Which assembly is most relevant and why? ::\n\nExercise 9 Assemblies are consistently larger than the expected size of the mitochondrial genome. What could be the additional scaffolds/contigs? ::"
  },
  {
    "objectID": "practicals-2A/practical5.html",
    "href": "practicals-2A/practical5.html",
    "title": "Practical - Analysis of eukaryotic sequences",
    "section": "",
    "text": "An exome from a patient with a retinal disease has been analyzed. The sequence of a mutated exon (109 bp) is available on Moodle.\nGo to the Ensembl genome browser.\n\n\nOpen the BLAST/BLAT page.\n\nExercise 1 Is BLAT relevant to map our transcript on the genome? Why doesn’t use BLAST?\n\nPerform the search.\n\nExercise 2 What is the localization of the exonic region (chromosome, strand)? What is the corresponding gene?\n\nDisplay alignment.\n\nExercise 3 Which variation(s) are observed on the patient exon compared to the reference genome?\n\n\n\n\nSelect the gene.\nIsoforms (splice variants)\n\nExercise 4 How many protein coding transcripts are associated to this gene?\n\n\nExercise 5 According to the flags of the transcript table, which transcript is the more reliable?\n\n\nExercise 6 How many exons are present in this transcript?\n\nProtein: function, GO annotation, and expression\nIn a new window, search for the protein encoded by this gene in SwissProt.\n\nExercise 7 What is the protein function according to SwissProt?\n\n\nExercise 8 GO annotations: look at the list of synonyms associated with the GO molecular function of the protein. Does standardization make sense in this case?\n\n\nExercise 9 In which tissue is the gene expressed?\n\nPhenotype (Ensembl, Gene tab)\n\nExercise 10 Which phenotype(s) is linked to this gene? Is it consistent with the exome analysis?\n\n\n\n\nDisplay the GPR179 genomic region (region in details). Zoom out to have a good overview.\n\nExercise 11 To which exon does the patient sequence correspond ?\n\nGene prediction (ab initio + similarity)\nConfigure this page (left panel) to display:\n\nGenes and transcripts / Prediction transcripts: Genscan predictions\nmRNA and protein alignments\n\nmRNA alignments: display human cDNAs\nprotein alignments: display Proteins (mammals) from Uniprot\n\n\n\nExercise 12 Compare information provided by Genscan (ab initio prediction), cDNA and protein alignments.\n\nRepetitive elements\nConfigure the page to display repeats (Repeat regions/All repeats) and conserved elements using Comparative genomics:\n\nConservation regions/Constrained elements for eutherian mammals\nBLASTz/LASTz alignments with Chimpanzee, Mouse, crocodile, Zebrafish.\n\n\nExercise 13 What is conserved in these different species?\n\nRetrieve the genomic region with 10000 bp 5’ and 3’ flanking sequence using Export data (fasta sequence, unmasked, text) or use the genomic region available on Moodle.\nAnalyze this sequence with RepeatMasker using default parameters (don’t hesitate to refresh the result page).\n\nExercise 14 Which type of repeated element is the most represented in the genomic region?\n\n\nExercise 15 Display the annotation output and have a look at the 1st Alu repeat in the list. Can you identify a typical feature in this Alu repeat?\n\n\nExercise 16 To get a concrete idea of the importance of repetitive elements in the human genome, display the masked region.\n\nRegulation (Optional)\n\nExercise 17 According to regulatory features, can we have information about GPR179 promoter? How do you explain it?\n\n\nExercise 18 Is it the same for the neighbor gene SOC7?\n\nDisplay the same region in the UCSC genome browser (by following the hypertext link) and display CpG islands.\n\n\n\n\nAnother patient with a retinal disease exhibits several mutations including a mutation in a gene of completely unknown function. We only know that this gene is co-expressed with other genes (list available on Moodle).\nGO enrichment analysis\nUse the website of the Gene Ontology.\nPerform a functional enrichment analysis (Biological process ontology) of this list of genes in comparison to human genes.\n\nExercise 19 What is the meaning of the different columns in the result table?\n\n\nExercise 20 Sort the results according to the P Value. Is the mutation a good candidate to explain the retinal disease of the patient?\n\nNetwork analysis with STRING\nUse the website of String.\nVisualize the functional links between the genes in the list with STRING (using the “Multiple proteins” form).\n\nExercise 21 Which main types of links are observed between the genes of this list?\n\n\nExercise 22 Analyze the network (Analysis). Are there more links than expected in this list?\n\n\nExercise 23 Is the STRING analysis in agreement with the previous one?"
  },
  {
    "objectID": "practicals-3A/practical3.html",
    "href": "practicals-3A/practical3.html",
    "title": "Practical - Personnal genomics, variants",
    "section": "",
    "text": "Go to dbVar (Database of Genomic Structural Variation) at NCBI.\nSearch the human TRPM1 gene, for that use the dbVar Advanced Search Builder.\n\nExercise 1 How many genomic variations listed in dbVar involve TRPM1 (in human)? What type of variants is the most represented? How many variants are pathogenic?\n\nSearch the nsv3924913 variant.\n\nExercise 2 What is the size of the region involved in the variation?\n\n\nExercise 3 Can we specifically assign these phenotypes to the TRPM1 gene? (in other words, this variant impact the TRPM1 gene?)\n\n\nExercise 4 On how many variant calls is this structural variant based?\n\n\nExercise 5 According to Genome view, is it the only structural variant in this genomic region? Display other studies using Genome view.\n\n\nExercise 6 Return to nsv3924913. What is the type (s) of variation for this variant?\n\n\nExercise 7 Display “clinical assertions”. What are the 3 links to ClinVar? What are the clinical features observed in patient with this variation associated with the loss a copy ? For that open the link begining with VCV00…\n\n\nExercise 8 On HPO. Search phenotypes associated with the loss of copy. Is the “Seizures” phenotype specific to a single disease?\n\n\n\n\nGo to dbSNP (Database of Short Genetic Variations) at NCBI.\nSearch the human TRPM1 gene, for that use the dbVar Advanced Search Builder.\n\nExercise 9 How many entries from the SNP database are linked to the TRPM1 gene?\n\n\nExercise 10 Among them, how many are pathogenic or likely pathogenic?\n\n\nExercise 11 What are their functional consequences? Why are some variants associated to several functional consequences?\n\n\n\n\nExercise 12 What type of variant is it?\n\n\nExercise 13 What is the reference allele and the alternative one?\n\n\nExercise 14 What is the variant MAF in the 1000 genomes project? Can we speak of polymorphism?\n\n\nExercise 15 What is the meaning of NM_001252020.1: c.413T&gt;C?\n\n\nExercise 16 What is the functional consequence of this variant? Is it associated with type 1C CSNB? - Is this variant present in all tested populations?\n\n\n\n\n\nExercise 17 There are several functional consequences for this variant. Why?\n\n\n\n\nIn the Ensembl genome browser, display the TRPM1 gene and configure the page to display small variants from the 1000 genomes project and phenotypes associated.\nFor that, open the Configure Page windows. - Open Variation: activate 1000 Genomes - All - short variants (SNPs and indels) and 1000 Genomes - All - common - short variants (SNPs and indels) (with Normal style). - Open Variation &gt; Phenotype, disease and curated variants_: activate All phenotype-associated - short variants (SNPs and indels) (with Normal style).\n\nExercise 18 What can you say about the distribution of these variants?\n\n\nExercise 19 What can you say about the location of variants associated to a phenotype?\n\n\nExercise 20 What other phenotypes and diseases are associated to TRPM1 variants in human?\n\n\n\n\n\nThe TRPM1 gene of patients with CSNB (and in some cases their families) has been sequenced to find causative mutations for this rare disease.\n\nExercise 21 Several mutations identified in patients were considered non-pathogenic (see table below). Using this table and the ClinVar (NCBI), explain why these mutations are not pathogenic.\n\n\n\n\n\n\n\n\n\n\n\n\nExon\nNucleotide exchange\nAllele state\nProtein effect\nSNP ID\nControl Alleles (Mut/WT)\n\n\n\n\n1\nc.16C&gt;T\nhet or hom\np.Arg6Trp\nNew\n8/350 (T occurs also in Patypus)\n\n\n11\nc.1305G&gt;A\n\np.Thr435Thr\nrs1035705\n\n\n\n3\nc.161G&gt;A\n\np.Ser54Asn\nrs2241493\n\n\n\n27\nc.4123G&gt;T\nhet\np.Glu1375X\nNew\n20/320\n\n\n\n\nExercise 22 Mutations provided on Moodle were found in 3 patients and were considered as pathogenic. In each case, explain: why do they seem pathogenic, and the mode of transmission causing the disease."
  },
  {
    "objectID": "practicals-3A/practical3.html#structural-variant",
    "href": "practicals-3A/practical3.html#structural-variant",
    "title": "Practical - Personnal genomics, variants",
    "section": "",
    "text": "Go to dbVar (Database of Genomic Structural Variation) at NCBI.\nSearch the human TRPM1 gene, for that use the dbVar Advanced Search Builder.\n\nExercise 1 How many genomic variations listed in dbVar involve TRPM1 (in human)? What type of variants is the most represented? How many variants are pathogenic?\n\nSearch the nsv3924913 variant.\n\nExercise 2 What is the size of the region involved in the variation?\n\n\nExercise 3 Can we specifically assign these phenotypes to the TRPM1 gene? (in other words, this variant impact the TRPM1 gene?)\n\n\nExercise 4 On how many variant calls is this structural variant based?\n\n\nExercise 5 According to Genome view, is it the only structural variant in this genomic region? Display other studies using Genome view.\n\n\nExercise 6 Return to nsv3924913. What is the type (s) of variation for this variant?\n\n\nExercise 7 Display “clinical assertions”. What are the 3 links to ClinVar? What are the clinical features observed in patient with this variation associated with the loss a copy ? For that open the link begining with VCV00…\n\n\nExercise 8 On HPO. Search phenotypes associated with the loss of copy. Is the “Seizures” phenotype specific to a single disease?"
  },
  {
    "objectID": "practicals-3A/practical3.html#small-variants",
    "href": "practicals-3A/practical3.html#small-variants",
    "title": "Practical - Personnal genomics, variants",
    "section": "",
    "text": "Go to dbSNP (Database of Short Genetic Variations) at NCBI.\nSearch the human TRPM1 gene, for that use the dbVar Advanced Search Builder.\n\nExercise 9 How many entries from the SNP database are linked to the TRPM1 gene?\n\n\nExercise 10 Among them, how many are pathogenic or likely pathogenic?\n\n\nExercise 11 What are their functional consequences? Why are some variants associated to several functional consequences?\n\n\n\n\nExercise 12 What type of variant is it?\n\n\nExercise 13 What is the reference allele and the alternative one?\n\n\nExercise 14 What is the variant MAF in the 1000 genomes project? Can we speak of polymorphism?\n\n\nExercise 15 What is the meaning of NM_001252020.1: c.413T&gt;C?\n\n\nExercise 16 What is the functional consequence of this variant? Is it associated with type 1C CSNB? - Is this variant present in all tested populations?\n\n\n\n\n\nExercise 17 There are several functional consequences for this variant. Why?\n\n\n\n\nIn the Ensembl genome browser, display the TRPM1 gene and configure the page to display small variants from the 1000 genomes project and phenotypes associated.\nFor that, open the Configure Page windows. - Open Variation: activate 1000 Genomes - All - short variants (SNPs and indels) and 1000 Genomes - All - common - short variants (SNPs and indels) (with Normal style). - Open Variation &gt; Phenotype, disease and curated variants_: activate All phenotype-associated - short variants (SNPs and indels) (with Normal style).\n\nExercise 18 What can you say about the distribution of these variants?\n\n\nExercise 19 What can you say about the location of variants associated to a phenotype?\n\n\nExercise 20 What other phenotypes and diseases are associated to TRPM1 variants in human?"
  },
  {
    "objectID": "practicals-3A/practical3.html#analysis-of-mutations",
    "href": "practicals-3A/practical3.html#analysis-of-mutations",
    "title": "Practical - Personnal genomics, variants",
    "section": "",
    "text": "The TRPM1 gene of patients with CSNB (and in some cases their families) has been sequenced to find causative mutations for this rare disease.\n\nExercise 21 Several mutations identified in patients were considered non-pathogenic (see table below). Using this table and the ClinVar (NCBI), explain why these mutations are not pathogenic.\n\n\n\n\n\n\n\n\n\n\n\n\nExon\nNucleotide exchange\nAllele state\nProtein effect\nSNP ID\nControl Alleles (Mut/WT)\n\n\n\n\n1\nc.16C&gt;T\nhet or hom\np.Arg6Trp\nNew\n8/350 (T occurs also in Patypus)\n\n\n11\nc.1305G&gt;A\n\np.Thr435Thr\nrs1035705\n\n\n\n3\nc.161G&gt;A\n\np.Ser54Asn\nrs2241493\n\n\n\n27\nc.4123G&gt;T\nhet\np.Glu1375X\nNew\n20/320\n\n\n\n\nExercise 22 Mutations provided on Moodle were found in 3 patients and were considered as pathogenic. In each case, explain: why do they seem pathogenic, and the mode of transmission causing the disease."
  },
  {
    "objectID": "practicals-2A/practical3.html#quality-control-of-reads",
    "href": "practicals-2A/practical3.html#quality-control-of-reads",
    "title": "Practical - De novo assembly",
    "section": "",
    "text": "Use the FastQC program to get a report on the quality of readings.\nfastqc -o &lt;output_directory_path&gt; &lt;reads_path&gt;\n\n-o &lt;output_directory_path&gt;: Specifies the directory where the FastQC reports will be saved.\n&lt;reads_path&gt;: Indicates the path to the input FASTQ files you want to analyze.\n\nCreate a directory to store FastQC outputs and run fastqc.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir fastQCReport\nfastqc -o fastQCReport reads/readsSJ1L04_*.fq.gz\n\n\n\nAn HTML file is generated by FastQC, which contains lines of code for displaying web pages. While you can attempt to view it using the more command, it’s not well-suited for direct reading. To properly inspect the quality metrics and identify potential issues with the sequencing data, it’s best to open the HTML reports in a web browser. Before doing so, you will need to transfer the file from the server to your local computer.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .html file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/tdDenovo/fastQCReport/chrom22_fastqc.html .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\nIn the terminal where you used the scp command, run the pwd command to check your current directory. This will help you locate the file in your file explorer.\n\nExercise 8 Comment the results."
  },
  {
    "objectID": "practicals-2A/practical3.html#connection-to-the-server",
    "href": "practicals-2A/practical3.html#connection-to-the-server",
    "title": "Practical - De novo assembly",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdDenovo\ncd tdDenovo\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command."
  },
  {
    "objectID": "practicals-2A/practical3.html#copying-and-displaying-files",
    "href": "practicals-2A/practical3.html#copying-and-displaying-files",
    "title": "Practical - De novo assembly",
    "section": "",
    "text": "Create an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/yeast/reads/chrM/readsSJ1L04_1.fq.gz and /data/yeast/reads/chrM/readsSJ1L04_2.fq.gz) inside a new directory called reads.\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir reads\nln -s /data/yeast/reads/chrM/readsSJ1L04_*.fq.gz reads\nCreates symbolic links for all files starting with readsSJ1L04_ and ending with .fq.gz in the reads directory.\n\n\n\n\n\n\nFASTQ files are often compressed for storage efficiency and faster processing. Since you cannot read them directly with commands like more, you need to use the zcat command.\nzcat\nThe zcat command is used to display the contents of compressed files, specifically those with .gz extensions, without needing to decompress them first. It reads the contents of the compressed file and outputs them to the terminal.\nzcat &lt;file.gz&gt;\nzcatdisplay in one time all the contents of the file. You can also combine zcat with other commands like more to make the output easier to scroll through:\nzcat &lt;file.gz&gt; | more\nmore\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nThe pipe (|)\n\n\n\nThe pipe symbol (|) is used to connect the output of one command directly into the input of another. This allows for the chaining of commands, enabling you to perform complex tasks efficiently without the need to create intermediate files.\ncommand1 | command2\n\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\nCombine the zcat and head commands to display the first 12 lines of each reads file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat reads/readsSJ1L04_1.fq.gz | head -n 12\nzcat reads/readsSJ1L04_2.fq.gz | head -n 12\n\n\n\n\nExercise 5 What is the format of these files?\n\n\nExercise 6 Is the length of the reads uniform? What can we assume?\n\n\nExercise 7 How many reads are available? You can use the command wc and python.\n\n\n\n\n\n\n\nUsing Python from the CLI\n\n\n\nYou can run Python from the command line by executing python. This will start the Python interpreter, where you can use Python as usual. To exit the interpreter, type exit() and press Enter.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nzcat readsSJ1L04_1.fq.gz |wc -l\nzcat readsSJ1L04_2.fq.gz |wc -l\nLaunch python:\npython\n4764652/4"
  },
  {
    "objectID": "practicals-2A/practical3.html#assembly-with-abyss",
    "href": "practicals-2A/practical3.html#assembly-with-abyss",
    "title": "Practical - De novo assembly",
    "section": "",
    "text": "For de novo assembly, we will use the Abyss program: Abyss Bioinformatics Software. Create a directory named assembly within your working directory and move inside.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir assembly\ncd assembly\n\n\n\n\n\nThe general syntax for the abyss-pe command is:\nabyss-pe k=&lt;km&gt; name=&lt;output_name&gt; lib='pe1' pe1=\"&lt;absolute_path_of_reads&gt;\" -C &lt;output_directory&gt;\nYou can store the value of km in a variable for easy reuse:\nkm=\"40\"\nabyss-pe k=$km name=\"readsSJ1L04_$km\" lib='pe1' pe1=\"&lt;absolute_path_of_reads&gt;\" -C &lt;output_directory&gt;\nAfter you have just to change the value of $km and relaunch the same command.\nRun Abyss with different k-mer values (e.g., 40, 60, or 80).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nSolution for km=40:\nkm=40\nabyss-pe k=$km name=\"readsSJ1L04_$km\" lib='pe1' pe1=\"/home/merlat/tdDenovo/readsSJ1L04_*.fq.gz\" -C \"/home/merlat/tdDenovo/Assembly\"\n\n\n\n\n\n\nA statistics file is associated with each assembly (-stats files). Display the files.\n\nExercise 10 Which assembly is most relevant and why? ::\n\nExercise 9 Assemblies are consistently larger than the expected size of the mitochondrial genome. What could be the additional scaffolds/contigs? ::"
  },
  {
    "objectID": "practicals-2A/practical4.html#server-connection",
    "href": "practicals-2A/practical4.html#server-connection",
    "title": "Practical 4 - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "Open a terminal window to connect to the LBGI server. Your login is your last name in lower case. The command is:\n\nssh -Y yourlogin@tp.lbgi.fr\nThe password is the same for everyone: TPgenomics2023\nRemark: the password is not displayed when you type.\n\nCopy the genome sequence in your directory. The sequence is available in fasta format at: /data/TDannotation/sulcia.tfa.\n\nmkdir TDannotation\ncd TDannotation\ncp /data/TDannotation/sulcia.tfa ."
  },
  {
    "objectID": "practicals-2A/practical4.html#localization-of-non-coding-rna-genes",
    "href": "practicals-2A/practical4.html#localization-of-non-coding-rna-genes",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "You will use the tRNAscan-SE program. It is a tool used to detect and annotate tRNA genes in genomic sequences and can distinguish them from pseudogenes.\nTo see options:\ntRNAscan-SE -help\nCreate a directory called tRNA to save the output files, then use the command with the necessary options to identify tRNA sequences and their secondary structures in the genome of S. muelleri.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tRNA\ncd tRNA\ntRNAscan-SE -B -o sulcia.trnascan -f sulcia_structure.trnascan ../sulcia/sulcia.tfa\n\n../sulcia/sulcia.tfa: This is the path to the input file, indicating that it is located in the sulcia directory, which is one level up from the current directory.\n\n\n\n\n\nExercise 1 How many genes are found? Are all amino acid represented? Is there redundancy (several tRNA genes with the same anti-codon)?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# View the contents of the output file\nmore sulcia.trnascan\n\n# Count the number of lines in the output file (then subtract 3 for the header)\nwc -l sulcia.trnascan\n\n\n\nReformat the file containing the secondary structure using the house tool format_trnascan.sh (refer to the help for usage instructions). Then, select some sequences and visualize their structures using the online tool FORNA.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nformat_trnascan.sh -i sulcia_structure.trnascan -o sulcia_structure.trnascan.reformated\n\n\n\n\nExercise 2 Are their structures consistent with the known tRNA structures?\n\n\n\n\nWe want to find the approximate positions of rRNA genes on the S. muelleri genome by similarity using BLASTN and rRNA sequences from Sulcia or closely related species. Thus, we have to construct a BLAST database from the Sulcia genomic sequence.\n\n\nBefore conducting a similarity search with BLAST, it is essential to create a BLAST database from your sequence data. This database serves as the reference against which your queries will be compared.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nGo to sulcia directory and create blast database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ../sulcia\nmakeblastdb -in sulcia.tfa -dbtype nucl -out sulcia\n\n\n\n\n\n\nThe sequences of rRNA genes are available in FASTA format in the directory /data/bacteria/rRNA.\n\n5S of Sulcia muelleri\n23S of Myroides odoratus (m62807)\n16S of Coleomegilla maculata endosymbiont (y13889)\n\nIn a new directory called rRNA (at the same level as sulcia and tRNA directories), create symbolic links to acces easely to the files.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ../\nmkdir rRNA\ncd rRNA\nln -s /data/bacteria/rRNA/5S_Sulcia.tfa .\nln -s /data/bacteria/rRNA/23S_Myroides.tfa .\nln -s /data/bacteria/rRNA/16S_Coleo.tfa .\n\nThe dot (`.`) refers to the current working directory. When you execute the command, this tells the system to create the symbolic link (alias) for chrom22.fastq in the current directory where you are running the command.\n\n\n\nFor each rRNA, you will perform a BLASTN search in the sulcia using the blastn command. To see the list of parameters of this command use:\nblastn -help\nConstruct the BLASTN command and execute it for each of the rRNA sequences.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -db ../sulcia/sulcia -query 5S_Sulcia.tfa -out 5S.blastn\nblastn -db ../sulcia/sulcia -query 16S_Coleo.tfa -out 16S.blastn\nblastn -db ../sulcia/sulcia -query 23S_Myroides.tfa -out 23S.blastn\n\n\n\n\nExercise 3 How many copies of each rRNA gene do you find? Comment on gene organization (do not forget to consider positions of tRNA genes).\n\nUse more to display them.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore 5S.blastn\nmore 16S.blastn\nmore 23S.blastn"
  },
  {
    "objectID": "practicals-2A/practical4.html#localization-of-protein-genes",
    "href": "practicals-2A/practical4.html#localization-of-protein-genes",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "Glimmer is a gene-finding program designed for the identification of protein-coding genes in prokaryotic genomes by utilizing a combination of statistical models and machine learning techniques.\nCreate a directory called protein (at the same level as sulcia, tRNA and rRNA directories).\nRefer to the help documentation of run-glimmer2 to understand its usage, and then execute Glimmer on the genome of Sulcia muelleri.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir ../protein\ncd ../protein\nrun-glimmer2 ../sulcia/sulcia.tfa\n\n\n\n4 files will be created by glimmer:\n\ntmp.coord and tmp.train contain coordinates and sequences of reference genes from the training set\ntmp.model contains the model built by glimmer (binary format, do not open it!)\nthe last file g2.coord contains genes predicted by glimmer.\n\nYou can display tmp.coord and tmp.train.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore tmp.coord\nmore tmp.train\n\n\n\n\nExercise 4 How many genes have been used to build the model (file tmp.coord)? Use the command wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore tmp.train |wc -l\n\n\n\n\nExercise 5 What do you think about the number of predicted genes? The coding density?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore g2.coord |wc -l\n\n\n\n\nExercise 6 How the percentage of GC content may influence the quality of glimmer predictions? Use seqkit fx2tab to calculate it.\n\nseqkit\nSeqKit is a toolkit for manipulating biological sequence data in various formats, including FASTA and FASTQ. It offers a wide range of functionalities such as filtering, converting, and summarizing sequences.\nOne of the useful commands in SeqKit is seqkit fx2tab, which converts FASTA or FASTQ files into a tabular format, and provide various information.\nConsult the help documentation to understand how to use the tool effectively. To streamline the output, exclude the sequence from the results.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nseqkit fx2tab -n -g ../sulcia/sulcia.tfa\n\n\n\n\n\n\n\n\nSome genes predicted by glimmer exhibit important overlaps. Some examples of these genes have been translated (protein_sequences.txt available on moodle).\n\nExercise 7 Consider genomic context and similarity searches (NCBI BLAST, refseq_protein database, excluding Candidatus Sulcia) to validate or invalidate the existence or propose a correction for the following overlapping genes: SMU001/SMU002 and SMU023/SMU024.\n\n\n\n\n\nExercise 8 Check if the following long intergenic regions (available on Moodle) contain a protein coding gene (using NCBI BLAST pages, refseq_protein database and excluding Candidatus Sulcia): SMU043/SMU044, SMU204/SMU206 and SMU183/SMU184."
  },
  {
    "objectID": "practicals-2A/practical4.html#functional-annotation",
    "href": "practicals-2A/practical4.html#functional-annotation",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "Exercise 9 Assign a function of the following protein (available on Moodle) sequences using NCBI BLAST (refseq_protein database and excluding Candidatus Sulcia): SMU138 et SMU140.\n\n\nExercise 10 What additional research would be needed in this case?"
  },
  {
    "objectID": "practicals-2A/practical4.html#connection-to-the-server",
    "href": "practicals-2A/practical4.html#connection-to-the-server",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tdAnnotation\ncd tdAnnotation"
  },
  {
    "objectID": "practicals-2A/practical4.html#copying-and-displaying-file",
    "href": "practicals-2A/practical4.html#copying-and-displaying-file",
    "title": "Practical - Annotation of a complete prokaryotic genome",
    "section": "",
    "text": "Create an alias of the file with reads in your directory for easy access. For that, use the command ln, which create links between files. Links are pointers to files, allowing multiple references (aliases) to the same file. This way, you don’t need to duplicate large files, saving storage space and making file management easier.\nln -s &lt;path_to_original_file&gt; &lt;path_to_link_file&gt; \nThe option -sstands for “symbolic link.” A symbolic link is like a shortcut that points to the original file, enabling easy access. Unlike hard links, symbolic links can span different file systems, and if the original file is moved, the symbolic link can still point to it if it is relocated in the same system.\nCreate an alias for the reads (original paths:/data/bacteria/genome/sulcia.tfa) inside a new directory called sulcia.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir sulcia\nln -s /data/bacteria/genome/sulcia.tfa sulcia\nCreates symbolic links for the file sulcia.tfa in the sulcia directory.\n\n\n\n\n\n\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nNavigation keys in more\n\n\n\n\nspace: pressing the space key advances the display by one full screen, allowing you to scroll through the content quickly.\nenter: Ppressing enter moves the display down by one line. This is useful if you want to slowly scroll through the content line by line.\nq: pressing q will quit the more command and return you to the terminal prompt. You can use this key if you’re done viewing the file or don’t want to scroll through the entire file.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore sulcia/sulcia.tfa"
  },
  {
    "objectID": "practicals-2A/practical5.html#ensembl-genome-browser",
    "href": "practicals-2A/practical5.html#ensembl-genome-browser",
    "title": "Practical - Analysis of eukaryotic sequences",
    "section": "",
    "text": "An exome from a patient with a retinal disease has been analyzed. The sequence of a mutated exon (109 bp) is available on Moodle.\nGo to the Ensembl genome browser.\n\n\nOpen the BLAST/BLAT page.\n\nExercise 1 Is BLAT relevant to map our transcript on the genome? Why doesn’t use BLAST?\n\nPerform the search.\n\nExercise 2 What is the localization of the exonic region (chromosome, strand)? What is the corresponding gene?\n\nDisplay alignment.\n\nExercise 3 Which variation(s) are observed on the patient exon compared to the reference genome?\n\n\n\n\nSelect the gene.\nIsoforms (splice variants)\n\nExercise 4 How many protein coding transcripts are associated to this gene?\n\n\nExercise 5 According to the flags of the transcript table, which transcript is the more reliable?\n\n\nExercise 6 How many exons are present in this transcript?\n\nProtein: function, GO annotation, and expression\nIn a new window, search for the protein encoded by this gene in SwissProt.\n\nExercise 7 What is the protein function according to SwissProt?\n\n\nExercise 8 GO annotations: look at the list of synonyms associated with the GO molecular function of the protein. Does standardization make sense in this case?\n\n\nExercise 9 In which tissue is the gene expressed?\n\nPhenotype (Ensembl, Gene tab)\n\nExercise 10 Which phenotype(s) is linked to this gene? Is it consistent with the exome analysis?\n\n\n\n\nDisplay the GPR179 genomic region (region in details). Zoom out to have a good overview.\n\nExercise 11 To which exon does the patient sequence correspond ?\n\nGene prediction (ab initio + similarity)\nConfigure this page (left panel) to display:\n\nGenes and transcripts / Prediction transcripts: Genscan predictions\nmRNA and protein alignments\n\nmRNA alignments: display human cDNAs\nprotein alignments: display Proteins (mammals) from Uniprot\n\n\n\nExercise 12 Compare information provided by Genscan (ab initio prediction), cDNA and protein alignments.\n\nRepetitive elements\nConfigure the page to display repeats (Repeat regions/All repeats) and conserved elements using Comparative genomics:\n\nConservation regions/Constrained elements for eutherian mammals\nBLASTz/LASTz alignments with Chimpanzee, Mouse, crocodile, Zebrafish.\n\n\nExercise 13 What is conserved in these different species?\n\nRetrieve the genomic region with 10000 bp 5’ and 3’ flanking sequence using Export data (fasta sequence, unmasked, text) or use the genomic region available on Moodle.\nAnalyze this sequence with RepeatMasker using default parameters (don’t hesitate to refresh the result page).\n\nExercise 14 Which type of repeated element is the most represented in the genomic region?\n\n\nExercise 15 Display the annotation output and have a look at the 1st Alu repeat in the list. Can you identify a typical feature in this Alu repeat?\n\n\nExercise 16 To get a concrete idea of the importance of repetitive elements in the human genome, display the masked region.\n\nRegulation (Optional)\n\nExercise 17 According to regulatory features, can we have information about GPR179 promoter? How do you explain it?\n\n\nExercise 18 Is it the same for the neighbor gene SOC7?\n\nDisplay the same region in the UCSC genome browser (by following the hypertext link) and display CpG islands."
  },
  {
    "objectID": "practicals-2A/practical5.html#functional-analysis-of-a-gene-list",
    "href": "practicals-2A/practical5.html#functional-analysis-of-a-gene-list",
    "title": "Practical - Analysis of eukaryotic sequences",
    "section": "",
    "text": "Another patient with a retinal disease exhibits several mutations including a mutation in a gene of completely unknown function. We only know that this gene is co-expressed with other genes (list available on Moodle).\nGO enrichment analysis\nUse the website of the Gene Ontology.\nPerform a functional enrichment analysis (Biological process ontology) of this list of genes in comparison to human genes.\n\nExercise 19 What is the meaning of the different columns in the result table?\n\n\nExercise 20 Sort the results according to the P Value. Is the mutation a good candidate to explain the retinal disease of the patient?\n\nNetwork analysis with STRING\nUse the website of String.\nVisualize the functional links between the genes in the list with STRING (using the “Multiple proteins” form).\n\nExercise 21 Which main types of links are observed between the genes of this list?\n\n\nExercise 22 Analyze the network (Analysis). Are there more links than expected in this list?\n\n\nExercise 23 Is the STRING analysis in agreement with the previous one?"
  },
  {
    "objectID": "practicals-1A/practical4.html",
    "href": "practicals-1A/practical4.html",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "&gt; Hypothetical protein [Candidatus Poribacteria sp. WGA-A3]\nMVDFNNTLSSTASVQVAAHWDPIENTANNLHRSTEEKFNRDKAQWQEPVEMTWEQWLEVFNPGPAHPLKN\nYSTADFQVFLPPSTVNVADVWDLDTEGILPFLRQFHPSATMKLPRYGSIPSDQKDAKACLRALSPEYADI\nVFRIHARFTLDASIDAYFMPAQFAGHLIINRNSRTIHQWTLSLPNRNSNVDIGAFRSHDIGFVPRMELCS\nVSETQPESIVWEAAITAEEADKKFQNSLYKFAEIEWTPIEEAVELAKASNRSIHAVLLFGVLDDESC\n\n\n\nSearch for the organism Candidatus Poribacteria in the NCBI Taxonomy database.\n\nExercise 1 What can you say about the organism taxonomy?\n\nSearch for homologs of the Poribacteria sequence (available on Moodle) using NCBI BLASTP:\n\nIn the RefSeq_protein database (not in RefSeq select!!!)\nWith word size = 3\nWith a maximum of 1000 sequences and E ≤ 10 (other parameters: default)\nHow many hits did you get with E ≤ 10?\n\n\nExercise 2 To which family does the protein seem to belong?\n\n\nExercise 3 According to BLASTP alignments, propose 2 patterns conserved in the protein family.\n\n\nExercise 4 In which taxonomic group(s) do we find hits? Are the hits found in the bacterial sequences significant? Propose a function and an evolutionary origin for the gene encoding the Poribacteria protein.\n\n\nExercise 5 Look at the alignment with human selenoprotein N NP_996809.1. Do the alignments cover the C-terminal part of the query sequence and animal selenoprotein N? In metazoans, which amino acid “matches” the stop codon of the Poribacteria sequence? What hypothesis can be made? How could this hypothesis be tested?\n\n\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdBlast\ncd TdBlast\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nRetrieve the Human Protein Sequence of the Selenoprotein N (Accession Number: Q9NZV5) using the command GET of the UniProtKB API.\nDocumentation of UniProtKB API: UniProtKB API Documentation\ncurl -X GET --header 'Accept:text/x-fasta' -o Q9NZV5.fasta 'https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=100&accession=Q9NZV5'\nYou can open the file with the cat command:\ncat Q9NZV5.fasta\nCreate a BLAST Database with Poribacteria Genomes\nCopy the fasta file containing sequences from 2 Poribacteria genomes to your directory. The sequence is available at: /home/lecompte/Poribacteria_genomes.fasta\ncp /home/lecompte/Poribacteria_genomes.fasta Poribacteria_genomes.fasta\nCreate the BLAST database with the makeblastdb command: To see available options:\nmakeblastdb –help\nmakeblastdb -in Poribacteria_genomes.fasta -dbtype nucl -out PoribacteriaDb\nPerform a Similarity Search using the human selenoprotein N Q9NZV5.fasta as a query in the PoribacteriaDb database using the tblastN command: To see available options:\ntblastn –help\ntblastn -db PoribacteriaDb -query Q9NZV5.fasta -out selN.tblastn\nAnalysis of the TblastN Results.\nDisplay the TblastN output:\nmore selN.tblastn\n\nExercise 6 Can we extend the gene sequence in 3’?\n\n\nExercise 7 What do you learn from this search about the evolution of this gene in available Poribacteria genomes?\n\n\nExercise 8 We obtain several alignments for the sequence VYCT01000218. Why?\n\ngrep -A 90 '&gt;VYCT01000218' selN.tblastn"
  },
  {
    "objectID": "practicals-1A/practical4.html#characterization-of-a-sequence-of-unknown-function",
    "href": "practicals-1A/practical4.html#characterization-of-a-sequence-of-unknown-function",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "&gt; Hypothetical protein [Candidatus Poribacteria sp. WGA-A3]\nMVDFNNTLSSTASVQVAAHWDPIENTANNLHRSTEEKFNRDKAQWQEPVEMTWEQWLEVFNPGPAHPLKN\nYSTADFQVFLPPSTVNVADVWDLDTEGILPFLRQFHPSATMKLPRYGSIPSDQKDAKACLRALSPEYADI\nVFRIHARFTLDASIDAYFMPAQFAGHLIINRNSRTIHQWTLSLPNRNSNVDIGAFRSHDIGFVPRMELCS\nVSETQPESIVWEAAITAEEADKKFQNSLYKFAEIEWTPIEEAVELAKASNRSIHAVLLFGVLDDESC"
  },
  {
    "objectID": "practicals-1A/practical4.html#first-part-blastp-search",
    "href": "practicals-1A/practical4.html#first-part-blastp-search",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "Search for the organism Candidatus Poribacteria in the NCBI Taxonomy database.\n\nExercise 1 What can you say about the organism taxonomy?\n\nSearch for homologs of the Poribacteria sequence (available on Moodle) using NCBI BLASTP:\n\nIn the RefSeq_protein database (not in RefSeq select!!!)\nWith word size = 3\nWith a maximum of 1000 sequences and E ≤ 10 (other parameters: default)\nHow many hits did you get with E ≤ 10?\n\n\nExercise 2 To which family does the protein seem to belong?\n\n\nExercise 3 According to BLASTP alignments, propose 2 patterns conserved in the protein family.\n\n\nExercise 4 In which taxonomic group(s) do we find hits? Are the hits found in the bacterial sequences significant? Propose a function and an evolutionary origin for the gene encoding the Poribacteria protein.\n\n\nExercise 5 Look at the alignment with human selenoprotein N NP_996809.1. Do the alignments cover the C-terminal part of the query sequence and animal selenoprotein N? In metazoans, which amino acid “matches” the stop codon of the Poribacteria sequence? What hypothesis can be made? How could this hypothesis be tested?"
  },
  {
    "objectID": "practicals-1A/practical4.html#connection-to-the-server",
    "href": "practicals-1A/practical4.html#connection-to-the-server",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdBlast\ncd TdBlast\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command."
  },
  {
    "objectID": "practicals-1A/practical4.html#comparison-proteingenome-using-command-line-blast",
    "href": "practicals-1A/practical4.html#comparison-proteingenome-using-command-line-blast",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "Retrieve the Human Protein Sequence of the Selenoprotein N (Accession Number: Q9NZV5) using the command GET of the UniProtKB API.\nDocumentation of UniProtKB API: UniProtKB API Documentation\ncurl -X GET --header 'Accept:text/x-fasta' -o Q9NZV5.fasta 'https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=100&accession=Q9NZV5'\nYou can open the file with the cat command:\ncat Q9NZV5.fasta\nCreate a BLAST Database with Poribacteria Genomes\nCopy the fasta file containing sequences from 2 Poribacteria genomes to your directory. The sequence is available at: /home/lecompte/Poribacteria_genomes.fasta\ncp /home/lecompte/Poribacteria_genomes.fasta Poribacteria_genomes.fasta\nCreate the BLAST database with the makeblastdb command: To see available options:\nmakeblastdb –help\nmakeblastdb -in Poribacteria_genomes.fasta -dbtype nucl -out PoribacteriaDb\nPerform a Similarity Search using the human selenoprotein N Q9NZV5.fasta as a query in the PoribacteriaDb database using the tblastN command: To see available options:\ntblastn –help\ntblastn -db PoribacteriaDb -query Q9NZV5.fasta -out selN.tblastn\nAnalysis of the TblastN Results.\nDisplay the TblastN output:\nmore selN.tblastn\n\nExercise 6 Can we extend the gene sequence in 3’?\n\n\nExercise 7 What do you learn from this search about the evolution of this gene in available Poribacteria genomes?\n\n\nExercise 8 We obtain several alignments for the sequence VYCT01000218. Why?\n\ngrep -A 90 '&gt;VYCT01000218' selN.tblastn"
  },
  {
    "objectID": "practicals-1A/practical3.html",
    "href": "practicals-1A/practical3.html",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?\n\n\n\n\n\n\nA gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?\n\n\n\n\n\n\nThis exercise is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nThe materials used in this are located in the directory /data/blast_tp/.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to blast_tp directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/\n\n\n\nThis directory contains:\n\nnifh_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), there are the queries.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can display the contents of each file individually:\nhead metags/corn.fa \nhead metags/prairie.fa \nhead metags/soybean.fa\nhead nifh_db/nifh-ref.fa\nOr use * to apply the head command to all files at once:\nhead */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\nExercise 28 How many sequences are there in theses fasta files?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can count for each file individually:\ngrep -c \"&gt;\" metags/corn.fa \ngrep -c \"&gt;\" metags/prairie.fa \ngrep -c \"&gt;\" metags/soybean.fa\ngrep -c \"&gt;\" nifh_db/nifh-ref.fa\nOr use * to apply the grep command to all files at once:\ngrep -c \"&gt;\" */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmakeblastdb -in /data/blast_tp/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST for each query file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\n\nExercise 29 How many results do you get for each metagenome? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nmore\nYou can display the file with the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\nExercise 30 What is the range of percentage identity for the results of BLAST of soybean metagenome?? Similarly, what is the range of e-values? Use morecommand.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore soybean.out\n\n\n\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\n\nExercise 31 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 32 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 33 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 34 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  },
  {
    "objectID": "practicals-1A/practical3.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "href": "practicals-1A/practical3.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?"
  },
  {
    "objectID": "practicals-1A/practical3.html#localisation-of-a-transcript-on-a-genome-and-search-for-a-cds",
    "href": "practicals-1A/practical3.html#localisation-of-a-transcript-on-a-genome-and-search-for-a-cds",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "A gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?"
  },
  {
    "objectID": "practicals-1A/practical1.html",
    "href": "practicals-1A/practical1.html",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Go to the NCBI website.\n\n\nSelect Nucleotide on the NCBI website and search for the sequence NC_045512.\n\nExercise 1 What is it? How long is the genome?\n\n\nExercise 2 Consult the Comment field. Which bank does this sequence come from? Is it reliable? What sequencing technology was used? What can you say about this entry compared with the initial GenBank entry (1st sequence of the SARS-Cov-2 genome)?\n\nLook for the coding region corresponding to the N protein (nucleocapsid phosphoprotein).\n\nExercise 3 What do you think of the composition of this protein? What problems might such a sequence pose in a similarity search?\n\n\nExercise 4 Display the genome sequence in fasta format. How does this format compare with the RefSeq format?\n\n\n\n\nSearch Nucleotide for sequences containing the BRCA1 gene for Homo sapiens, using filters or the advanced search.\n\nExercise 5 Why are there several sequences in RefSeq? in Genbank?\n\nAmong all the results, one of the sequences is a fragment of the gene in a breast cancer patient. To find it more easily, search for KT152889 with the search bar.\n\nExercise 6 Quickly position the annotated gene elements on a drawing. What is the position of the variation on the sequence? What does it correspond to?\n\nAmong the features, the sequence source provides a cross-reference to NCBI’s Taxonomy bank. Follow this link.\n\n\n\n\nExercise 7 What human subspecies are listed in the Taxonomy bank?\n\n\nExercise 8 What other organisms are listed in the Homininae ?\n\n\nExercise 9 What orders are closest to the primate order? Which has the most available proteins?\n\n\nExercise 10 How many genomes are available in the Genome Bank for Animals (Metazoa), Fungi, Viridiplantae and Eukaryotes? Comment.\n\n\n\n\n\nGo to the UniprotKB bank.\n\n\n\nExercise 11 How many human protein sequences are listed in UniprotKB? in SwissProt?\n\n\nExercise 12 Search for the protein associated with the BRCA1 gene in human. Compare the results. Which is the best entry?\n\n\n\n\nSearch for the MUC1_HUMAN protein\n\nExercise 13 Has the existence of this protein been established (see Protein existence at the top of the page)?\n\n\nExercise 14 Compare the default format, the text format and the fasta format (available in Download).\n\n\nExercise 15 How many isoforms are described for this protein (see Sequences & Isoforms)? Align the isoforms and see how they differ. For that, click on align isoforms and launch the alignment.\n\n\n\n\n\nExercise 16 The Go ontology can be used to describe proteins in 3 ways. Which are they?\n\n\nExercise 17 Follow the link to the entry “negative regulation of intrinsic apoptotic signaling pathway in response to DNA damage by p53 class mediator”. What is it? What type of GO is it? How often is it used to describe proteins?\n\n\nExercise 18 Are there any synonyms for the term GO?\n\n\n\n\n\nExercise 19 What can you say about the structures obtained experimentally for the protein?\n\n\nExercise 20 What can you say about the reliability of the AlphaFold prediction for this protein?\n\n\n\n\n\n\n\nExercise 21 Why are there so many more links to EMBL/GenBank/DDBJ than to RefSeq?\n\n\n\n\nDisplay the graphical representation (View protein in InterPro).\n\nExercise 22 How many distinct protein domains are there in this protein?\n\nDomain: IPR000082 SEA domain\n\nExercise 23 From which banks do the 3 signatures associated with this InterPro domain originate?\n\nYou can get more information by passing the mouse over the colored bars, to open the domain in the associated bank, click on the corresponding link on the right.\n\nExercise 24 Follow the link to the associated PFAM signature. Display the signature (click on the Profile HMM tab). Comment the signature.\n\nIn a new tab, search for the BRCA1_HUMAN protein in InterProScan.\n\nExercise 25 How many distinct protein domains are there in this protein?"
  },
  {
    "objectID": "practicals-1A/practical1.html#ncbi---interrogation-of-databases-by-entrez",
    "href": "practicals-1A/practical1.html#ncbi---interrogation-of-databases-by-entrez",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Go to the NCBI website.\n\n\nSelect Nucleotide on the NCBI website and search for the sequence NC_045512.\n\nExercise 1 What is it? How long is the genome?\n\n\nExercise 2 Consult the Comment field. Which bank does this sequence come from? Is it reliable? What sequencing technology was used? What can you say about this entry compared with the initial GenBank entry (1st sequence of the SARS-Cov-2 genome)?\n\nLook for the coding region corresponding to the N protein (nucleocapsid phosphoprotein).\n\nExercise 3 What do you think of the composition of this protein? What problems might such a sequence pose in a similarity search?\n\n\nExercise 4 Display the genome sequence in fasta format. How does this format compare with the RefSeq format?\n\n\n\n\nSearch Nucleotide for sequences containing the BRCA1 gene for Homo sapiens, using filters or the advanced search.\n\nExercise 5 Why are there several sequences in RefSeq? in Genbank?\n\nAmong all the results, one of the sequences is a fragment of the gene in a breast cancer patient. To find it more easily, search for KT152889 with the search bar.\n\nExercise 6 Quickly position the annotated gene elements on a drawing. What is the position of the variation on the sequence? What does it correspond to?\n\nAmong the features, the sequence source provides a cross-reference to NCBI’s Taxonomy bank. Follow this link.\n\n\n\n\nExercise 7 What human subspecies are listed in the Taxonomy bank?\n\n\nExercise 8 What other organisms are listed in the Homininae ?\n\n\nExercise 9 What orders are closest to the primate order? Which has the most available proteins?\n\n\nExercise 10 How many genomes are available in the Genome Bank for Animals (Metazoa), Fungi, Viridiplantae and Eukaryotes? Comment."
  },
  {
    "objectID": "practicals-1A/practical1.html#taxonomy-bank",
    "href": "practicals-1A/practical1.html#taxonomy-bank",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Exercise 9 Which human subspecies are listed in the Taxonomy bank?\n\n\nExercise 10 Which other organisms are listed in the Hominina e ?\n\n\nExercise 11 Which orders are closest to the primate order? Which has the most available proteins?\n\n\nExercise 12 How many genomes are available in the Genome Bank for Animals, Fungi, Viridiplantae and Eukaryotes? Please comment."
  },
  {
    "objectID": "practicals-1A/practical1.html#protein-sequence-search-in-uniprotkb",
    "href": "practicals-1A/practical1.html#protein-sequence-search-in-uniprotkb",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Go to the UniprotKB bank.\n\n\n\nExercise 11 How many human protein sequences are listed in UniprotKB? in SwissProt?\n\n\nExercise 12 Search for the protein associated with the BRCA1 gene in human. Compare the results. Which is the best entry?\n\n\n\n\nSearch for the MUC1_HUMAN protein\n\nExercise 13 Has the existence of this protein been established (see Protein existence at the top of the page)?\n\n\nExercise 14 Compare the default format, the text format and the fasta format (available in Download).\n\n\nExercise 15 How many isoforms are described for this protein (see Sequences & Isoforms)? Align the isoforms and see how they differ. For that, click on align isoforms and launch the alignment.\n\n\n\n\n\nExercise 16 The Go ontology can be used to describe proteins in 3 ways. Which are they?\n\n\nExercise 17 Follow the link to the entry “negative regulation of intrinsic apoptotic signaling pathway in response to DNA damage by p53 class mediator”. What is it? What type of GO is it? How often is it used to describe proteins?\n\n\nExercise 18 Are there any synonyms for the term GO?\n\n\n\n\n\nExercise 19 What can you say about the structures obtained experimentally for the protein?\n\n\nExercise 20 What can you say about the reliability of the AlphaFold prediction for this protein?\n\n\n\n\n\n\n\nExercise 21 Why are there so many more links to EMBL/GenBank/DDBJ than to RefSeq?\n\n\n\n\nDisplay the graphical representation (View protein in InterPro).\n\nExercise 22 How many distinct protein domains are there in this protein?\n\nDomain: IPR000082 SEA domain\n\nExercise 23 From which banks do the 3 signatures associated with this InterPro domain originate?\n\nYou can get more information by passing the mouse over the colored bars, to open the domain in the associated bank, click on the corresponding link on the right.\n\nExercise 24 Follow the link to the associated PFAM signature. Display the signature (click on the Profile HMM tab). Comment the signature.\n\nIn a new tab, search for the BRCA1_HUMAN protein in InterProScan.\n\nExercise 25 How many distinct protein domains are there in this protein?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ESBS Bioinformatics Practical Sessions",
    "section": "",
    "text": "Here you will find all the materials needed for your bioinformatics practical sessions (TDs) at ESBS.\nIn addition to the exercise sheets, the site also provides useful resources such as guides and links to external courses that will help you become familiar with the tools and concepts you will need."
  },
  {
    "objectID": "index.html#practical-sessions",
    "href": "index.html#practical-sessions",
    "title": "ESBS Bioinformatics Practical Sessions",
    "section": "Practical sessions",
    "text": "Practical sessions\n\n1A - Introduction to Bioinformatics\nHere are the practicals for first-year students. They cover fundamental concepts and essential tools in bioinformatics with an introduction to the command line interface (CLI):\n\n1 - Database exploration\n2 - Functional analysis of a gene list and sequence comparison\n3 - Similarity searches\n4 - Analysis of protein families\n5 - Multiple alignment and molecular phylogeny\n\n\n\n2A - Genomics and Epigenomics\nThe Genomics and Epigenomics practicals are aimed at second-year students. They will guide you through several analyses commonly used in genomics:\n\n1 - Pre-processing of sequencing reads\n2 - Read mapping on a reference genome\n3 - De novo assembly\n4 - Annotation of a complete prokaryotic genome\n5 - Analysis of eukaryotic sequences\n\n\n\n3A - Comparative and Medical Genomics\nThese advanced practicals are intended for third-year students:\n\n2 - Exome analysis\n3 - Personal genomics: variants\n\n\n\nPharma - Introduction to Bioinformatics\nThese practicals for fifth-year pharmacy students introduce some of the bioinformatics tools and techniques needed in pharmaceutical\n\n1 - Pre-processing of sequencing reads\n2 - Database exploration\n3 - Functional analysis of a gene list and sequence comparison\n4 - Similarity searches\n5 - Analysis of Protein Families"
  },
  {
    "objectID": "index.html#help-and-support",
    "href": "index.html#help-and-support",
    "title": "ESBS Bioinformatics Practical Sessions",
    "section": "Help and Support",
    "text": "Help and Support\nIf you need additional guidance, visit our Help section where you’ll find detailed resources to assist you with the technical aspects of the practicals, as well as external links to bioinformatics courses:\n\nGalaxy Help: Get familiar with the Galaxy platform, a popular tool for conducting bioinformatics analyses without extensive programming knowledge.\nServer Connection Guide: Step-by-step instructions to connect to the server used in the practical sessions.\n\nAdditionally, you will find links to other existing bioinformatics courses and external resources to enhance your learning experience.\n\nWe hope these practicals and resources will guide you in your bioinformatics journey, helping you develop the skills and knowledge needed for your academic and research projects."
  },
  {
    "objectID": "practicals-1A/practical2.html",
    "href": "practicals-1A/practical2.html",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "Gene expression profiles in tumors from breast cancer patients were compared to expression profiles in healthy tissue. This comparison revealed 991 overexpressed genes and 1422 downregulated genes in tumors. The gene lists are available on moodle.\nAnalyze the list of the 991 overexpressed genes using the GO Enrichment analysis tool on the Panther website and choosing the Cellular component ontology.\n\nExercise 1 Explain the meaning of the different columns presented.\n\n\nExercise 2 Which GO term is most enriched in the gene list? Consult the meaning of this term. Is this a consistent result given that these are genes overexpressed in tumors?\n\n\nExercise 3 Which GO term is the most underrepresented in this list?\n\nRepeat the analysis using GO biological process (complete). Rank the results according to the False Discovery Rate (FDR).\n\nExercise 4 Which enrichment is most significant? Are the results consistent in your opinion?\n\nNow analyze the list of genes that are under-expressed in tumors (GO biological process).\n\nExercise 5 To which major types of processes do the down-regulated genes belong?\n\n\n\n\nWe will use EMBOSS, a suite of tools for sequence analysis. You can access it here.\n\n\nSearch for MTMR3_HUMAN (Q13615) and Q9W1Q6_DROME (Q9W1Q6) sequences in UniProt and compare them with:\n\nthe dotplot method (dotmatcher program). Don’t forget to adjust parameters to decrease noise\nthe water program (local alignment)\nthe needle program (global alignment)\n\n\nExercise 6 Which similarity regions between the two sequences can be detected using dotplot? Is it in agreement with the domain organisation of the two proteins (see InterPro annotations of the 2 sequences)?\n\nCompare the results obtained using local and global alignments.\n\nExercise 7 Why is the score obtained using needle lower?\n\n\nExercise 8 How can you improve the global alignment? Test your hypothesis.\n\n\nExercise 9 What can you say about the C-terminal domain? How could you characterize this domain?\n\n\n\n\nSearch for the entries corresponding to the aef1 gene of Drosophila melanogaster in UniProt. Open the SwissProt protein.\n\nExercise 10 Which domain(s) are present? To identify the domain(s) present, use the InterPro links from UniProt by navigating to External links -&gt; View protein in InterPro.\n\n\nExercise 11 Represent schematically the result of a self-comparison of this sequence using the dotplot method.\n\n\n\nFor many bioinformatics tools, there is a command-line alternative. These alternatives are often faster, more powerful, and more flexible.\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp2\ncd tp2\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nYou can download the sequence on the server. On the UniProt page of the protein, click on Download, and choose Format (canonical). To download directly on the server, use Generate URL for API and copy the URL.\nwget\nThe wget command is a tool used to download files from the web via HTTP, HTTPS, or FTP protocols directly from the command line.\nAn API (Application Programming Interface) is a system that allows you to send requests to a server. In biology, servers like NCBI or UniProt can be accessed through APIs to retrieve data and perform analyses.\nTo use wget, simply run the command followed by the URL of the file you want to download. For example:\nwget http://example.com/file.txt\nThis will download the file file.txt from the specified URL to your current directory.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwget https://rest.uniprot.org/uniprotkb/P39413.fasta\n\n\n\n\n\n\nRun EMBOSS in the command line to perform a self-comparison of this sequence using the dotmatcher with windowsize of 10, and a threshold of 30.\ndotmatcher -asequence &lt;fastaA&gt; -bsequence &lt;fastaB&gt; -windowsize &lt;size&gt; -threshold &lt;threshold&gt; -graph &lt;graph_type&gt;\nOptions:\n\nasequence: The first sequence file to compare (in FASTA format). Example: -asequence sequenceA.fasta\nbsequence: The second sequence file to compare (in FASTA format). Example: -asequence sequenceB.fasta\nwindowsize: The number of characters considered for matching at each position.\nthreshold: The minimum similarity score for a match to be considered significant.\ngraph: The format for the output graph (e.g., png, pdf, svg).\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ndotmatcher -asequence P39413.fasta -bsequence P39413.fasta -windowsize 10 -threshold 30 -graph png\n\n\n\nYou can check the output has been generated by using the ls command.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\nIf you want display the content of the current directory, use only:\nls \nThe following files are in the current directory:\n\nP39413.fasta\ndotmatcher.1.png\n\nTo view the PNG file, it’s best to open it locally. Transfer it from the server to your computer first.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .png file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/tp3/dotmatcher.1.png .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\n\nExercise 12 Is the result in agreement with your expectations? Which additional information appears?"
  },
  {
    "objectID": "practicals-1A/practical2.html#functional-analysis-of-a-gene-list-gene-ontology",
    "href": "practicals-1A/practical2.html#functional-analysis-of-a-gene-list-gene-ontology",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "Gene expression profiles in tumors from breast cancer patients were compared to expression profiles in healthy tissue. This comparison revealed 991 overexpressed genes and 1422 downregulated genes in tumors. The gene lists are available on moodle.\nAnalyze the list of the 991 overexpressed genes using the GO Enrichment analysis tool on the Panther website and choosing the Cellular component ontology.\n\nExercise 1 Explain the meaning of the different columns presented.\n\n\nExercise 2 Which GO term is most enriched in the gene list? Consult the meaning of this term. Is this a consistent result given that these are genes overexpressed in tumors?\n\n\nExercise 3 Which GO term is the most underrepresented in this list?\n\nRepeat the analysis using GO biological process (complete). Rank the results according to the False Discovery Rate (FDR).\n\nExercise 4 Which enrichment is most significant? Are the results consistent in your opinion?\n\nNow analyze the list of genes that are under-expressed in tumors (GO biological process).\n\nExercise 5 To which major types of processes do the down-regulated genes belong?"
  },
  {
    "objectID": "practicals-1A/practical2.html#dotplot-and-optimal-alignments-with-emboss-tools",
    "href": "practicals-1A/practical2.html#dotplot-and-optimal-alignments-with-emboss-tools",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "We will use EMBOSS, a suite of tools for sequence analysis. You can access it here.\n\n\nSearch for MTMR3_HUMAN (Q13615) and Q9W1Q6_DROME (Q9W1Q6) sequences in UniProt and compare them with:\n\nthe dotplot method (dotmatcher program). Don’t forget to adjust parameters to decrease noise\nthe water program (local alignment)\nthe needle program (global alignment)\n\n\nExercise 6 Which similarity regions between the two sequences can be detected using dotplot? Is it in agreement with the domain organisation of the two proteins (see InterPro annotations of the 2 sequences)?\n\nCompare the results obtained using local and global alignments.\n\nExercise 7 Why is the score obtained using needle lower?\n\n\nExercise 8 How can you improve the global alignment? Test your hypothesis.\n\n\nExercise 9 What can you say about the C-terminal domain? How could you characterize this domain?\n\n\n\n\nSearch for the entries corresponding to the aef1 gene of Drosophila melanogaster in UniProt. Open the SwissProt protein.\n\nExercise 10 Which domain(s) are present? To identify the domain(s) present, use the InterPro links from UniProt by navigating to External links -&gt; View protein in InterPro.\n\n\nExercise 11 Represent schematically the result of a self-comparison of this sequence using the dotplot method.\n\n\n\nFor many bioinformatics tools, there is a command-line alternative. These alternatives are often faster, more powerful, and more flexible.\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp2\ncd tp2\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nYou can download the sequence on the server. On the UniProt page of the protein, click on Download, and choose Format (canonical). To download directly on the server, use Generate URL for API and copy the URL.\nwget\nThe wget command is a tool used to download files from the web via HTTP, HTTPS, or FTP protocols directly from the command line.\nAn API (Application Programming Interface) is a system that allows you to send requests to a server. In biology, servers like NCBI or UniProt can be accessed through APIs to retrieve data and perform analyses.\nTo use wget, simply run the command followed by the URL of the file you want to download. For example:\nwget http://example.com/file.txt\nThis will download the file file.txt from the specified URL to your current directory.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwget https://rest.uniprot.org/uniprotkb/P39413.fasta\n\n\n\n\n\n\nRun EMBOSS in the command line to perform a self-comparison of this sequence using the dotmatcher with windowsize of 10, and a threshold of 30.\ndotmatcher -asequence &lt;fastaA&gt; -bsequence &lt;fastaB&gt; -windowsize &lt;size&gt; -threshold &lt;threshold&gt; -graph &lt;graph_type&gt;\nOptions:\n\nasequence: The first sequence file to compare (in FASTA format). Example: -asequence sequenceA.fasta\nbsequence: The second sequence file to compare (in FASTA format). Example: -asequence sequenceB.fasta\nwindowsize: The number of characters considered for matching at each position.\nthreshold: The minimum similarity score for a match to be considered significant.\ngraph: The format for the output graph (e.g., png, pdf, svg).\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ndotmatcher -asequence P39413.fasta -bsequence P39413.fasta -windowsize 10 -threshold 30 -graph png\n\n\n\nYou can check the output has been generated by using the ls command.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\nIf you want display the content of the current directory, use only:\nls \nThe following files are in the current directory:\n\nP39413.fasta\ndotmatcher.1.png\n\nTo view the PNG file, it’s best to open it locally. Transfer it from the server to your computer first.\nscp\nThe scp command stands for “secure copy protocol.” It is used to securely transfer files between a local computer and a remote server or between two remote servers over an encrypted SSH connection. This ensures that the data is protected during transfer.\nTo copy file from a server to your computer, open a new terminal and use scp like this:\nscp &lt;username&gt;@&lt;server_adress&gt;:&lt;source_file_path&gt; &lt;target_file_path&gt;\n\n\n\n\n\n\nView the path of a file\n\n\n\nIf you not sure of the path .png file, use the command realpath to known it. realpath &lt;file&gt;\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nscp &lt;username&gt;@tp.lbgi.fr:~/tp3/dotmatcher.1.png .\nNote: Replace &lt;login&gt; with your username. The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nNow that the HTML file is on your computer, you can access it like any other file using your file explorer.\n\nExercise 12 Is the result in agreement with your expectations? Which additional information appears?"
  },
  {
    "objectID": "practicals-1A/practical2.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "href": "practicals-1A/practical2.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 13 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 14 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 15 How many sequences can you get?\n\n\nExercise 16 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 17 What are the gap penalties? The word size?\n\n\nExercise 18 How are regions of low complexity processed?"
  },
  {
    "objectID": "practicals-1A/practical5.html",
    "href": "practicals-1A/practical5.html",
    "title": "Practical - Multiple Alignment & Phylogeny",
    "section": "",
    "text": "A protein sequence (available on the Moodle platform) has been automatically predicted during the annotation of the fungus Malassezia globosa genome.\n\n\nPerform a similarity search using BLAST at EBI in the SWISSPROT database (https://www.ebi.ac.uk/jdispatcher/sss/ncbiblast) (default parameters).\n\nExercise 1 How many sequences do you obtain (with E&lt;10)? Why so few sequences are detected according to you?\n\nDisplay results with Tool output.\n\nExercise 2 Find 3 conserved motifs.\n\n\nExercise 3 Is the Malassezia sequence homologous to: Q84424, P05469, P0C995, O13881?\n\nDisplay results with Visual output.\n\nExercise 4 For each group of homologs, specify which region(s) (N-terminus, central region, C-terminus, almost whole sequence…) of the query sequence and of the database sequences have been aligned by BLAST.\n\n\nExercise 5 Why can this information be important before constructing a global multiple alignment?\n\nDisplay the Summary table. Select all sequences detected by BLAST except:\n\nCLR2_SCHPO (O13881) and YKP3_KLULA (P05469): non-homologous sequences\n\nYL226_MIMIV (Q5UQC0) and MCE_MIMIV (Q5UQX1): too few motifs.\n\nSave sequences in Fasta format and add the query sequence in the file. The final file is also available on Moodle (distant_homologs.txt).\n\n\n\nParameters: \nDisplay alignment parameters.\n\nExercise 6 Why are pairwise parameters mentioned?\n\nAlign sequences (Alignment, Do complete alignment) with default parameters.\nVisualize this alignment with Jalview (available on your computer or using https://www.jalview.org/jalview-js/JalviewJS/).\nResidues can be colored according to their properties with Colour, Zappo (or Clustal, for instance).\n\nExercise 7 Is the sequence order relevant? Modify sequence order if necessary.\n\n\nExercise 8 Do all sequences exhibit the same domain organization?\n\n\nExercise 9 Do you find the previously defined motifs? According to you, is the alignment correct?\n\n\nExercise 10 Can you find additional motifs? Can you find obvious sequence prediction errors?\n\n\nExercise 11 Which sequence sub-groups can be defined? Are there “orphan” sequences? Justify your answer and give one discriminative residue or motif for each group.\n\n\n\n\n\nA multiple alignment of aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) protein sequences has been constructed. A few lysyl-tRNA synthetase (SYK) sequences have been added as an outgroup. In Eukarya, cytoplasmic proteins are indicated with C (ex: SYNC_HUMAN) while mitochondrial proteins are indicated with M. The alignment is schematically shown below (Jalview overview).\n\nExercise 12 According to this graphical overview, what precaution should we take before building a phylogenetic tree from this alignment?\n\nSome sequences have been selected, and the variable N-terminus part of the alignment has been removed. The corresponding alignment is available on Moodle (fasta format).\nCodes for species:\n\nAnimals: human, mouse.\n\nFungi: yeast, Schpo, Enccu.\n\nAmoebas: dicdi.\n\nArchaea: pyrab, aerpe\nBacteria: bacsu, ecoli\nPlant: arath\n\nUse the Seaview program available on your computer (http://doua.prabi.fr/software/seaview) and open the multiple alignment with Seaview.\n\n\nConstruct a phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance, and ignore all gaps (global gap removal).\n\nExercise 13 How many sites have been used to calculate distances? Do you agree with the root position?\n\n\nExercise 14 Which pair of sequences are closest to each other? Which sequence has the highest rate of evolution (except SYK_BACSU)?\n\n\nExercise 15 Display bootstrap values using “Br support”. Is the separation between aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) sequences clearly established according to this tree?\n\n\nExercise 16 Are the relationships between SYN sequences expected? Are they significantly supported?\n\n\nExercise 17 Are phylogenetic relationships observed for eukaryotic aspartyl-tRNA synthetases in agreement with the current phylogeny of eukaryotes?\n\n\nExercise 18 What is the homology relationship between:\n\nsync_human and sync_mouse?\nsync_human and sydc_mouse?\nsync1_arath and sync2_arath?\n\n\n\nExercise 19 Why is it important to distinguish these types of relationships?\n\n\n\n\nConstruct the phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance but without the “ignore all gaps” option (=&gt;pairwise gap removal).\n\nExercise 20 How many sites are used on average?\n\n\nExercise 21 Are there topology differences between the two trees? Apart from topology, what types of differences can be observed?\n\n\n\n\nConstruct the phylogenetic tree using Maximum parsimony (default parameters but with 100 bootstrap replicates).\n\nExercise 22 What can you say about the execution time of the two programs?\n\n\nExercise 23 How many sites are informative? What do “steps” stand for? How can we obtain “3 best trees”?\n\n\nExercise 24 Is branch length informative in this tree?\n\n\nExercise 25 The tree is shown as a rooted tree. Do you agree with the root position? Modify the root position if needed (“re-root”).\n\n\nExercise 26 What is the most reliable tree between the first tree and this one? Justify your answer.\n\n\n\n\nConstruct the phylogenetic tree using PhyML: default parameters but without calculating branch support (“none”).\n\nExercise 27 Is the tree topology in agreement with the topology obtained using BioNJ?"
  },
  {
    "objectID": "practicals-1A/practical5.html#part-1---analysis-of-a-protein-family",
    "href": "practicals-1A/practical5.html#part-1---analysis-of-a-protein-family",
    "title": "Practical - Multiple Alignment & Phylogeny",
    "section": "",
    "text": "A protein sequence (available on the Moodle platform) has been automatically predicted during the annotation of the fungus Malassezia globosa genome.\n\n\nPerform a similarity search using BLAST at EBI in the SWISSPROT database (https://www.ebi.ac.uk/jdispatcher/sss/ncbiblast) (default parameters).\n\nExercise 1 How many sequences do you obtain (with E&lt;10)? Why so few sequences are detected according to you?\n\nDisplay results with Tool output.\n\nExercise 2 Find 3 conserved motifs.\n\n\nExercise 3 Is the Malassezia sequence homologous to: Q84424, P05469, P0C995, O13881?\n\nDisplay results with Visual output.\n\nExercise 4 For each group of homologs, specify which region(s) (N-terminus, central region, C-terminus, almost whole sequence…) of the query sequence and of the database sequences have been aligned by BLAST.\n\n\nExercise 5 Why can this information be important before constructing a global multiple alignment?\n\nDisplay the Summary table. Select all sequences detected by BLAST except:\n\nCLR2_SCHPO (O13881) and YKP3_KLULA (P05469): non-homologous sequences\n\nYL226_MIMIV (Q5UQC0) and MCE_MIMIV (Q5UQX1): too few motifs.\n\nSave sequences in Fasta format and add the query sequence in the file. The final file is also available on Moodle (distant_homologs.txt).\n\n\n\nParameters: \nDisplay alignment parameters.\n\nExercise 6 Why are pairwise parameters mentioned?\n\nAlign sequences (Alignment, Do complete alignment) with default parameters.\nVisualize this alignment with Jalview (available on your computer or using https://www.jalview.org/jalview-js/JalviewJS/).\nResidues can be colored according to their properties with Colour, Zappo (or Clustal, for instance).\n\nExercise 7 Is the sequence order relevant? Modify sequence order if necessary.\n\n\nExercise 8 Do all sequences exhibit the same domain organization?\n\n\nExercise 9 Do you find the previously defined motifs? According to you, is the alignment correct?\n\n\nExercise 10 Can you find additional motifs? Can you find obvious sequence prediction errors?\n\n\nExercise 11 Which sequence sub-groups can be defined? Are there “orphan” sequences? Justify your answer and give one discriminative residue or motif for each group."
  },
  {
    "objectID": "practicals-1A/practical5.html#phylogeny",
    "href": "practicals-1A/practical5.html#phylogeny",
    "title": "Practical - Multiple Alignment & Phylogeny",
    "section": "",
    "text": "A multiple alignment of aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) protein sequences has been constructed. A few lysyl-tRNA synthetase (SYK) sequences have been added as an outgroup. In Eukarya, cytoplasmic proteins are indicated with C (ex: SYNC_HUMAN) while mitochondrial proteins are indicated with M. The alignment is schematically shown below (Jalview overview).\n\nExercise 12 According to this graphical overview, what precaution should we take before building a phylogenetic tree from this alignment?\n\nSome sequences have been selected, and the variable N-terminus part of the alignment has been removed. The corresponding alignment is available on Moodle (fasta format).\nCodes for species:\n\nAnimals: human, mouse.\n\nFungi: yeast, Schpo, Enccu.\n\nAmoebas: dicdi.\n\nArchaea: pyrab, aerpe\nBacteria: bacsu, ecoli\nPlant: arath\n\nUse the Seaview program available on your computer (http://doua.prabi.fr/software/seaview) and open the multiple alignment with Seaview.\n\n\nConstruct a phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance, and ignore all gaps (global gap removal).\n\nExercise 13 How many sites have been used to calculate distances? Do you agree with the root position?\n\n\nExercise 14 Which pair of sequences are closest to each other? Which sequence has the highest rate of evolution (except SYK_BACSU)?\n\n\nExercise 15 Display bootstrap values using “Br support”. Is the separation between aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) sequences clearly established according to this tree?\n\n\nExercise 16 Are the relationships between SYN sequences expected? Are they significantly supported?\n\n\nExercise 17 Are phylogenetic relationships observed for eukaryotic aspartyl-tRNA synthetases in agreement with the current phylogeny of eukaryotes?\n\n\nExercise 18 What is the homology relationship between:\n\nsync_human and sync_mouse?\nsync_human and sydc_mouse?\nsync1_arath and sync2_arath?\n\n\n\nExercise 19 Why is it important to distinguish these types of relationships?\n\n\n\n\nConstruct the phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance but without the “ignore all gaps” option (=&gt;pairwise gap removal).\n\nExercise 20 How many sites are used on average?\n\n\nExercise 21 Are there topology differences between the two trees? Apart from topology, what types of differences can be observed?\n\n\n\n\nConstruct the phylogenetic tree using Maximum parsimony (default parameters but with 100 bootstrap replicates).\n\nExercise 22 What can you say about the execution time of the two programs?\n\n\nExercise 23 How many sites are informative? What do “steps” stand for? How can we obtain “3 best trees”?\n\n\nExercise 24 Is branch length informative in this tree?\n\n\nExercise 25 The tree is shown as a rooted tree. Do you agree with the root position? Modify the root position if needed (“re-root”).\n\n\nExercise 26 What is the most reliable tree between the first tree and this one? Justify your answer.\n\n\n\n\nConstruct the phylogenetic tree using PhyML: default parameters but without calculating branch support (“none”).\n\nExercise 27 Is the tree topology in agreement with the topology obtained using BioNJ?"
  },
  {
    "objectID": "practicals-pharma/practical5.html",
    "href": "practicals-pharma/practical5.html",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "&gt; Hypothetical protein [Candidatus Poribacteria sp. WGA-A3]\nMVDFNNTLSSTASVQVAAHWDPIENTANNLHRSTEEKFNRDKAQWQEPVEMTWEQWLEVFNPGPAHPLKN\nYSTADFQVFLPPSTVNVADVWDLDTEGILPFLRQFHPSATMKLPRYGSIPSDQKDAKACLRALSPEYADI\nVFRIHARFTLDASIDAYFMPAQFAGHLIINRNSRTIHQWTLSLPNRNSNVDIGAFRSHDIGFVPRMELCS\nVSETQPESIVWEAAITAEEADKKFQNSLYKFAEIEWTPIEEAVELAKASNRSIHAVLLFGVLDDESC\n\n\n\nSearch for the organism Candidatus Poribacteria in the NCBI Taxonomy database.\n\nExercise 1 What can you say about the organism taxonomy?\n\nSearch for homologs of the Poribacteria sequence (available on Moodle) using NCBI BLASTP:\n\nIn the RefSeq_protein database (not in RefSeq select!!!)\nWith word size = 3\nWith a maximum of 1000 sequences and E ≤ 10 (other parameters: default)\nHow many hits did you get with E ≤ 10?\n\n\nExercise 2 To which family does the protein seem to belong?\n\n\nExercise 3 According to BLASTP alignments, propose 2 patterns conserved in the protein family.\n\n\nExercise 4 In which taxonomic group(s) do we find hits? Are the hits found in the bacterial sequences significant? Propose a function and an evolutionary origin for the gene encoding the Poribacteria protein.\n\n\nExercise 5 Look at the alignment with human selenoprotein N NP_996809.1. Do the alignments cover the C-terminal part of the query sequence and animal selenoprotein N? In metazoans, which amino acid “matches” the stop codon of the Poribacteria sequence? What hypothesis can be made? How could this hypothesis be tested?\n\n\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdBlast\ncd TdBlast\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nRetrieve the Human Protein Sequence of the Selenoprotein N (Accession Number: Q9NZV5) using the command GET of the UniProtKB API.\nDocumentation of UniProtKB API: UniProtKB API Documentation\ncurl -X GET --header 'Accept:text/x-fasta' -o Q9NZV5.fasta 'https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=100&accession=Q9NZV5'\nYou can open the file with the cat command:\ncat Q9NZV5.fasta\nCreate a BLAST Database with Poribacteria Genomes\nCopy the fasta file containing sequences from 2 Poribacteria genomes to your directory. The sequence is available at: /home/lecompte/Poribacteria_genomes.fasta\ncp /home/lecompte/Poribacteria_genomes.fasta Poribacteria_genomes.fasta\nCreate the BLAST database with the makeblastdb command: To see available options:\nmakeblastdb –help\nmakeblastdb -in Poribacteria_genomes.fasta -dbtype nucl -out PoribacteriaDb\nPerform a Similarity Search using the human selenoprotein N Q9NZV5.fasta as a query in the PoribacteriaDb database using the tblastN command: To see available options:\ntblastn –help\ntblastn -db PoribacteriaDb -query Q9NZV5.fasta -out selN.tblastn\nAnalysis of the TblastN Results.\nDisplay the TblastN output:\nmore selN.tblastn\n\nExercise 6 Can we extend the gene sequence in 3’?\n\n\nExercise 7 What do you learn from this search about the evolution of this gene in available Poribacteria genomes?\n\n\nExercise 8 We obtain several alignments for the sequence VYCT01000218. Why?\n\ngrep -A 90 '&gt;VYCT01000218' selN.tblastn"
  },
  {
    "objectID": "practicals-pharma/practical5.html#part-1---analysis-of-a-protein-family",
    "href": "practicals-pharma/practical5.html#part-1---analysis-of-a-protein-family",
    "title": "Practical - Multiple Alignment & Phylogeny",
    "section": "",
    "text": "A protein sequence (available on the Moodle platform) has been automatically predicted during the annotation of the fungus Malassezia globosa genome.\n\n\nPerform a similarity search using BLAST at EBI in the SWISSPROT database (https://www.ebi.ac.uk/jdispatcher/sss/ncbiblast) (default parameters).\n\nExercise 1 How many sequences do you obtain (with E&lt;10)? Why so few sequences are detected according to you?\n\nDisplay results with Tool output.\n\nExercise 2 Find 3 conserved motifs.\n\n\nExercise 3 Is the Malassezia sequence homologous to: Q84424, P05469, P0C995, O13881?\n\nDisplay results with Visual output.\n\nExercise 4 For each group of homologs, specify which region(s) (N-terminus, central region, C-terminus, almost whole sequence…) of the query sequence and of the database sequences have been aligned by BLAST.\n\n\nExercise 5 Why can this information be important before constructing a global multiple alignment?\n\nDisplay the Summary table. Select all sequences detected by BLAST except:\n\nCLR2_SCHPO (O13881) and YKP3_KLULA (P05469): non-homologous sequences\n\nYL226_MIMIV (Q5UQC0) and MCE_MIMIV (Q5UQX1): too few motifs.\n\nSave sequences in Fasta format and add the query sequence in the file. The final file is also available on Moodle (distant_homologs.txt).\n\n\n\nParameters: \nDisplay alignment parameters.\n\nExercise 6 Why are pairwise parameters mentioned?\n\nAlign sequences (Alignment, Do complete alignment) with default parameters.\nVisualize this alignment with Jalview (available on your computer or using https://www.jalview.org/jalview-js/JalviewJS/).\nResidues can be colored according to their properties with Colour, Zappo (or Clustal, for instance).\n\nExercise 7 Is the sequence order relevant? Modify sequence order if necessary.\n\n\nExercise 8 Do all sequences exhibit the same domain organization?\n\n\nExercise 9 Do you find the previously defined motifs? According to you, is the alignment correct?\n\n\nExercise 10 Can you find additional motifs? Can you find obvious sequence prediction errors?\n\n\nExercise 11 Which sequence sub-groups can be defined? Are there “orphan” sequences? Justify your answer and give one discriminative residue or motif for each group."
  },
  {
    "objectID": "practicals-pharma/practical5.html#phylogeny",
    "href": "practicals-pharma/practical5.html#phylogeny",
    "title": "Practical - Multiple Alignment & Phylogeny",
    "section": "",
    "text": "A multiple alignment of aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) protein sequences has been constructed. A few lysyl-tRNA synthetase (SYK) sequences have been added as an outgroup. In Eukarya, cytoplasmic proteins are indicated with C (ex: SYNC_HUMAN) while mitochondrial proteins are indicated with M. The alignment is schematically shown below (Jalview overview).\n\nExercise 12 According to this graphical overview, what precaution should we take before building a phylogenetic tree from this alignment?\n\nSome sequences have been selected, and the variable N-terminus part of the alignment has been removed. The corresponding alignment is available on Moodle (fasta format).\nCodes for species:\n\nAnimals: human, mouse.\n\nFungi: yeast, Schpo, Enccu.\n\nAmoebas: dicdi.\n\nArchaea: pyrab, aerpe\nBacteria: bacsu, ecoli\nPlant: arath\n\nUse the Seaview program available on your computer (http://doua.prabi.fr/software/seaview) and open the multiple alignment with Seaview.\n\n\nConstruct a phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance, and ignore all gaps (global gap removal).\n\nExercise 13 How many sites have been used to calculate distances? Do you agree with the root position?\n\n\nExercise 14 Which pair of sequences are closest to each other? Which sequence has the highest rate of evolution (except SYK_BACSU)?\n\n\nExercise 15 Display bootstrap values using “Br support”. Is the separation between aspartyl-tRNA synthetases (SYD) and asparaginyl-tRNA synthetases (SYN) sequences clearly established according to this tree?\n\n\nExercise 16 Are the relationships between SYN sequences expected? Are they significantly supported?\n\n\nExercise 17 Are phylogenetic relationships observed for eukaryotic aspartyl-tRNA synthetases in agreement with the current phylogeny of eukaryotes?\n\n\nExercise 18 What is the homology relationship between:\n\nsync_human and sync_mouse?\nsync_human and sydc_mouse?\nsync1_arath and sync2_arath?\n\n\n\nExercise 19 Why is it important to distinguish these types of relationships?\n\n\n\n\nConstruct the phylogenetic tree using BioNJ (Trees/Distance Methods/) with 100 bootstrap replicates, Poisson distance but without the “ignore all gaps” option (=&gt;pairwise gap removal).\n\nExercise 20 How many sites are used on average?\n\n\nExercise 21 Are there topology differences between the two trees? Apart from topology, what types of differences can be observed?\n\n\n\n\nConstruct the phylogenetic tree using Maximum parsimony (default parameters but with 100 bootstrap replicates).\n\nExercise 22 What can you say about the execution time of the two programs?\n\n\nExercise 23 How many sites are informative? What do “steps” stand for? How can we obtain “3 best trees”?\n\n\nExercise 24 Is branch length informative in this tree?\n\n\nExercise 25 The tree is shown as a rooted tree. Do you agree with the root position? Modify the root position if needed (“re-root”).\n\n\nExercise 26 What is the most reliable tree between the first tree and this one? Justify your answer.\n\n\n\n\nConstruct the phylogenetic tree using PhyML: default parameters but without calculating branch support (“none”).\n\nExercise 27 Is the tree topology in agreement with the topology obtained using BioNJ?"
  },
  {
    "objectID": "practicals-pharma/practical5.html#characterization-of-a-sequence-of-unknown-function",
    "href": "practicals-pharma/practical5.html#characterization-of-a-sequence-of-unknown-function",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "&gt; Hypothetical protein [Candidatus Poribacteria sp. WGA-A3]\nMVDFNNTLSSTASVQVAAHWDPIENTANNLHRSTEEKFNRDKAQWQEPVEMTWEQWLEVFNPGPAHPLKN\nYSTADFQVFLPPSTVNVADVWDLDTEGILPFLRQFHPSATMKLPRYGSIPSDQKDAKACLRALSPEYADI\nVFRIHARFTLDASIDAYFMPAQFAGHLIINRNSRTIHQWTLSLPNRNSNVDIGAFRSHDIGFVPRMELCS\nVSETQPESIVWEAAITAEEADKKFQNSLYKFAEIEWTPIEEAVELAKASNRSIHAVLLFGVLDDESC"
  },
  {
    "objectID": "practicals-pharma/practical5.html#first-part-blastp-search",
    "href": "practicals-pharma/practical5.html#first-part-blastp-search",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "Search for the organism Candidatus Poribacteria in the NCBI Taxonomy database.\n\nExercise 1 What can you say about the organism taxonomy?\n\nSearch for homologs of the Poribacteria sequence (available on Moodle) using NCBI BLASTP:\n\nIn the RefSeq_protein database (not in RefSeq select!!!)\nWith word size = 3\nWith a maximum of 1000 sequences and E ≤ 10 (other parameters: default)\nHow many hits did you get with E ≤ 10?\n\n\nExercise 2 To which family does the protein seem to belong?\n\n\nExercise 3 According to BLASTP alignments, propose 2 patterns conserved in the protein family.\n\n\nExercise 4 In which taxonomic group(s) do we find hits? Are the hits found in the bacterial sequences significant? Propose a function and an evolutionary origin for the gene encoding the Poribacteria protein.\n\n\nExercise 5 Look at the alignment with human selenoprotein N NP_996809.1. Do the alignments cover the C-terminal part of the query sequence and animal selenoprotein N? In metazoans, which amino acid “matches” the stop codon of the Poribacteria sequence? What hypothesis can be made? How could this hypothesis be tested?"
  },
  {
    "objectID": "practicals-pharma/practical5.html#connection-to-the-server",
    "href": "practicals-pharma/practical5.html#connection-to-the-server",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigate into it.\nmkdir\nThe mkdir command stands for “make directory”, is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir TdBlast\ncd TdBlast\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command."
  },
  {
    "objectID": "practicals-pharma/practical5.html#comparison-proteingenome-using-command-line-blast",
    "href": "practicals-pharma/practical5.html#comparison-proteingenome-using-command-line-blast",
    "title": "Practical – Analysis of Protein Families",
    "section": "",
    "text": "Retrieve the Human Protein Sequence of the Selenoprotein N (Accession Number: Q9NZV5) using the command GET of the UniProtKB API.\nDocumentation of UniProtKB API: UniProtKB API Documentation\ncurl -X GET --header 'Accept:text/x-fasta' -o Q9NZV5.fasta 'https://www.ebi.ac.uk/proteins/api/proteins?offset=0&size=100&accession=Q9NZV5'\nYou can open the file with the cat command:\ncat Q9NZV5.fasta\nCreate a BLAST Database with Poribacteria Genomes\nCopy the fasta file containing sequences from 2 Poribacteria genomes to your directory. The sequence is available at: /home/lecompte/Poribacteria_genomes.fasta\ncp /home/lecompte/Poribacteria_genomes.fasta Poribacteria_genomes.fasta\nCreate the BLAST database with the makeblastdb command: To see available options:\nmakeblastdb –help\nmakeblastdb -in Poribacteria_genomes.fasta -dbtype nucl -out PoribacteriaDb\nPerform a Similarity Search using the human selenoprotein N Q9NZV5.fasta as a query in the PoribacteriaDb database using the tblastN command: To see available options:\ntblastn –help\ntblastn -db PoribacteriaDb -query Q9NZV5.fasta -out selN.tblastn\nAnalysis of the TblastN Results.\nDisplay the TblastN output:\nmore selN.tblastn\n\nExercise 6 Can we extend the gene sequence in 3’?\n\n\nExercise 7 What do you learn from this search about the evolution of this gene in available Poribacteria genomes?\n\n\nExercise 8 We obtain several alignments for the sequence VYCT01000218. Why?\n\ngrep -A 90 '&gt;VYCT01000218' selN.tblastn"
  },
  {
    "objectID": "practicals-pharma/practical3.html",
    "href": "practicals-pharma/practical3.html",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "Gene expression profiles in tumors from breast cancer patients were compared to expression profiles in healthy tissue. This comparison revealed 991 overexpressed genes and 1422 downregulated genes in tumors. The gene lists are available on moodle.\nAnalyze the list of the 991 overexpressed genes using the GO Enrichment analysis tool on the Panther website and choosing the Cellular component ontology.\n\nExercise 1 Explain the meaning of the different columns presented.\n\n\nExercise 2 Which GO term is most enriched in the gene list? Consult the meaning of this term. Is this a consistent result given that these are genes overexpressed in tumors?\n\n\nExercise 3 Which GO term is the most underrepresented in this list?\n\nRepeat the analysis using GO biological process (complete). Rank the results according to the False Discovery Rate (FDR).\n\nExercise 4 Which enrichment is most significant? Are the results consistent in your opinion?\n\nNow analyze the list of genes that are under-expressed in tumors (GO biological process).\n\nExercise 5 To which major types of processes do the down-regulated genes belong?\n\n\n\n\nEMBOSS: tool package for sequence analysis, available for instance at: https://www.ebi.ac.uk/Tools/emboss/\n\n\nSearch for MTMR3_HUMAN (Q13615) and Q9W1Q6_DROME (Q9W1Q6) sequences in UniProt and compare them with:\n\nthe dotplot method (dotmatcher program). Don’t forget to adjust parameters to decrease noise\nthe water program (local alignment)\nthe needle program (global alignment)\n\n\nExercise 6 Which similarity regions between the two sequences can be detected using dotplot? Is it in agreement with the domain organisation of the two proteins (see InterPro annotations of the 2 sequences)?\n\nCompare the results obtained using local and global alignments.\n\nExercise 7 Why is the score obtained using needle lower?\n\n\nExercise 8 How can you improve the global alignment? Test your hypothesis.\n\n\nExercise 9 What can you say about the C-terminal domain? How could you characterize this domain?\n\n\n\n\nSearch for the protein sequence corresponding to the aef1 gene of Drosophila melanogaster in UniProt.\n\nExercise 10 Which domain(s) are present?\n\n\nExercise 11 Represent schematically the result of a self-comparison of this sequence using the dotplot method.\n\nPerform the self-comparison using dotmatcher (with w=10, s=30 for instance).\n\nExercise 12 Is the result in agreement with your expectations? Which additional information appears?"
  },
  {
    "objectID": "practicals-pharma/practical3.html#functional-analysis-of-a-gene-list-gene-ontology",
    "href": "practicals-pharma/practical3.html#functional-analysis-of-a-gene-list-gene-ontology",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "Gene expression profiles in tumors from breast cancer patients were compared to expression profiles in healthy tissue. This comparison revealed 991 overexpressed genes and 1422 downregulated genes in tumors. The gene lists are available on moodle.\nAnalyze the list of the 991 overexpressed genes using the GO Enrichment analysis tool on the Panther website and choosing the Cellular component ontology.\n\nExercise 1 Explain the meaning of the different columns presented.\n\n\nExercise 2 Which GO term is most enriched in the gene list? Consult the meaning of this term. Is this a consistent result given that these are genes overexpressed in tumors?\n\n\nExercise 3 Which GO term is the most underrepresented in this list?\n\nRepeat the analysis using GO biological process (complete). Rank the results according to the False Discovery Rate (FDR).\n\nExercise 4 Which enrichment is most significant? Are the results consistent in your opinion?\n\nNow analyze the list of genes that are under-expressed in tumors (GO biological process).\n\nExercise 5 To which major types of processes do the down-regulated genes belong?"
  },
  {
    "objectID": "practicals-pharma/practical3.html#dotplot-and-optimal-alignments-with-emboss-tools",
    "href": "practicals-pharma/practical3.html#dotplot-and-optimal-alignments-with-emboss-tools",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "EMBOSS: tool package for sequence analysis, available for instance at: https://www.ebi.ac.uk/Tools/emboss/\n\n\nSearch for MTMR3_HUMAN (Q13615) and Q9W1Q6_DROME (Q9W1Q6) sequences in UniProt and compare them with:\n\nthe dotplot method (dotmatcher program). Don’t forget to adjust parameters to decrease noise\nthe water program (local alignment)\nthe needle program (global alignment)\n\n\nExercise 6 Which similarity regions between the two sequences can be detected using dotplot? Is it in agreement with the domain organisation of the two proteins (see InterPro annotations of the 2 sequences)?\n\nCompare the results obtained using local and global alignments.\n\nExercise 7 Why is the score obtained using needle lower?\n\n\nExercise 8 How can you improve the global alignment? Test your hypothesis.\n\n\nExercise 9 What can you say about the C-terminal domain? How could you characterize this domain?\n\n\n\n\nSearch for the protein sequence corresponding to the aef1 gene of Drosophila melanogaster in UniProt.\n\nExercise 10 Which domain(s) are present?\n\n\nExercise 11 Represent schematically the result of a self-comparison of this sequence using the dotplot method.\n\nPerform the self-comparison using dotmatcher (with w=10, s=30 for instance).\n\nExercise 12 Is the result in agreement with your expectations? Which additional information appears?"
  },
  {
    "objectID": "practicals-pharma/practical3.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "href": "practicals-pharma/practical3.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "title": "Practical - Functional analysis of a gene list and sequence comparison",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 13 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 14 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 15 How many sequences can you get?\n\n\nExercise 16 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 17 What are the gap penalties? The word size?\n\n\nExercise 18 How are regions of low complexity processed?"
  },
  {
    "objectID": "practicals-pharma/practical2.html",
    "href": "practicals-pharma/practical2.html",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Navigation Tip\n\n\n\nThe bioinformatics page contains a lot of data and can be quite long; don’t hesitate to use Ctrl + F to quickly find the information you need.\n\n\n\n\nThe NCBI (National Center for Biotechnology Information) is a key resource for genomic data and bioinformatics tools. It hosts databases like GenBank, Nucleotide, PubMed, Taxonomy… In this first part of the practical, we will explore several of the databases hosted by the NCBI.\nGo to the NCBI website.\n\n\nSelect Nucleotide database on the NCBI website and search for the sequence NC_045512.\n\nExercise 1 What is this sequence? How long is it?\n\n\nExercise 2 Consult the Comment field. Which bank does this sequence come from? Is it reliable? What sequencing technology was used? What can you say about this entry compared with the initial GenBank entry (1st sequence of the SARS-Cov-2 genome)?\n\nLook for the coding region of the N protein, also known as nucleocapsid phosphoprotein (you can find it by searching the scientific name on the page).\n\nExercise 3 What do you think of the composition of this protein? What problems might such a sequence pose in a similarity search?\n\n\nExercise 4 Display the genome sequence in fasta format. How does this format compare with the RefSeq format?\n\n\n\n\nBreast cancer is a common cancer influenced by genetic factors, including BRCA1 or BRCA2.. Another critical gene is MUC1, often overexpressed in breast cancers, where it promotes tumor growth and metastasis. This exercise will explore the nucleotide sequences of MUC1 in humans using the NCBI database.\nSearch in Nucleotide for sequences containing the MUC1 gene for Homo sapiens, using filters or the advanced search.\n\nExercise 5 Why are there several sequences in RefSeq? in Genbank?\n\nAmong all the results, one of the sequences is a fragment of the gene in a breast cancer patient. To find it more easily, search for KT152889 with the search bar.\n\nExercise 6 Quickly position the annotated gene elements on a schema. What is the position of the variation on the sequence? What does it correspond to?\n\nAmong the features, the source field provides a cross-reference to NCBI’s Taxonomy bank. Follow this link.\n\n\n\n\nExercise 7 What human subspecies are listed in the Taxonomy bank?\n\n\nExercise 8 What other organisms are listed in the Homininae ?\n\n\nExercise 9 What orders are closest to the primate order? Which has the most available proteins?\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Protein box under the search bar to display the number of proteins for each group. By default, 3 sublevels are displayed, but you can change it to 1 to make the information easier to read. Don’t forget to click Display to update the page.\n\n\n\nExercise 10 How many genomes are available in the Genome Bank for Animals (Metazoa), Fungi, Viridiplantae and Eukaryotes? Comment.\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Datasets Genome box under the search bar to display the number of genomes for each group.\n\n\n\n\n\n\nIn the second part of the practical, we will explore protein-related databases and resources, such as UniProt, InterPro, and Pfam.\nUniProt is a comprehensive protein sequence and functional information database, which includes Swiss-Prot, a curated, manually annotated section, and TrEMBL, a collection of computationally annotated protein sequences.\nGo to the UniprotKB bank.\n\n\n\nExercise 11 How many human protein sequences are listed in UniprotKB? in SwissProt?\n\n\n\n\n\nExercise 12 Search for the protein associated with the MUC1 gene in human. Look the results. Which is the best entry?\n\nOpen the entry you consider the most reliable.\n\nExercise 13 Has the existence of this protein been established (see Protein existence at the top of the page)?\n\n\nExercise 14 Compare the default format, the text format and the fasta format (available in Download).\n\n\nExercise 15 How many isoforms are described for this protein (see Sequences & Isoforms)? Align the isoforms and see how they differ. For that, click on align isoforms and launch the alignment.\n\n\n\n\n\nExercise 16 The Go ontology can be used to describe proteins in 3 ways. Which are they?\n\n\nExercise 17 Follow the link to the entry “negative regulation of intrinsic apoptotic signaling pathway in response to DNA damage by p53 class mediator”. What is it? What type of GO is it? How often is it used to describe proteins?\n\n\nExercise 18 Are there any synonyms for the term GO?\n\n\n\n\n\nExercise 19 What can you say about the structures obtained experimentally for the protein?\n\n\nExercise 20 What can you say about the reliability of the AlphaFold prediction for this protein?\n\n\n\n\n\n\n\nExercise 21 Why are there so many more links to EMBL/GenBank/DDBJ than to RefSeq?\n\n\n\n\nDisplay the graphical representation (View protein in InterPro).\n\nExercise 22 How many distinct protein domains are there in this protein?\n\n\nExercise 23 From which banks do the 3 signatures associated with this InterPro domain originate?\n\nYou can get more information by passing the mouse over the colored bars, to open the domain in the associated bank, click on the corresponding link on the right.\n\nExercise 24 Follow the link to the associated PFAM signature. Display the signature (click on the Profile HMM tab). Comment the signature.\n\nIn a new tab, search for the BRCA1_HUMAN protein in InterProScan.\n\nExercise 25 How many distinct protein domains are there in this protein?"
  },
  {
    "objectID": "practicals-pharma/practical2.html#ncbi---interrogation-of-databases-by-entrez",
    "href": "practicals-pharma/practical2.html#ncbi---interrogation-of-databases-by-entrez",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "The NCBI (National Center for Biotechnology Information) is a key resource for genomic data and bioinformatics tools. It hosts databases like GenBank, Nucleotide, PubMed, Taxonomy… In this first part of the practical, we will explore several of the databases hosted by the NCBI.\nGo to the NCBI website.\n\n\nSelect Nucleotide database on the NCBI website and search for the sequence NC_045512.\n\nExercise 1 What is this sequence? How long is it?\n\n\nExercise 2 Consult the Comment field. Which bank does this sequence come from? Is it reliable? What sequencing technology was used? What can you say about this entry compared with the initial GenBank entry (1st sequence of the SARS-Cov-2 genome)?\n\nLook for the coding region of the N protein, also known as nucleocapsid phosphoprotein (you can find it by searching the scientific name on the page).\n\nExercise 3 What do you think of the composition of this protein? What problems might such a sequence pose in a similarity search?\n\n\nExercise 4 Display the genome sequence in fasta format. How does this format compare with the RefSeq format?\n\n\n\n\nBreast cancer is a common cancer influenced by genetic factors, including BRCA1 or BRCA2.. Another critical gene is MUC1, often overexpressed in breast cancers, where it promotes tumor growth and metastasis. This exercise will explore the nucleotide sequences of MUC1 in humans using the NCBI database.\nSearch in Nucleotide for sequences containing the MUC1 gene for Homo sapiens, using filters or the advanced search.\n\nExercise 5 Why are there several sequences in RefSeq? in Genbank?\n\nAmong all the results, one of the sequences is a fragment of the gene in a breast cancer patient. To find it more easily, search for KT152889 with the search bar.\n\nExercise 6 Quickly position the annotated gene elements on a schema. What is the position of the variation on the sequence? What does it correspond to?\n\nAmong the features, the source field provides a cross-reference to NCBI’s Taxonomy bank. Follow this link.\n\n\n\n\nExercise 7 What human subspecies are listed in the Taxonomy bank?\n\n\nExercise 8 What other organisms are listed in the Homininae ?\n\n\nExercise 9 What orders are closest to the primate order? Which has the most available proteins?\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Protein box under the search bar to display the number of proteins for each group. By default, 3 sublevels are displayed, but you can change it to 1 to make the information easier to read. Don’t forget to click Display to update the page.\n\n\n\nExercise 10 How many genomes are available in the Genome Bank for Animals (Metazoa), Fungi, Viridiplantae and Eukaryotes? Comment.\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Datasets Genome box under the search bar to display the number of genomes for each group."
  },
  {
    "objectID": "practicals-pharma/practical2.html#taxonomy-bank",
    "href": "practicals-pharma/practical2.html#taxonomy-bank",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "Exercise 9 Which human subspecies are listed in the Taxonomy bank?\n\n\nExercise 10 Which other organisms are listed in the Hominina e ?\n\n\nExercise 11 Which orders are closest to the primate order? Which has the most available proteins?\n\n\nExercise 12 How many genomes are available in the Genome Bank for Animals, Fungi, Viridiplantae and Eukaryotes? Please comment."
  },
  {
    "objectID": "practicals-pharma/practical2.html#protein-sequence-search-in-uniprotkb",
    "href": "practicals-pharma/practical2.html#protein-sequence-search-in-uniprotkb",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "In the second part of the practical, we will explore protein-related databases and resources, such as UniProt, InterPro, and Pfam.\nUniProt is a comprehensive protein sequence and functional information database, which includes Swiss-Prot, a curated, manually annotated section, and TrEMBL, a collection of computationally annotated protein sequences.\nGo to the UniprotKB bank.\n\n\n\nExercise 11 How many human protein sequences are listed in UniprotKB? in SwissProt?\n\n\n\n\n\nExercise 12 Search for the protein associated with the MUC1 gene in human. Look the results. Which is the best entry?\n\nOpen the entry you consider the most reliable.\n\nExercise 13 Has the existence of this protein been established (see Protein existence at the top of the page)?\n\n\nExercise 14 Compare the default format, the text format and the fasta format (available in Download).\n\n\nExercise 15 How many isoforms are described for this protein (see Sequences & Isoforms)? Align the isoforms and see how they differ. For that, click on align isoforms and launch the alignment.\n\n\n\n\n\nExercise 16 The Go ontology can be used to describe proteins in 3 ways. Which are they?\n\n\nExercise 17 Follow the link to the entry “negative regulation of intrinsic apoptotic signaling pathway in response to DNA damage by p53 class mediator”. What is it? What type of GO is it? How often is it used to describe proteins?\n\n\nExercise 18 Are there any synonyms for the term GO?\n\n\n\n\n\nExercise 19 What can you say about the structures obtained experimentally for the protein?\n\n\nExercise 20 What can you say about the reliability of the AlphaFold prediction for this protein?\n\n\n\n\n\n\n\nExercise 21 Why are there so many more links to EMBL/GenBank/DDBJ than to RefSeq?\n\n\n\n\nDisplay the graphical representation (View protein in InterPro).\n\nExercise 22 How many distinct protein domains are there in this protein?\n\n\nExercise 23 From which banks do the 3 signatures associated with this InterPro domain originate?\n\nYou can get more information by passing the mouse over the colored bars, to open the domain in the associated bank, click on the corresponding link on the right.\n\nExercise 24 Follow the link to the associated PFAM signature. Display the signature (click on the Profile HMM tab). Comment the signature.\n\nIn a new tab, search for the BRCA1_HUMAN protein in InterProScan.\n\nExercise 25 How many distinct protein domains are there in this protein?"
  },
  {
    "objectID": "practicals-pharma/practical4.html",
    "href": "practicals-pharma/practical4.html",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?\n\n\n\n\n\n\nA gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?"
  },
  {
    "objectID": "practicals-pharma/practical4.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "href": "practicals-pharma/practical4.html#search-for-homologous-proteins-using-blastp-ncbi-blast",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?"
  },
  {
    "objectID": "practicals-pharma/practical4.html#localisation-of-a-transcript-on-a-genome-and-search-for-a-cds",
    "href": "practicals-pharma/practical4.html#localisation-of-a-transcript-on-a-genome-and-search-for-a-cds",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "A gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?"
  },
  {
    "objectID": "practicals-pharma/practical1.html",
    "href": "practicals-pharma/practical1.html",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "To practise quality control and pre-processing of raw NGS data, we will use small datasets. The tools are available in Galaxy, a platform for omics data analysis.\nFirst step: log on to https://usegalaxy.fr\nthen, to ensure you have sufficient resources, go to the url:\nhttps://usegalaxy.fr/join-training/td1genomics/\nYou can then return to galaxy.\n\n\nYou can rename your history (right panel).\nThe 1st data set concerns a metagenomic study of the microbiome of the oral cavity of a snake. After extraction and fragmentation of the sample DNA, part of the 16S rRNA gene was amplified and sequenced (Illumina Single End) in order to identify the bacteria present. Due to time constraints, only part of the data will be analysed.\n\n\n\nImport the FASTQ file from the zenodo server:\n\nCopy the address of the link: https://zenodo.org/record/3977236/files/female_oral2.fastq-4143.gz\nIn Galaxy, use the Upload Data button (top left) then Paste/Fetch data, copy the link and launch (start).\n\nLook at the file (eye icon).\n\n\nExercise 1 What are the characteristics of the FASTQ format?\n\n\nExercise 2 Given that the scores are encoded using the SANGER/Illumina 1.8+ system, what is the score value for most of the bases at the start of the 1st read? Is this satisfactory?\n\n\n\n\nOpen the FASTQ Quality Control toolbox (left panel) and choose FastQC.\nFastQC\nExplore the quality of reads with FastQC (default settings). See the FastQC website for help and examples of analysis.\n\nExercise 3 Per Base Sequence Quality: How long are the reads? How does the quality evolve along the reads?\n\n\nExercise 4 Per sequence quality scores: What can be deduced from this graph?\n\n\nExercise 5 Per base sequence content: In the case of genome sequencing (without specific amplification), what should this graph look like? Is the result obtained normal in our case?\n\n\nExercise 6 Adapter content: Which adapter is detected?\n\n\n\n\n\nUse Trimmomatic (FASTQ Quality control section) to improve the quality of reads:\n\n\nPerform initial IllUMINACLIP step? Yes, select Nextera\nSliding window trimming (proposed by default)\nDrop reads below a specific length (MINLEN): 20\n\n\nExercise 7 Perform FastQC analysis again on the processed reads and compare the results to the raw data. Is the result acceptable?\n\n\nExercise 8 What would be the next step to identify the microbial species present in the snake’s oral cavity from these reads?\n\n\n\n\n\nThis dataset contains 50,000 PacBio HiFi reads from the sequencing of a human genome (PacBio - GIAB sample HG002).\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/m64011_190830_220126.Q20.subsample.fastq.gz\n\nPerform quality control with Nanoplot (available in Nanopore). This tool can only be used for long reads (PacBio or Nanopore):\n\n\nOptions for customizing the plot created:\nSpecify the bivariate format of the plots: dot\nShow the N50 mark in the read length histogram: Yes\n\n\n\n\n\nExercise 9 What is the average length of reads? Significant variations in read size are observed in the PacBio data, unlike the Illumina data. Why?\n\n\nExercise 10 What does N5O represent in this case?\n\n\nExercise 11 How useful can the Yield by length chart be?\n\n\nExercise 12 Read length vs Average read qualiy plot using dots: No read is observed with Q&lt;20. Why? Is there a link between read size and quality?\n\n\n\n\n\nThe last set corresponds to nanopore reads obtained from a plant genome. We will use PycoQC for quality control. This only works with Nanopores readings; it requires specific information provided by nanopore basecallers such as Guppy.\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/nanopore_basecalled-guppy.fastq.gz https://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/sequencing_summary.txt\n\n\n\n\nExercise 13 How many reads are available? How many bases does this represent?\n\n\nExercise 14 How do you explain the discrepancy between median reading size and N50?\n\n\nExercise 15 Basecalled reads length: what can you say about the distribution of lengths?\n\n\nExercise 16 Basecalled reads quality: What range do most quality scores fall into?"
  },
  {
    "objectID": "practicals-pharma/practical1.html#ncbi---interrogation-of-databases-by-entrez",
    "href": "practicals-pharma/practical1.html#ncbi---interrogation-of-databases-by-entrez",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "The NCBI (National Center for Biotechnology Information) is a key resource for genomic data and bioinformatics tools. It hosts databases like GenBank, Nucleotide, PubMed, Taxonomy… In this first part of the practical, we will explore several of the databases hosted by the NCBI.\nGo to the NCBI website.\n\n\nSelect Nucleotide database on the NCBI website and search for the sequence NC_045512.\n\nExercise 1 What is this sequence? How long is it?\n\n\nExercise 2 Consult the Comment field. Which bank does this sequence come from? Is it reliable? What sequencing technology was used? What can you say about this entry compared with the initial GenBank entry (1st sequence of the SARS-Cov-2 genome)?\n\nLook for the coding region of the N protein, also known as nucleocapsid phosphoprotein (you can find it by searching the scientific name on the page).\n\nExercise 3 What do you think of the composition of this protein? What problems might such a sequence pose in a similarity search?\n\n\nExercise 4 Display the genome sequence in fasta format. How does this format compare with the RefSeq format?\n\n\n\n\nBreast cancer is a common cancer influenced by genetic factors, including BRCA1 or BRCA2.. Another critical gene is MUC1, often overexpressed in breast cancers, where it promotes tumor growth and metastasis. This exercise will explore the nucleotide sequences of MUC1 in humans using the NCBI database.\nSearch in Nucleotide for sequences containing the MUC1 gene for Homo sapiens, using filters or the advanced search.\n\nExercise 5 Why are there several sequences in RefSeq? in Genbank?\n\nAmong all the results, one of the sequences is a fragment of the gene in a breast cancer patient. To find it more easily, search for KT152889 with the search bar.\n\nExercise 6 Quickly position the annotated gene elements on a schema. What is the position of the variation on the sequence? What does it correspond to?\n\nAmong the features, the source field provides a cross-reference to NCBI’s Taxonomy bank. Follow this link.\n\n\n\n\nExercise 7 What human subspecies are listed in the Taxonomy bank?\n\n\nExercise 8 What other organisms are listed in the Homininae ?\n\n\nExercise 9 What orders are closest to the primate order? Which has the most available proteins?\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Protein box under the search bar to display the number of proteins for each group. By default, 3 sublevels are displayed, but you can change it to 1 to make the information easier to read. Don’t forget to click Display to update the page.\n\n\n\nExercise 10 How many genomes are available in the Genome Bank for Animals (Metazoa), Fungi, Viridiplantae and Eukaryotes? Comment.\n\n\n\n\n\n\n\nHelp\n\n\n\nCheck the Datasets Genome box under the search bar to display the number of genomes for each group."
  },
  {
    "objectID": "practicals-pharma/practical1.html#protein-sequence-search-in-uniprotkb",
    "href": "practicals-pharma/practical1.html#protein-sequence-search-in-uniprotkb",
    "title": "Practical - Exploring sequence database",
    "section": "",
    "text": "In the second part of the practical, we will explore protein-related databases and resources, such as UniProt, InterPro, and Pfam.\nUniProt is a comprehensive protein sequence and functional information database, which includes Swiss-Prot, a curated, manually annotated section, and TrEMBL, a collection of computationally annotated protein sequences.\nGo to the UniprotKB bank.\n\n\n\nExercise 11 How many human protein sequences are listed in UniprotKB? in SwissProt?\n\n\n\n\n\nExercise 12 Search for the protein associated with the MUC1 gene in human. Look the results. Which is the best entry?\n\nOpen the entry you consider the most reliable.\n\nExercise 13 Has the existence of this protein been established (see Protein existence at the top of the page)?\n\n\nExercise 14 Compare the default format, the text format and the fasta format (available in Download).\n\n\nExercise 15 How many isoforms are described for this protein (see Sequences & Isoforms)? Align the isoforms and see how they differ. For that, click on align isoforms and launch the alignment.\n\n\n\n\n\nExercise 16 The Go ontology can be used to describe proteins in 3 ways. Which are they?\n\n\nExercise 17 Follow the link to the entry “negative regulation of intrinsic apoptotic signaling pathway in response to DNA damage by p53 class mediator”. What is it? What type of GO is it? How often is it used to describe proteins?\n\n\nExercise 18 Are there any synonyms for the term GO?\n\n\n\n\n\nExercise 19 What can you say about the structures obtained experimentally for the protein?\n\n\nExercise 20 What can you say about the reliability of the AlphaFold prediction for this protein?\n\n\n\n\n\n\n\nExercise 21 Why are there so many more links to EMBL/GenBank/DDBJ than to RefSeq?\n\n\n\n\nDisplay the graphical representation (View protein in InterPro).\n\nExercise 22 How many distinct protein domains are there in this protein?\n\n\nExercise 23 From which banks do the 3 signatures associated with this InterPro domain originate?\n\nYou can get more information by passing the mouse over the colored bars, to open the domain in the associated bank, click on the corresponding link on the right.\n\nExercise 24 Follow the link to the associated PFAM signature. Display the signature (click on the Profile HMM tab). Comment the signature.\n\nIn a new tab, search for the BRCA1_HUMAN protein in InterProScan.\n\nExercise 25 How many distinct protein domains are there in this protein?"
  },
  {
    "objectID": "practicals-pharma/practical1.html#illumina-se",
    "href": "practicals-pharma/practical1.html#illumina-se",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "You can rename your history (right panel).\nThe 1st data set concerns a metagenomic study of the microbiome of the oral cavity of a snake. After extraction and fragmentation of the sample DNA, part of the 16S rRNA gene was amplified and sequenced (Illumina Single End) in order to identify the bacteria present. Due to time constraints, only part of the data will be analysed.\n\n\n\nImport the FASTQ file from the zenodo server:\n\nCopy the address of the link: https://zenodo.org/record/3977236/files/female_oral2.fastq-4143.gz\nIn Galaxy, use the Upload Data button (top left) then Paste/Fetch data, copy the link and launch (start).\n\nLook at the file (eye icon).\n\n\nExercise 1 What are the characteristics of the FASTQ format?\n\n\nExercise 2 Given that the scores are encoded using the SANGER/Illumina 1.8+ system, what is the score value for most of the bases at the start of the 1st read? Is this satisfactory?\n\n\n\n\nOpen the FASTQ Quality Control toolbox (left panel) and choose FastQC.\nFastQC\nExplore the quality of reads with FastQC (default settings). See the FastQC website for help and examples of analysis.\n\nExercise 3 Per Base Sequence Quality: How long are the reads? How does the quality evolve along the reads?\n\n\nExercise 4 Per sequence quality scores: What can be deduced from this graph?\n\n\nExercise 5 Per base sequence content: In the case of genome sequencing (without specific amplification), what should this graph look like? Is the result obtained normal in our case?\n\n\nExercise 6 Adapter content: Which adapter is detected?\n\n\n\n\n\nUse Trimmomatic (FASTQ Quality control section) to improve the quality of reads:\n\n\nPerform initial IllUMINACLIP step? Yes, select Nextera\nSliding window trimming (proposed by default)\nDrop reads below a specific length (MINLEN): 20\n\n\nExercise 7 Perform FastQC analysis again on the processed reads and compare the results to the raw data. Is the result acceptable?\n\n\nExercise 8 What would be the next step to identify the microbial species present in the snake’s oral cavity from these reads?"
  },
  {
    "objectID": "practicals-pharma/practical1.html#pacbio-hifi",
    "href": "practicals-pharma/practical1.html#pacbio-hifi",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "This dataset contains 50,000 PacBio HiFi reads from the sequencing of a human genome (PacBio - GIAB sample HG002).\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/m64011_190830_220126.Q20.subsample.fastq.gz\n\nPerform quality control with Nanoplot (available in Nanopore). This tool can only be used for long reads (PacBio or Nanopore):\n\n\nOptions for customizing the plot created:\nSpecify the bivariate format of the plots: dot\nShow the N50 mark in the read length histogram: Yes\n\n\n\n\n\nExercise 9 What is the average length of reads? Significant variations in read size are observed in the PacBio data, unlike the Illumina data. Why?\n\n\nExercise 10 What does N5O represent in this case?\n\n\nExercise 11 How useful can the Yield by length chart be?\n\n\nExercise 12 Read length vs Average read qualiy plot using dots: No read is observed with Q&lt;20. Why? Is there a link between read size and quality?"
  },
  {
    "objectID": "practicals-pharma/practical1.html#nanopore",
    "href": "practicals-pharma/practical1.html#nanopore",
    "title": "Practical - Pre-processing of Sequencing Reads",
    "section": "",
    "text": "The last set corresponds to nanopore reads obtained from a plant genome. We will use PycoQC for quality control. This only works with Nanopores readings; it requires specific information provided by nanopore basecallers such as Guppy.\n\n\nhttps://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/nanopore_basecalled-guppy.fastq.gz https://zenodo.org/api/files/ff9aa6e3-3d69-451f-9798-7ea69b475989/sequencing_summary.txt\n\n\n\n\nExercise 13 How many reads are available? How many bases does this represent?\n\n\nExercise 14 How do you explain the discrepancy between median reading size and N50?\n\n\nExercise 15 Basecalled reads length: what can you say about the distribution of lengths?\n\n\nExercise 16 Basecalled reads quality: What range do most quality scores fall into?"
  },
  {
    "objectID": "practicals-1A/practical3.html#blast-online",
    "href": "practicals-1A/practical3.html#blast-online",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?\n\n\n\n\n\n\nA gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?"
  },
  {
    "objectID": "practicals-1A/practical3.html#blast-in-command--",
    "href": "practicals-1A/practical3.html#blast-in-command--",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nThis exercise, along with the next one, is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe materials used in these exercises are located in the directory /data/blast_tp/.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to small_blast directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/small_blast/\n\n\n\nThis directory contains:\n\ngene_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains a nucleotide sequence file of the gene you generated from the lab (single_gene_mylab.fa), it’s the query.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nhead gene_db/nifh-ref.fa\nhead query_gene/single_gene_mylab.fa\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Count the number of sequences in the query file\ngrep -c \"&gt;\" gene_db/nifh-ref.fa\n\n# Count the number of sequences in the database file\ngrep -c \"&gt;\" query_gene/single_gene_mylab.fa\n\n\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical and create the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmakeblastdb -in /data/blast_tp/small_blast/gene_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/small_blast/query_gene/single_gene_mylab.fa -db nifh-db.fa.ndb -out single_gene_mylab.out -outfmt 6\n\n\n\n\nExercise 28 How many results do you get? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l single_gene_mylab.out\n\nExercise 29 What is the range of percentage identity for the results? Similarly, what is the range of e-values? Use morecommand.\nmore\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore single_gene_mylab.out"
  },
  {
    "objectID": "practicals-1A/practical3.html#blast-in-command",
    "href": "practicals-1A/practical3.html#blast-in-command",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nThis exercise, along with the next one, is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe materials used in these exercises are located in the directory /data/blast_tp/.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to small_blast directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/small_blast/\n\n\n\nThis directory contains:\n\ngene_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains a nucleotide sequence file of the gene you generated from the lab (single_gene_mylab.fa), it’s the query.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nhead gene_db/nifh-ref.fa\nhead query_gene/single_gene_mylab.fa\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Count the number of sequences in the query file\ngrep -c \"&gt;\" gene_db/nifh-ref.fa\n\n# Count the number of sequences in the database file\ngrep -c \"&gt;\" query_gene/single_gene_mylab.fa\n\n\n\n\n\n\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical, create a directory small_blast and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir small_blast\ncd small_blast\nmakeblastdb -in /data/blast_tp/small_blast/gene_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/small_blast/query_gene/single_gene_mylab.fa -db nifh-db.fa.ndb -out single_gene_mylab.out -outfmt 6\n\n\n\n\nExercise 28 How many results do you get? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l single_gene_mylab.out\n\n\n\n\nExercise 29 What is the range of percentage identity for the results? Similarly, what is the range of e-values? Use morecommand.\n\nmore\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore single_gene_mylab.out\n\n\n\n\n\n\n\n\n\nInstead of just one gene as shown in Project 1, we may need to compare a large amount of sequences with a database in reality. In this project, we will try to identify the existence of 50 nifh genes in three different soil metagenomes. To do that, we will align sequences from metagenome against the nifh gene database.\nNavigate to the folder /data/blast_tp/big_blast/ first, then list files and directories in this folder.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/big_blast/\ntree\n\n\n\nThis directory contains:\n\nnifh_db/: a folder contains nucleotide sequence file for nitrogen fixation genes (`nifh-ref.fa), it’s the database.\nmetags/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), they are queries.\n\nThe objective is to identify the existence of nitrogen fixation genes in soil metagenome files.\n\nExercise 30 How many sequences are there in the fasta file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l nifh_db/nifh-ref.fa \nwc -l metags/*\n\n\n\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nNavigate back to the directory of the current practical, create a directory big_blast and construct the BLAST database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir big_blast\ncd big_blast\nmakeblastdb -in /data/blast_tp/big_blast/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\n\n\n\n\n\n\nNow we can BLAST the metagenome files to nifh gene database. Run one BLAST for each query.\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/big_blast/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\n\nExercise 31 How many results do you get for each fasta file? Use the wc -l.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nWe will some new command to manipulate the output file.\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 32 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 33 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 34 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\n\nExercise 35 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  },
  {
    "objectID": "practicals-1A/practical3.html#solution-15",
    "href": "practicals-1A/practical3.html#solution-15",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "cut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l"
  },
  {
    "objectID": "practicals-1A/practical3.html#solution-16",
    "href": "practicals-1A/practical3.html#solution-16",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "cut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l"
  },
  {
    "objectID": "practicals-1A/practical3.html#identification-of-genes-inside-metagenomics-data",
    "href": "practicals-1A/practical3.html#identification-of-genes-inside-metagenomics-data",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "This exercise is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nThe materials used in this are located in the directory /data/blast_tp/.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to blast_tp directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/\n\n\n\nThis directory contains:\n\nnifh_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), there are the queries.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can display the contents of each file individually:\nhead metags/corn.fa \nhead metags/prairie.fa \nhead metags/soybean.fa\nhead nifh_db/nifh-ref.fa\nOr use * to apply the head command to all files at once:\nhead */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\nExercise 28 How many sequences are there in theses fasta files?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can count for each file individually:\ngrep -c \"&gt;\" metags/corn.fa \ngrep -c \"&gt;\" metags/prairie.fa \ngrep -c \"&gt;\" metags/soybean.fa\ngrep -c \"&gt;\" nifh_db/nifh-ref.fa\nOr use * to apply the grep command to all files at once:\ngrep -c \"&gt;\" */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmakeblastdb -in /data/blast_tp/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST for each query file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\nExercise 29 How many results do you get for each metagenome? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nmore\nYou can display the file with the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\nExercise 30 What is the range of percentage identity for the results of BLAST of soybean metagenome?? Similarly, what is the range of e-values? Use morecommand.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore soybean.out\n\n\n\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\n\nExercise 31 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 32 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 33 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 34 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  },
  {
    "objectID": "practical3.save.html",
    "href": "practical3.save.html",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?\n\n\n\n\n\n\nA gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?\n\n\n\n\n\n\n\n\n\n\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nThis exercise, along with the next one, is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe materials used in these exercises are located in the directory /data/blast_tp/.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to small_blast directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/small_blast/\n\n\n\nThis directory contains:\n\ngene_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains a nucleotide sequence file of the gene you generated from the lab (single_gene_mylab.fa), it’s the query.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nhead gene_db/nifh-ref.fa\nhead query_gene/single_gene_mylab.fa\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Count the number of sequences in the query file\ngrep -c \"&gt;\" gene_db/nifh-ref.fa\n\n# Count the number of sequences in the database file\ngrep -c \"&gt;\" query_gene/single_gene_mylab.fa\n\n\n\n\n\n\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical, create a directory small_blast and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir small_blast\ncd small_blast\nmakeblastdb -in /data/blast_tp/small_blast/gene_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/small_blast/query_gene/single_gene_mylab.fa -db nifh-db.fa.ndb -out single_gene_mylab.out -outfmt 6\n\n\n\n\nExercise 28 How many results do you get? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l single_gene_mylab.out\n\n\n\n\nExercise 29 What is the range of percentage identity for the results? Similarly, what is the range of e-values? Use morecommand.\n\nmore\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore single_gene_mylab.out\n\n\n\n\n\n\n\n\n\nInstead of just one gene as shown in Project 1, we may need to compare a large amount of sequences with a database in reality. In this project, we will try to identify the existence of 50 nifh genes in three different soil metagenomes. To do that, we will align sequences from metagenome against the nifh gene database.\nNavigate to the folder /data/blast_tp/big_blast/ first, then list files and directories in this folder.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/big_blast/\ntree\n\n\n\nThis directory contains:\n\nnifh_db/: a folder contains nucleotide sequence file for nitrogen fixation genes (`nifh-ref.fa), it’s the database.\nmetags/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), they are queries.\n\nThe objective is to identify the existence of nitrogen fixation genes in soil metagenome files.\n\nExercise 30 How many sequences are there in the fasta file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l nifh_db/nifh-ref.fa \nwc -l metags/*\n\n\n\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nNavigate back to the directory of the current practical, create a directory big_blast and construct the BLAST database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir big_blast\ncd big_blast\nmakeblastdb -in /data/blast_tp/big_blast/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\n\n\n\n\n\n\nNow we can BLAST the metagenome files to nifh gene database. Run one BLAST for each query.\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/big_blast/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\n\nExercise 31 How many results do you get for each fasta file? Use the wc -l.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nWe will some new command to manipulate the output file.\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 32 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 33 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 34 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\n\nExercise 35 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  },
  {
    "objectID": "practical3.save.html#blast-online",
    "href": "practical3.save.html#blast-online",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "We want to find homologs of a bat protein sequence available on moodle.\n\n\nWhat can you say about the composition of this protein sequence? What problem can be encountered in a similarity search with such a composition?\n\n\n\n\nExercise 1 Which databases are available for the search?\n\nSelect the SwissProt database.\n\nExercise 2 Will the search be exhaustive?\n\n\n\n\nSee Algorithm parameters, at the bottom of the page.\n\nExercise 3 How many sequences can you get?\n\n\nExercise 4 What is the Expect threshold to display sequences? Modify the Expect threshold to obtain results with E≤10.\n\n\nExercise 5 What are the gap penalties? The word size?\n\n\nExercise 6 How are regions of low complexity processed?\n\n\n\n\n\n\n\nExercise 7 How many sequences do you obtain with E≤10?\n\n\nExercise 8 What can be deduced from the graphical representation of BLAST results? There is no alignment on the C-terminal region. Why?\n\n\n\n\n\n\nExercise 9 Which families are detected?\n\n\n\n\nExercise 10 In which organisms do you find hits?\n\n\nExercise 11 In which species is the closest sequence found?\n\n\n\n\n\nExercise 12 Identify a conserved motif in the superfamily.\n\n\nExercise 13 According to the alignments, are the detected sequences all homologous to our query?\n\n\n\n\n\nExercise 14 What might be the consequences of a decrease in word size?\n\nRepeat the search with the parameters used in question 4 but with a word size of 3 aa.\n\nExercise 15 How many “hits” are you getting now?\n\n\nExercise 16 In which taxon (taxa) are similar proteins found?\n\n\n\n\n\n\nA gene has been detected as being over-expressed in several patients with esophageal cancer. The sequence of the transcript is provided below.\n&gt;human mRNA\nGTGTGGACACTCCTAGGTTAGAAAGTTTGGTATGTTGCTATACCTTTGCTTCTCCCACCT\nTCCCCAATATCTAATATGTATTTCTCATTCTTAGAATAATCCAGAATGGCTACTCTGATC\nTATGTTGATAAGGAAAATGGAGAACCAGGCACCCGTGTGGTTGCTAAGGATGGGCTGAAG\nCTGGGGTCTGGACCTTCAATCAAAGCCTTAGATGGGAGATCTCAAGTTTCAACACCACGT\nTTTGGCAAAACGTTCGATGCCCCACCAGCCTTACCTAAAGCTACTAGAAAGGCTTTGGGA\nACTGTCAACAGAGCTACAGAAAAGTCTGTAAAGACCAAGGGACCCCTCAAACAAAAACAG\nCCAAGCTTTTCTGCCAAAAAGATGACTGAGAAGACTGTTAAAGCAAAAAGCTCTGTTCCT\nGCCTCAGATGATGCCTATCCAGAAATAGAAAAATTCTTTCCCTTCAATCCTCTAGACTTT\nGAGAGTTTTGACCTGCCTGAAGAGCACCAGATTGCGCACCTCCCCTTGAGTGGAGTGCCT\nCTCATGATCCTTGACGAGGAGAGAGAGCTTGAAAAGCTGTTTCAGCTGGGCCCCCCTTCA\nCCTGTGAAGATGCCCTCTCCACCATGGGAATCCAATCTGTTGCAGTCTCCTTCAAGCATT\nCTGTCGACCCTGGATGTTGAATTGCCACCTGTTTGCTGTGACATAGATATTTAAATTTCT\nTAGTGCTTCAGAGTTTGTGTGTATTTGTATTAATAAAGCATTCTTTATCAGAAAAAAAAA\nAAAAAAA\n\n\nLocalize the corresponding gene on the human genome with BLAST (BLAST Genomes section, at the bottom of the page). Use the GRCh38.p14 reference assembly.\n\n\nMEGABLAST is proposed by default.\n\nExercise 17 What is the word size in MEGABLAST? Can we use MegaBLAST in our case or should we use BLASTN?\n\n\n\n\n\nExercise 18 Comment obtained results (number of hits, conservation…)\n\n\nExercise 19 Give the localization of the transcribed region (chromosome, strand, start, end).\n\n\nExercise 20 How many exons are present in this gene? Can you give the precise boundaries of exons?\n\n\nExercise 21 How can you explain the ranking provided by BLAST?\n\n\nExercise 22 Which program can be used to improve your results? Compare results.\n\n\n\n\n\nExercise 23 How could we localize the coding region of this transcript?\n\n\nExercise 24 Perform the similarity search in SwissProt.\n\n\nExercise 25 What are the boundaries and reading frame of the CDS?"
  },
  {
    "objectID": "practical3.save.html#blast-in-command",
    "href": "practical3.save.html#blast-in-command",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "To learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\n\n\nThis exercise, along with the next one, is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe materials used in these exercises are located in the directory /data/blast_tp/.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to small_blast directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/small_blast/\n\n\n\nThis directory contains:\n\ngene_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains a nucleotide sequence file of the gene you generated from the lab (single_gene_mylab.fa), it’s the query.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nhead gene_db/nifh-ref.fa\nhead query_gene/single_gene_mylab.fa\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n# Count the number of sequences in the query file\ngrep -c \"&gt;\" gene_db/nifh-ref.fa\n\n# Count the number of sequences in the database file\ngrep -c \"&gt;\" query_gene/single_gene_mylab.fa\n\n\n\n\n\n\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical, create a directory small_blast and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir small_blast\ncd small_blast\nmakeblastdb -in /data/blast_tp/small_blast/gene_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/small_blast/query_gene/single_gene_mylab.fa -db nifh-db.fa.ndb -out single_gene_mylab.out -outfmt 6\n\n\n\n\nExercise 28 How many results do you get? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l single_gene_mylab.out\n\n\n\n\nExercise 29 What is the range of percentage identity for the results? Similarly, what is the range of e-values? Use morecommand.\n\nmore\nYou can display the reference file the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore single_gene_mylab.out\n\n\n\n\n\n\n\n\n\nInstead of just one gene as shown in Project 1, we may need to compare a large amount of sequences with a database in reality. In this project, we will try to identify the existence of 50 nifh genes in three different soil metagenomes. To do that, we will align sequences from metagenome against the nifh gene database.\nNavigate to the folder /data/blast_tp/big_blast/ first, then list files and directories in this folder.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/big_blast/\ntree\n\n\n\nThis directory contains:\n\nnifh_db/: a folder contains nucleotide sequence file for nitrogen fixation genes (`nifh-ref.fa), it’s the database.\nmetags/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), they are queries.\n\nThe objective is to identify the existence of nitrogen fixation genes in soil metagenome files.\n\nExercise 30 How many sequences are there in the fasta file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l nifh_db/nifh-ref.fa \nwc -l metags/*\n\n\n\n\n\n\n\n\n\nThe Wildcard\n\n\n\nThe * symbol is a wildcard character used to represent “zero or more characters” in file or directory names. When used in commands, it allows you to work with multiple files or patterns at once.\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nNavigate back to the directory of the current practical, create a directory big_blast and construct the BLAST database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmkdir big_blast\ncd big_blast\nmakeblastdb -in /data/blast_tp/big_blast/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\n\n\n\n\n\n\nNow we can BLAST the metagenome files to nifh gene database. Run one BLAST for each query.\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/big_blast/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/big_blast/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\n\nExercise 31 How many results do you get for each fasta file? Use the wc -l.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nWe will some new command to manipulate the output file.\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 32 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 33 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 34 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\n\nExercise 35 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  },
  {
    "objectID": "practicals-1A/practical3.html#gene-identification-in-metagenomic-data",
    "href": "practicals-1A/practical3.html#gene-identification-in-metagenomic-data",
    "title": "Practical - Similary searches",
    "section": "",
    "text": "This exercise is based on content from A Quick Guide to Getting Started with Shell and BLAST.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\n\n\nTo learn how to connect to the server for practical work, refer to the Server Connection Guide.\nOnce you’re connected, start by creating a working directory for this session and navigating into it.\nmkdir\nThe mkdir command stands for “make directory” and is used to create a new folder in the file system. You can create your directory like this:\nmkdir &lt;directory_name&gt;\ncd\nThe cd command stands for “change directory”, allows you to move into a different folder within the file system. Use it as follows:\ncd &lt;directory&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmkdir tp3\ncd tp3\n\n\n\n\n\n\n\n\n\nHelp\n\n\n\nIf you need help with a command, display its help using: - &lt;command-h or &lt;command--help for short help messages. - man &lt;command&gt; to display the full manual of a command.\n\n\n\n\n\nThe materials used in this are located in the directory /data/blast_tp/.\nThe objective is to identify the existence of nitrogen fixation genes* in soil metagenome.\nls\nThe ls command is used to list the contents of a directory in Linux. It provides a way to see files and subdirectories within the specified directory.\nls &lt;directory&gt;\ntree\nThe treecommand is used to display the contents of a directory in a hierarchical structure. It provides a visual representation of files and subdirectories within the specified directory.\ntree &lt;directory&gt;\n\nExercise 26 What are in in /data/blast_tp/ ? Use lscommand. Explore the subdirectory with the tree command and map out the directory structure.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls /data/blast_tp/\ntree /data/blast_tp/\n\n\n\nNavigate to blast_tp directory thanks to cd command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd /data/blast_tp/\n\n\n\nThis directory contains:\n\nnifh_db/: a folder containing a nucleotide sequence file of 50 nifh genes (nifh-ref.fa), it’s the database.\nquery_gene/: a folder contains metagenome files from three different Iowa crop soils (corn.fa, soybean.fa, and prairie.fa), there are the queries.\n\nhead\nThe head command is used to display the first few lines of a file, which is helpful when you want to quickly preview its content without opening the entire file.\nhead &lt;file&gt;\nBy default, head shows the first 10 lines of the file. You can customize the number of lines displayed using the -n option. This option allows you to specify the exact number of lines to display.\nhead -n 20 &lt;file&gt;\nThis command will display the first 20 lines of the file. You can adjust the number of lines according to your needs.\n\nExercise 27 How does sequence fasta file look like? Use the command head to display the begining of each file.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can display the contents of each file individually:\nhead metags/corn.fa \nhead metags/prairie.fa \nhead metags/soybean.fa\nhead nifh_db/nifh-ref.fa\nOr use * to apply the head command to all files at once:\nhead */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\ngrep\ngrep, short for “global regular expression print”, is a command used for searching and matching text patterns in files contained in the regular expressions.\nDisplay the lines with a pattern:\ngrep \"&lt;pattern&gt;\" &lt;file_path&gt;\nThis command searches through the specified file and outputs the lines that contain the given pattern.\nCount the lines with a pattern:\ngrep -c \"&lt;pattern&gt;\" &lt;file_path&gt;\nThe -c option tells grep to count the number of lines that match the specified pattern rather than displaying them. This is useful for quickly determining how many occurrences of the pattern exist in the file.\n\nExercise 28 How many sequences are there in theses fasta files?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can count for each file individually:\ngrep -c \"&gt;\" metags/corn.fa \ngrep -c \"&gt;\" metags/prairie.fa \ngrep -c \"&gt;\" metags/soybean.fa\ngrep -c \"&gt;\" nifh_db/nifh-ref.fa\nOr use * to apply the grep command to all files at once:\ngrep -c \"&gt;\" */*.fa\nThe * is a wildcard that matches multiple files. In this case: */*.fa expands to all .fa files located inside any subdirectory.\nThis approach is useful when working with multiple files in different directories, avoiding the need to list them manually.\n\n\n\n\n\n\nWe want to find the existence of nifh genes in soil metagenome samples. Making a database for nifh genes is a smart way to index the gene sequences so that it can search and compare metagenome sequences (query) with nifh gene sequences much faster.\nmakeblastdb\nThe makeblastdb command is used to create a BLAST database from your sequence data, which serves as the reference for comparing queries. Creating a database for genes is an efficient way to index gene sequences, allowing for much faster searches and comparisons against the database.\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nExplanation of the command options:\n\n-in &lt;sequence_file&gt;: Specifies the input file containing the sequences you want to include in the database. This file should be in FASTA or other supported formats.\n-dbtype &lt;type&gt;: Indicates the type of sequences in the input file. Use nucl for nucleotide sequences and prot for protein sequences.\n-out &lt;name&gt;: Defines the name for the output database files. The program will create several files with this base name, which will be used for subsequent BLAST searches.\n\nmakeblastdb -in &lt;sequence_file&gt; -dbtype &lt;type&gt; -out &lt;name&gt;\nNavigate back to the directory of the current practical and construct the BLAST database.\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncd ~/td3/\nmakeblastdb -in /data/blast_tp/nifh_db/nifh-ref.fa -dbtype nucl -out nifh-db.fa\nNote: The tilde ~ is a shortcut for your home directory /home/&lt;username&gt;.\n\n\n\nLook the files generared. Use ls command.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nls\n\n\n\n\n\n\nNow, we can perform a BLAST search of the gene sequence against this database. BLAST offers different algorithms depending on the type of query and the database:\n\nblastn: Used for nucleotide sequence queries against a nucleotide database.\nblastp: Used for protein sequence queries against a protein database.\nblastx: Used for translating a nucleotide query to protein and comparing it against a protein database.\ntblastn: Used for protein queries against a translated nucleotide database.\ntblastx: Used for translating both the nucleotide query and the database sequences, comparing them in protein space.\n\nTo see the list of parameters of this command use:\nblastn -help\nFor this practical, we need of theses options:\nblastn -query &lt;query_file&gt; -db &lt;db_file&gt; -out &lt;name_of_output&gt; -outfmt &lt;format&gt;\nExplanation of options:\n\nquery &lt;query_file&gt;: Specifies the input file with the sequence to search.\ndb &lt;db_file&gt;: Specifies the BLAST database to search against.\nout &lt;name_of_output&gt;: Defines the output file for the results.\noutfmt &lt;format&gt;: Sets the output format to tabular for easier parsing. Format 6 provides tabular output, which includes information like query sequence, subject sequence, percent identity, alignment length, and e-value. It is commonly used for further parsing and analysis of the results. We can have a good understanding of -outfmt 6 format from this webpage.\n\nLaunch BLAST for each query file.\n\n\n\n\n\n\nSolution\n\n\n\n\n\nblastn -query /data/blast_tp/metags/corn.fa -db nifh-db.fa -out corn.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/prairie.fa -db nifh-db.fa -out prairie.out -outfmt 6\n\nblastn -query /data/blast_tp/metags/soybean.fa -db nifh-db.fa -out soybean.out -outfmt 6\n\n\n\n\n\n\n\nExercise 29 How many results do you get for each metagenome? Use the wc -l.\n\nwc\nThe wc (word count) command in Unix/Linux is a utility used to count lines, words, and bytes in a file or input stream.\nHere are its main options:\n\n-l: Counts the number of lines.\n-w: Counts the number of words.\n-c: Counts the number of bytes.\n-m: Counts the number of characters.\n-L: Reports the length of the longest line.\n\nwc [options] &lt;file&gt;\n\n\n\n\n\n\nSolution\n\n\n\n\n\nwc -l *.out\nThe wildcard * matches all files ending with .out.\n\n\n\nTo understand the meaning of each column in the BLAST output (format 6), refer to this webpage.\nmore\nYou can display the file with the command more.\nThe more command is used to display the contents of a file one screen at a time. This is useful for viewing large files like FASTQ files, where the data is too big to fit on a single screen.\nmore &lt;path_file_to_display&gt;\n\nExercise 30 What is the range of percentage identity for the results of BLAST of soybean metagenome?? Similarly, what is the range of e-values? Use morecommand.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nmore soybean.out\n\n\n\nsort\nThe sort command is used to sort the lines of a file or input stream based on specified criteria. It can sort in ascending or descending order and handle various types of data.\nsort [options] [file]\nCommon Options:\n\n-n: Sort numerically.\n-r: Sort in reverse order.\n-k &lt;key&gt;: Specifies the key (column) to sort by.\n-u: Remove duplicate lines.\n\ncut\nThe cut command is used to extract specific sections or columns from each line of a file or input stream. It is particularly useful for parsing delimited files, such as CSV or tab-separated files.\ncut [options] [file]\nCommon Options:\n\n-d &lt;delimiter&gt;: Specifies the delimiter character (default is tab).\n-f &lt;fields&gt;: Specifies the fields to extract (e.g., -f 1,3 to extract the first and third fields).\n\nuniq\nThe uniq command is used to remove (or keep) consecutive duplicate lines from a sorted file or input stream. It is often used in conjunction with sort to ensure that the input is sorted.\nuniq [options] [file]\nCommon Options:\n\n-c: Prefix lines with the number of occurrences.\n-d: Only print duplicate lines.\n-u: Only print unique lines.\n\n\nExercise 31 How many uniq nifh genes were hit by sequences from soybean metagenome?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 2 soybean.out | sort | uniq | wc -l\n\ncut -f 2 soybean.out | sort -u | wc -l\n\n\n\n\nExercise 32 How many uniq sequences from prairie metagenome can hit nifh genes?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThere are several ways to do this:\ncut -f 1 prairie.out | sort -u |wc -l\n\ncut -f 1 prairie.out | sort | uniq | wc -l\n\n\n\n\nExercise 33 How to get the sseqid, sstart, and send column (column 2, 9, 10) from the soybean blast output file?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ncut -f 2,9,10 soybean.out\n\n\n\ngrep\nThe grep command is used to search for patterns within files or input streams. It stands for “global regular expression print” and is highly versatile for text processing.\ngrep [options] [pattern] [file]\nCommon Options:\n\n-i: Ignore case.\n-v: Invert match (show lines that do not match the pattern).\n-c: Count the number of matching lines.\n-n: Show line numbers.\n-r: Recursively search directories.\n\n\nExercise 34 How many times was gene gi|909637271|emb|LN713523.1| hit by sequences from corn metagenome sample:\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\ngrep \"gi|909637271|emb|LN713523.1|\" corn.out | wc -l"
  }
]